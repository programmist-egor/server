{"version":3,"file":"static/js/364.b52245cf.chunk.js","mappings":"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","sources":["utils/dataLang.js","components/modals/Lang.jsx","components/modals/Menu.jsx","components/modals/DrawerMenu.jsx","components/spinner/SpinnerUserMenu.jsx","http/index.js","services/auth.service.js","components/header/Header.jsx","assets/image/vk.svg","assets/image/telegram.svg","components/footer/Footer.jsx","components/buttons/ButtonIcon.jsx","components/search/ListSearch.jsx","utils/word-declensions.js","components/hooks/dataFormater.js","components/calendar/DataRange.jsx","components/buttons/ButtonCounter.jsx","components/buttons/Button.jsx","components/search/GuestHotel.jsx","utils/json-parse-object.js","services/object.service.js","components/search/SearchPanel.jsx","components/blocks/BannerSearch.jsx","services/setting-page.service.js","components/blocks/WhereToGo.jsx","components/blocks/BenefitBlock.jsx","components/blocks/MobileApp.jsx","routes/Main.jsx","components/inputs/RangePrice.jsx","services/number.service.js","components/filters/Filter.jsx","components/cards/Rating.jsx","services/favorite.service.js","utils/createDataNow.js","components/slider/SliderMini.jsx","utils/formating-money.js","services/photo-object.service.js","services/rating.service.js","components/cards/HotelCard.jsx","components/buttons/ButtonPage.jsx","components/blocks/BalloonYandexMap.jsx","components/maps/HotelMap.jsx","components/modals/Sort.jsx","routes/HotelAndMap.jsx","components/header/HeaderHotelNumber.jsx","components/slider/SliderBig.jsx","services/category.service.js","services/photo-number.service.js","utils/varible.js","components/MoreNumberItem/MoreNumberItem.jsx","components/modals/MoreNumber.jsx","components/cards/ListNumberCard.jsx","components/modals/NumberList.jsx","components/blocks/QuickBooking.jsx","components/blocks/DescriptionHotel.jsx","components/blocks/HotelRules.jsx","components/search/GuestHotelNumber.jsx","components/blocks/CheckAvailability.jsx","components/blocks/Availability.jsx","components/blocks/HotelAmenities.jsx","components/blocks/GuestRating.jsx","services/booking.service.js","components/review/Review.jsx","components/blocks/ReviewClients.jsx","components/blocks/HotelAddressOnMap.jsx","routes/HotelNumber.jsx","validation/password.js","components/modals/ResetPassword.jsx","components/modals/VerifedEmail.jsx","components/modals/ResetPasswordLogIn.jsx","components/forms/LoginForm.jsx","routes/Login.jsx","components/forms/RegistrationForm.jsx","routes/Registration.jsx","components/custom-select/CustomSelect.jsx","services/users.service.js","utils/generatorId.js","validation/validation-edit-booking.js","components/blocks/ContactData.jsx","routes/PersonalArea.jsx","components/cards/Favorite.jsx","components/blocks/ListFavoriteUser.jsx","routes/user__data/FavoriteUserHotel.jsx","components/blocks/EditUserContactData.jsx","routes/user__data/EditUserData.jsx","components/modals/FinishedBooking.jsx","components/cards/Booking.jsx","components/blocks/ListBookingUser.jsx","routes/user__data/BookingUser.jsx","components/starting-page/StartingPage.jsx","components/forms/PayForm.jsx","routes/Pay.jsx","App.js"],"sourcesContent":["import ru from \"../assets/image/flags/ru.png\";\nimport usa from \"../assets/image/flags/usa.png\";\nimport china from \"../assets/image/flags/china.png\";\nimport india from \"../assets/image/flags/india.png\";\nimport pakistan from \"../assets/image/flags/pakistan.png\";\nimport indonezia from \"../assets/image/flags/indonezia.png\";\nimport spa from \"../assets/image/flags/spa.png\";\nimport turk from \"../assets/image/flags/turk.png\";\nimport japan from \"../assets/image/flags/japan.png\";\nimport bra from \"../assets/image/flags/port.png\";\nimport knr from \"../assets/image/flags/knr.png\";\nimport philip from \"../assets/image/flags/philip.png\";\nimport az from \"../assets/image/flags/az.png\";\nimport kz from \"../assets/image/flags/kz.png\";\nimport tadj from \"../assets/image/flags/tadj.png\";\nimport uzb from \"../assets/image/flags/uzb.png\";\nimport krg from \"../assets/image/flags/krg.png\";\nimport tur from \"../assets/image/flags/tur.png\";\n\nexport const langData = [\n    {id: 1, name: \"Русский\", img: ru}, {id: 2, name: \"England\", img: usa},\n    {id: 3, name: \"中國人\", img: china}, {id: 4, name: \"हिंदी\", img: india},\n    {id: 5, name: \"اردو\", img: pakistan}, {id: 6, name: \"Bahasa Indonesia\", img: indonezia},\n    {id: 7, name: \"Español\", img: spa}, {id: 8, name: \"Türkçe\", img: turk},\n    {id: 9, name: \"日本語\", img: japan}, {id: 10, name: \"Português\", img: bra},\n    {id: 11, name: \"한국인\", img: knr}, {id: 12, name: \"Pilipinas\", img: philip},\n    {id: 13, name: \"Azərbaycan\", img: az}, {id: 14, name: \"Қазақ\", img: kz},\n    {id: 15, name: \"Тоҷикӣ\", img: tadj}, {id: 16, name: \"О'zbek\", img: uzb},\n    {id: 17, name: \"Кыргызча\", img: krg}, {id: 18, name: \"Türkmenler\", img: tur},\n]","import {MenuItem} from \"@mui/material\";\nimport React from \"react\";\nimport {handlerLangChoose} from \"../../store/Main\";\nimport {useDispatch} from \"react-redux\";\nimport {langData} from \"../../utils/dataLang\";\n\nexport const Lang = ({style, handleLang}) => {\n    const dispatch = useDispatch()\n    return (\n        <div className={style}\n             onClick={handleLang}\n        >\n            <div className=\"modal__content__lang\">\n                <div className=\"modal__body\" >\n                    {langData.map(lang => (\n                        <MenuItem\n                            value={lang.name}\n                            key={lang.id}\n                            onClick={() => dispatch(handlerLangChoose({id: lang.id, name: lang.name, img: lang.img}))}\n                        >\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"center\",\n\n                                }}\n                            >\n                                <img\n                                    src={lang.img}\n                                    alt=\"ru\"\n                                    width={22}\n                                    height={22}\n                                    style={{\n                                        marginRight: \"10px\",\n                                        border: \"1px solid white\",\n                                        borderRadius: \"50%\",\n                                        boxShadow: \"0 0 5px var(--grey)\"\n                                }}\n                                /><span className=\"text__content__black__14\">{lang.name}</span>\n                            </div>\n                        </MenuItem>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import {\n    Icon24UserOutline,\n    Icon24UserAddOutline,\n    Icon24BuildingOutline\n} from '@vkontakte/icons';\nimport {BLACK} from \"../../theme/colors\";\nimport {Link} from \"react-router-dom\";\n\n\nexport const Menu = ({style, handleMenu}) => {\n    return (\n        <div className={style}\n\n        >\n            <div className=\"modal__content__menu\">\n                <div className=\"modal__body\">\n                    <Link\n                        to={\"/api/login\"}\n                        className=\"row__c__fs\"\n                        onClick={handleMenu}\n                        style={{\n                            cursor: \"pointer\"\n                        }}\n                    >\n                        <Icon24UserOutline color={BLACK}/>\n                        <span\n                            className=\"text__content__black__16\"\n                            style={{\n                                marginLeft: \"5px\"\n                            }}\n                        >Войти</span>\n                    </Link>\n                    <Link\n                        to={\"/api/registration\"}\n                        className=\"row__c__fs\"\n                        onClick={handleMenu}\n                        style={{\n                            cursor: \"pointer\",\n                            marginTop: \"5px\",\n                        }}\n                    >\n                        <Icon24UserAddOutline color={BLACK}/>\n                        <span\n                            className=\"text__content__black__16\"\n                            style={{\n                                marginLeft: \"5px\"\n                            }}\n                        >Зарегистрироваться</span>\n                    </Link>\n                    <Link\n                        to={\"extranet.yooking.ru\"}\n                        className=\"row__c__fs\"\n                        onClick={handleMenu}\n                        style={{\n                            cursor: \"pointer\",\n                            marginTop: \"5px\"\n                        }}\n                    >\n                        <Icon24BuildingOutline color={BLACK}/>\n                        <span\n                            className=\"text__content__black__16\"\n                            style={{\n                                marginLeft: \"5px\"\n                            }}\n                        >Зарегистрировать объект</span>\n                    </Link>\n                </div>\n            </div>\n        </div>\n    )\n}","import {Box, Divider, Drawer, FormControl, InputLabel, List, MenuItem, Select} from \"@mui/material\";\nimport React, {useState} from \"react\"\nimport {Icon24UserAddOutline, Icon24UserOutline, Icon28Menu} from \"@vkontakte/icons\";\nimport {BLACK} from \"../../theme/colors\";\nimport {Link} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {handlerLangChoose} from \"../../store/Main\";\nimport {langData} from \"../../utils/dataLang\";\n\nexport const DrawerMenu = () => {\n    const dispatch = useDispatch()\n    const langChoose = useSelector(state => state.main.langChoose)\n    const [state, setState] = useState({\n        top: false,\n        left: false,\n        bottom: false,\n        right: false,\n    });\n\n    const toggleDrawer = (anchor, open) => (event) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        }\n\n        setState({...state, [anchor]: open});\n    };\n\n\n    const ListItem = (anchor) => (\n        <Box\n            sx={{width: anchor === 'top' || anchor === 'bottom' ? 'auto' : 280}}\n            role=\"presentation\"\n            onClick={toggleDrawer(anchor, false)}\n            onKeyDown={toggleDrawer(anchor, false)}\n        >\n            <List>\n                {[\n                    {\n                        name: 'Войти',\n                        link: \"/api/login\",\n                        icon: <Icon24UserOutline color={BLACK}/>\n                    },\n                    {\n                        name: 'Зарегистрироваться',\n                        link: \"/api/registration\",\n                        icon: <Icon24UserAddOutline color={BLACK}/>\n                    },\n                    {\n                        name: 'Зарегистрировать объект',\n                        link: \"extranet.yooking.ru\",\n                        icon: <Icon24UserOutline color={BLACK}/>\n                    },\n                ].map((item) => (\n                    <Link\n                        key={item.name}\n                        to={item.link}\n                        className=\"row__c__fs\"\n                        style={{cursor: \"pointer\", height: \"30px\", paddingLeft: \"10px\"}}\n                    >\n                        {item.icon}\n                        <span\n                            className=\"text__content__black__16\"\n                            style={{\n                                marginLeft: \"5px\"\n                            }}\n                        >{item.name}\n                        </span>\n                    </Link>\n                ))}\n            </List>\n            <Divider/>\n            <FormControl sx={{m: 1, width: \"90%\"}} size=\"small\">\n                <InputLabel id=\"demo-select-small-label\">Язык</InputLabel>\n                <Select\n                    labelId=\"demo-select-small-label\"\n                    id=\"demo-select-small\"\n                    value={langChoose.name}\n                    label=\"Язык\"\n                    onChange={(e) => console.log(e.target.value)}\n                >\n                    {langData.map(lang => (\n                        <MenuItem\n                            value={lang.name}\n                            key={lang.id}\n                            onClick={() => dispatch(handlerLangChoose({id: lang.id, name: lang.name, img: lang.img}))}\n                        >\n                            <div\n                                style={{\n                                    display: \"flex\",\n                                    flexDirection: \"row\",\n                                    justifyContent: \"flex-start\",\n                                    alignItems: \"center\"\n                                }}\n                            >\n                                <img\n                                    src={lang.img}\n                                    alt=\"ru\"\n                                    width={22}\n                                    height={22}\n                                    style={{\n                                        marginRight: \"10px\",\n                                        border: \"1px solid white\",\n                                        borderRadius: \"50%\",\n                                        boxShadow: \"0 0 5px var(--grey)\"\n                                }}\n                                />{lang.name}\n                            </div>\n                        </MenuItem>\n                    ))}\n                </Select>\n            </FormControl>\n        </Box>\n    );\n\n    return (\n        <>\n            <div\n                className=\"row__c__fe\"\n                style={{cursor: \"pointer\"}}\n                onClick={toggleDrawer(\"right\", true)}\n            >\n                <Icon28Menu width={30} height={30} color={BLACK}/>\n            </div>\n            <Drawer\n                anchor={\"right\"}\n                open={state[\"right\"]}\n                onClose={toggleDrawer(\"right\", false)}\n            >\n                {ListItem(\"right\")}\n            </Drawer>\n        </>\n    )\n}","import PulseLoader from \"react-spinners/PulseLoader\";\nimport {ORANGE} from \"../../theme/colors\";\n\nexport const SpinnerUserMenu = () => {\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"90vh\"\n            }}\n        >\n                <PulseLoader\n                    color={ORANGE}\n                    loading={true}\n                    size={10}\n                />\n        </div>\n    )\n}","import axios from \"axios\";\n\nexport const API_URL =  \"http://31.129.111.184\";\n\n\nconst $api = axios.create({\n    withCredentials: true,\n    baseURL: API_URL\n})\n\n\n\n\n$api.interceptors.request.use((config) => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`\n    return config\n})\n\n$api.interceptors.response.use(\n    (response) => {\n        return response;\n    },\n    async (error) => {\n        if (!error.response) {\n            // Обработка ошибок сети\n            console.log(\"Network error:\", error.message);\n            throw error;\n        }\n\n        const originalRequest = error.config;\n\n        if (error.response.status === 401 && !originalRequest._isRetry) {\n            originalRequest._isRetry = true;\n            try {\n                const response = await axios.get(`${API_URL}/refresh`, { withCredentials: true });\n                if (response.data && response.data.accessToken) {\n                    localStorage.setItem('token', response.data.accessToken);\n                    // Повторный запрос с обновленным токеном\n                    return $api.request(originalRequest);\n                } else {\n                    console.log(\"Access token not found in refresh response\");\n                    throw new Error(\"Access token not found\");\n                }\n            } catch (e) {\n                console.log(\"Failed to refresh token:\", e.message);\n                throw e;\n            }\n        }\n\n        throw error;\n    }\n);\nexport {$api}\n","import {$api} from \"../http\";\n\n\nexport default class AuthService {\n    static async registration(newUser) {\n        console.log(\"registration AuthService\",newUser);\n        return await $api.post(\"/api/registration\", {newUser})\n    }\n    static async login(email, password) {\n        return await $api.post(\"/api/login\", {email, password})\n    }\n    // static async activate(email, password) {\n    //     return await $api.post(\"/api/activete\", {email, password})\n    // }\n    static async logout() {\n        return await $api.post(\"/api/logout\")\n    }\n    static async refresh() {\n        return await $api.get(\"/api/refresh\", { withCredentials: true })\n    }\n}\n\n","import \"./Header.css\"\nimport {\n    Icon28Menu,\n    Icon24User,\n    Icon24NotebookCheckOutline,\n    Icon24DoorArrowRightOutline,\n    Icon24Like,\n    Icon24WriteOutline\n} from '@vkontakte/icons';\nimport {BLACK, GREY_BLACK, WHITE} from \"../../theme/colors\";\nimport logo from \"../../assets/image/logo_blue.png\"\nimport {Link} from \"react-router-dom\";\nimport {Lang} from \"../modals/Lang\";\nimport { modalLangHandler, modalMenuHandler} from \"../../store/Main\";\nimport {Menu} from \"../modals/Menu\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {DrawerMenu} from \"../modals/DrawerMenu\";\nimport Drawer from \"react-modern-drawer\";\nimport React, {useState} from \"react\";\nimport {SpinnerUserMenu} from \"../spinner/SpinnerUserMenu\";\nimport {loginFailure, logout} from \"../../store/authSlice\";\nimport AuthService from \"../../services/auth.service\";\n\nexport const Header = () => {\n    const dispatch = useDispatch();\n    const token = useSelector(state => state.auth.token);\n    const langChoose = useSelector((state) => state.main.langChoose);\n    const loadingUserMenu = useSelector((state) => state.main.loadingUserMenu);\n    const modalLang = useSelector((state) => state.main.modalLang);\n    const modalMenu = useSelector((state) => state.main.modalMenu);\n    const clientData = useSelector((state) => state.client__data.dateClient);\n    const [isOpenSort, setIsOpenSort] = useState(false);\n\n\n    const toggleDrawerSort = () => {\n        setIsOpenSort((prevState) => !prevState);\n    };\n\n    const logoutUser = async () => {\n        try {\n            await AuthService.logout();\n            dispatch(logout());\n            toggleDrawerSort()\n        } catch (error) {\n            dispatch(loginFailure(error.message));\n        } finally {\n            console.log(\"logout\");\n        }\n    }\n\n    const handleClickOutsideMenu = () => {\n        dispatch(modalMenuHandler(!modalMenu))\n    };\n    const handleClickOutsideLang = () => {\n        dispatch(modalLangHandler(!modalLang))\n    };\n    return (\n        <div>\n            <div className=\"row__sb__c desktop__header\"\n                 style={{\n                     paddingRight: \"40px\",\n                     paddingLeft: \"40px\",\n                     background: WHITE,\n                     height: \"40px\"\n                 }}\n            >\n                <Link\n                    to={\"/\"}\n                    style={{\n                        position: \"relative\",\n                        display: \"flex\",\n                        flexDirection: \"row\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\"\n                    }}\n                >\n                    <img\n                        src={logo}\n                        alt=\"logo\"\n                        width={160}\n                        height={22}\n                        style={{cursor: \"pointer\"}}\n                    />\n                </Link>\n\n                <div className=\"row__sb__c\">\n                    <div\n                        style={{\n                            position: \"relative\",\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\"\n                        }}>\n                        {\n                            modalLang && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideLang}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n                        <img\n                            onClick={() => dispatch(modalLangHandler(!modalLang))}\n                            src={langChoose.img}\n                            alt=\"ru\"\n                            width={22}\n                            height={22}\n                            style={{\n                                marginRight: \"30px\",\n                                cursor: \"pointer\",\n                                border: \"1px solid white\",\n                                borderRadius: \"50%\",\n                                boxShadow: \"0 0 5px var(--grey)\"\n                            }}\n                        />\n                        <Lang\n                            handleLang={() => dispatch(modalLangHandler(!modalLang))}\n                            style={modalLang ? \"modal__lang\" : \"modal__none\"}\n                        />\n                    </div>\n                    {\n                        !loadingUserMenu ?\n                            token ?\n                                <div >\n                                    <div\n                                        className=\"row__sb__c\"\n                                        style={{cursor: \"pointer\"}}\n                                        onClick={() => toggleDrawerSort()}\n                                    >\n                                        <span className=\"user__icon\">\n                                            <Icon24User width={20} height={20} color={WHITE}/>\n                                        </span>\n                                        <div className=\"column__fs__c \">\n                                            <span className=\"text__content__black__b__16\" style={{marginLeft: \"10px\"}}>\n                                                {clientData.name === \"\" ? \"Пользователь\" : clientData.name}\n                                            </span>\n                                            <span className=\"text__content__grey__12\" style={{marginLeft: \"10px\"}}>\n                                                Личный кабинет\n                                            </span>\n                                        </div>\n\n                                    </div>\n                                    <Drawer\n                                        open={isOpenSort}\n                                        onClose={toggleDrawerSort}\n                                        direction='right'\n                                        style={{height: \"100vh\"}}\n                                    >\n                                        <div className=\"column__fs__c\">\n                                            <div className=\"row__c__fs borderBottom\">\n                                                <span className=\"user__icon\">\n                                                    <Icon24User width={20} height={20} color={WHITE}/>\n                                                </span>\n                                                <h3 style={{marginLeft: \"10px\"}}>\n                                                    {clientData.name === \"\" ? \"Пользователь\" : clientData.name}\n                                                </h3>\n                                            </div>\n                                            <Link className=\"row__c__fs nav__item__user\" to={\"/booking\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24NotebookCheckOutline width={24} height={24}\n                                                                                color={GREY_BLACK}/>\n                                                </span>\n                                                <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Бронирование\n                                                </span>\n                                            </Link>\n                                            <Link className=\"row__c__fs nav__item__user\" to={\"/favorites\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24Like width={24} height={24} color={GREY_BLACK}/>\n                                                </span>\n                                                <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Избранное\n                                                </span>\n                                            </Link>\n                                            <Link className=\"row__c__fs nav__item__user\" to={\"/edit_user\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24WriteOutline width={24} height={24} color={GREY_BLACK}/>\n                                                </span>\n                                                <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Редактировать данные\n                                                </span>\n                                            </Link>\n                                            <div\n                                                className=\"row__c__fs exit__item__btn\"\n                                                onClick={() => logoutUser()}\n                                            >\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24DoorArrowRightOutline width={24} height={24} color={GREY_BLACK}/>\n                                                </span>\n                                                <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Выйти\n                                                </span>\n                                            </div>\n                                        </div>\n                                    </Drawer>\n                                </div>\n                                :\n                                <div style={{position: \"relative\"}}>\n                                    {\n                                        modalMenu && (\n                                            <div\n                                                className=\"click-outside-modal-handler\"\n                                                onClick={handleClickOutsideMenu}\n                                                style={{\n                                                    position: 'fixed',\n                                                    top: 0,\n                                                    left: 0,\n                                                    right: 0,\n                                                    bottom: 0,\n                                                    zIndex: 1,\n                                                }}\n                                            ></div>\n                                        )\n                                    }\n                                    <div\n                                        className=\"row__sb__c\"\n                                        style={{cursor: \"pointer\"}}\n                                        onClick={() => dispatch(modalMenuHandler(!modalMenu))}\n                                    >\n                                        <Icon28Menu width={30} height={30} color={BLACK}/>\n                                        <span className=\"text__content__black__16\" style={{marginLeft: \"10px\"}}>\n                                            Меню\n                                        </span>\n                                    </div>\n                                    <Menu\n                                        handleMenu={() => dispatch(modalMenuHandler(!modalMenu))}\n                                        style={modalMenu ? \"modal__menu\" : \"modal__none\"}\n                                    />\n                                </div>\n                            :\n                            <SpinnerUserMenu/>\n                    }\n                </div>\n            </div>\n\n            <div className=\"row__sb__c tablet__header\"\n                 style={{\n                     paddingRight: \"40px\",\n                     paddingLeft: \"40px\",\n                     background: WHITE,\n                     height: \"40px\"\n                 }}\n            >\n                <Link to={\"/\"}>\n                    <img\n                        src={logo}\n                        alt=\"logo\"\n                        width={160}\n                        height={22}\n                        style={{cursor: \"pointer\"}}\n                    />\n                </Link>\n                {\n                    !loadingUserMenu ?\n                        token ?\n                            <div style={{position: \"relative\"}}>\n                                <div\n                                    className=\"row__sb__c\"\n                                    style={{cursor: \"pointer\"}}\n                                    onClick={() => toggleDrawerSort()}\n                                >\n                                        <span className=\"user__icon\">\n                                            <Icon24User width={20} height={20} color={WHITE}/>\n                                        </span>\n                                    <div className=\"column__fs__c \">\n                                            <span className=\"text__content__black__b__16\" style={{marginLeft: \"10px\"}}>\n                                                {clientData.name === \"\" ? \"Пользователь\" : clientData.name}\n                                            </span>\n                                        <span className=\"text__content__grey__12\" style={{marginLeft: \"10px\"}}>\n                                                Личный кабинет\n                                            </span>\n                                    </div>\n\n                                </div>\n                                <Drawer\n                                    open={isOpenSort}\n                                    onClose={toggleDrawerSort}\n                                    direction='right'\n                                    style={{height: \"100vh\"}}\n                                >\n                                    <div className=\"column__fs__c\">\n                                        <div className=\"row__c__fs borderBottom\">\n                                                <span className=\"user__icon\">\n                                                    <Icon24User width={20} height={20} color={WHITE}/>\n                                                </span>\n                                            <h3 style={{marginLeft: \"10px\"}}>\n                                                {clientData.name === \"\" ? \"Пользователь\" : clientData.name}\n                                            </h3>\n                                        </div>\n                                        <Link className=\"row__c__fs nav__item__user\" to={\"/booking\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24NotebookCheckOutline width={24} height={24}\n                                                                                color={GREY_BLACK}/>\n                                                </span>\n                                            <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Бронирование\n                                                </span>\n                                        </Link>\n                                        <Link className=\"row__c__fs nav__item__user\" to={\"/favorites\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24Like width={24} height={24} color={GREY_BLACK}/>\n                                                </span>\n                                            <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Избранное\n                                                </span>\n                                        </Link>\n                                        <Link className=\"row__c__fs nav__item__user\" to={\"/edit_user\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24WriteOutline width={24} height={24} color={GREY_BLACK}/>\n                                                </span>\n                                            <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Редактировать данные\n                                                </span>\n                                        </Link>\n                                        <div\n                                            className=\"row__c__fs exit__item__btn\"\n                                            onClick={() => logoutUser()}\n                                        >\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24DoorArrowRightOutline width={24} height={24}\n                                                                                 color={GREY_BLACK}/>\n                                                </span>\n                                            <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Выйти\n                                                </span>\n                                        </div>\n                                    </div>\n                                </Drawer>\n                            </div>\n                            :\n                            <div style={{position: \"relative\"}}>\n                                <div\n                                    className=\"row__sb__c\"\n                                    style={{cursor: \"pointer\"}}\n                                    onClick={() => dispatch(modalMenuHandler(!modalMenu))}\n                                >\n                                    <DrawerMenu/>\n                                </div>\n                            </div>\n                        :\n                        <SpinnerUserMenu/>\n                }\n            </div>\n            <div className=\"row__sb__c mobile__avatar__user\"\n                 style={{\n                     paddingRight: \"40px\",\n                     paddingLeft: \"40px\",\n                     background: WHITE,\n                     height: \"40px\"\n                 }}\n            >\n                <Link to={\"/\"}>\n                    <img\n                        src={logo}\n                        alt=\"logo\"\n                        width={160}\n                        height={22}\n                        style={{cursor: \"pointer\"}}\n                    />\n                </Link>\n                {\n                    !loadingUserMenu ?\n                        token ?\n                            <div style={{position: \"relative\"}}>\n                                <div\n                                    className=\"row__sb__c\"\n                                    style={{cursor: \"pointer\"}}\n                                    onClick={() => toggleDrawerSort()}\n                                >\n                                <span className=\"user__icon\">\n                                    <Icon24User width={20} height={20} color={WHITE}/>\n                                </span>\n                                </div>\n                                <Drawer\n                                    open={isOpenSort}\n                                    onClose={toggleDrawerSort}\n                                    direction='right'\n                                    style={{height: \"100vh\"}}\n                                >\n                                    <div className=\"column__fs__c\">\n                                        <div className=\"row__c__fs borderBottom\">\n                                                <span className=\"user__icon\">\n                                                    <Icon24User width={20} height={20} color={WHITE}/>\n                                                </span>\n                                            <h3 style={{marginLeft: \"10px\"}}>\n                                                {clientData.name === \"\" ? \"Пользователь\" : clientData.name}\n                                            </h3>\n                                        </div>\n                                        <Link className=\"row__c__fs nav__item__user\" to={\"/booking\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24NotebookCheckOutline width={24} height={24}\n                                                                                color={GREY_BLACK}/>\n                                                </span>\n                                            <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Бронирование\n                                                </span>\n                                        </Link>\n                                        <Link className=\"row__c__fs nav__item__user\" to={\"/favorites\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24Like width={24} height={24} color={GREY_BLACK}/>\n                                                </span>\n                                            <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Избранное\n                                                </span>\n                                        </Link>\n                                        <Link className=\"row__c__fs nav__item__user\" to={\"/edit_user\"}>\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24WriteOutline width={24} height={24} color={GREY_BLACK}/>\n                                                </span>\n                                            <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Редактировать данные\n                                                </span>\n                                        </Link>\n                                        <div\n                                            className=\"row__c__fs exit__item__btn\"\n                                            onClick={() => logoutUser()}\n                                        >\n                                                <span className=\"nav__item__user__icon\">\n                                                    <Icon24DoorArrowRightOutline width={24} height={24}\n                                                                                 color={GREY_BLACK}/>\n                                                </span>\n                                            <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                                    Выйти\n                                                </span>\n                                        </div>\n                                    </div>\n                                </Drawer>\n                            </div>\n                            :\n                            <div style={{position: \"relative\"}}>\n                                <div\n                                    className=\"row__sb__c\"\n                                    style={{cursor: \"pointer\"}}\n                                    onClick={() => dispatch(modalMenuHandler(!modalMenu))}\n                                >\n                                    <DrawerMenu/>\n                                </div>\n                            </div>\n                        :\n                        <SpinnerUserMenu/>\n                }\n            </div>\n        </div>\n    )\n}","var _path, _path2;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgVk(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 48 48\",\n    width: \"48px\",\n    height: \"48px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#1976d2\",\n    d: \"M42,37c0,2.762-2.238,5-5,5H11c-2.761,0-5-2.238-5-5V11c0-2.762,2.239-5,5-5h26c2.762,0,5,2.238,5,5 V37z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M35.937,18.041c0.046-0.151,0.068-0.291,0.062-0.416C35.984,17.263,35.735,17,35.149,17h-2.618 c-0.661,0-0.966,0.4-1.144,0.801c0,0-1.632,3.359-3.513,5.574c-0.61,0.641-0.92,0.625-1.25,0.625C26.447,24,26,23.786,26,23.199 v-5.185C26,17.32,25.827,17,25.268,17h-4.649C20.212,17,20,17.32,20,17.641c0,0.667,0.898,0.827,1,2.696v3.623 C21,24.84,20.847,25,20.517,25c-0.89,0-2.642-3-3.815-6.932C16.448,17.294,16.194,17,15.533,17h-2.643 C12.127,17,12,17.374,12,17.774c0,0.721,0.6,4.619,3.875,9.101C18.25,30.125,21.379,32,24.149,32c1.678,0,1.85-0.427,1.85-1.094 v-2.972C26,27.133,26.183,27,26.717,27c0.381,0,1.158,0.25,2.658,2c1.73,2.018,2.044,3,3.036,3h2.618 c0.608,0,0.957-0.255,0.971-0.75c0.003-0.126-0.015-0.267-0.056-0.424c-0.194-0.576-1.084-1.984-2.194-3.326 c-0.615-0.743-1.222-1.479-1.501-1.879C32.062,25.36,31.991,25.176,32,25c0.009-0.185,0.105-0.361,0.249-0.607 C32.223,24.393,35.607,19.642,35.937,18.041z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgVk);\nexport default __webpack_public_path__ + \"static/media/vk.4d7dd60e56dd66aa7404e75eb57f29a7.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _path2, _path3, _path4;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 48 48\",\n    width: \"48px\",\n    height: \"48px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#29b6f6\",\n    d: \"M24 4A20 20 0 1 0 24 44A20 20 0 1 0 24 4Z\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#fff\",\n    d: \"M33.95,15l-3.746,19.126c0,0-0.161,0.874-1.245,0.874c-0.576,0-0.873-0.274-0.873-0.274l-8.114-6.733 l-3.97-2.001l-5.095-1.355c0,0-0.907-0.262-0.907-1.012c0-0.625,0.933-0.923,0.933-0.923l21.316-8.468 c-0.001-0.001,0.651-0.235,1.126-0.234C33.667,14,34,14.125,34,14.5C34,14.75,33.95,15,33.95,15z\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#b0bec5\",\n    d: \"M23,30.505l-3.426,3.374c0,0-0.149,0.115-0.348,0.12c-0.069,0.002-0.143-0.009-0.219-0.043 l0.964-5.965L23,30.505z\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"#cfd8dc\",\n    d: \"M29.897,18.196c-0.169-0.22-0.481-0.26-0.701-0.093L16,26c0,0,2.106,5.892,2.427,6.912 c0.322,1.021,0.58,1.045,0.58,1.045l0.964-5.965l9.832-9.096C30.023,18.729,30.064,18.416,29.897,18.196z\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgTelegram);\nexport default __webpack_public_path__ + \"static/media/telegram.b0589b5e724dd92cc132ddb6a0e049d9.svg\";\nexport { ForwardRef as ReactComponent };","import \"./Footer.css\"\nimport {BLACK} from \"../../theme/colors\";\nimport {Link} from \"react-router-dom\"\nimport logo from \"../../assets/image/logo_blue.png\";\nimport vk from \"../../assets/image/vk.svg\"\nimport telegram from \"../../assets/image/telegram.svg\"\n\nexport const Footer = () => {\n    return (\n        <div>\n            <div className=\"column desktop__footer__block\">\n                <div className=\"row__sa__fs\" style={{background: BLACK}}>\n                    <div className=\"column__sb__c\" style={{marginTop: \"31.920px\"}}>\n                        <Link to={\"/\"}>\n                            <img\n                                src={logo}\n                                alt=\"logo\"\n                                width={274}\n                                height={37}\n                                style={{cursor: \"pointer\"}}\n                            />\n                        </Link>\n                        {/*<span className=\"number__phone__white__b__32\">8 800 556 69 99</span>*/}\n                        <span\n                            className=\"text__content__white__16\"\n                            style={{\n                                marginTop: \"10px\",\n                                marginBottom: \"10px\"\n                            }}\n                        >\n                        Следите за нами через соц. сети\n                    </span>\n                        <div className=\"row__sa__c\">\n                            <Link to={\"https://vk.com/\"}>\n                                <img\n                                    src={vk}\n                                    alt=\"vk\"\n                                    width={48}\n                                    height={48}\n                                    style={{cursor: \"pointer\", padding: \"10px\"}}\n                                />\n                            </Link>\n                            <Link to={\"https://web.telegram.org/\"}>\n                                <img\n                                    src={telegram}\n                                    alt=\"telegram\"\n                                    width={48}\n                                    height={48}\n                                    style={{cursor: \"pointer\", padding: \"10px\"}}\n                                />\n                            </Link>\n                        </div>\n                    </div>\n                    <div className=\"column__fs\">\n                        <h4 className=\"text__content__white__b__24\">Клиентам</h4>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Часто задаваемые вопросы\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Служба поддержки 24/7\n                </span>\n                    </div>\n                    <div className=\"column__fs\">\n                        <h4 className=\"text__content__white__b__24\">Парнтёрам</h4>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Объект размещения\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Корпоративным клиентам\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Поиск отелей на вашем сайте\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Реклама и PR\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Контакты\n                </span>\n                    </div>\n                </div>\n                <div\n                    className=\"row__sa__fs\"\n                    style={{\n                        background: BLACK,\n                        paddingTop: \"50px\",\n                        paddingBottom: \"30px\"\n                    }}\n                >\n                <span\n                    className=\"text__content__grey__16\"\n                    style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                >\n                    Политика хранения и обработки персональных данных\n                </span>\n                </div>\n            </div>\n            <div className=\"column tablet__530_919__footer__block\">\n                <div className=\"row__sa__fs\" style={{background: BLACK}}>\n                    <div className=\"column__fs\">\n                        <h4 className=\"text__content__white__b__24\">Клиентам</h4>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Часто задаваемые вопросы\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Служба поддержки 24/7\n                </span>\n                    </div>\n                    <div className=\"column__fs\">\n                        <h4 className=\"text__content__white__b__24\">Парнтёрам</h4>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Объект размещения\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Корпоративным клиентам\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Поиск отелей на вашем сайте\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Реклама и PR\n                </span>\n                        <span\n                            className=\"text__content__grey__16\"\n                            style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                        >\n                    Контакты\n                </span>\n                    </div>\n                </div>\n                <div className=\"column__sb__c\" style={{paddingTop: \"30px\", background: BLACK}}>\n                    <Link to={\"/\"}>\n                        <img\n                            src={logo}\n                            alt=\"logo\"\n                            width={274}\n                            height={37}\n                            style={{cursor: \"pointer\"}}\n                        />\n                    </Link>\n                    {/*<span className=\"number__phone__white__b__32\">8 800 556 69 99</span>*/}\n                    <span\n                        className=\"text__content__white__16\"\n                        style={{\n                            marginTop: \"10px\",\n                            marginBottom: \"10px\"\n                        }}\n                    >\n                        Следите за нами через соц. сети\n                    </span>\n                    <div className=\"row__sa__c\">\n                        <Link to={\"https://vk.com/\"}>\n                            <img\n                                src={vk}\n                                alt=\"vk\"\n                                width={48}\n                                height={48}\n                                style={{cursor: \"pointer\", padding: \"10px\"}}\n                            />\n                        </Link>\n                        <Link to={\"https://web.telegram.org/\"}>\n                            <img\n                                src={telegram}\n                                alt=\"telegram\"\n                                width={48}\n                                height={48}\n                                style={{cursor: \"pointer\", padding: \"10px\"}}\n                            />\n                        </Link>\n                    </div>\n                </div>\n                <div\n                    className=\"row__sa__fs\"\n                    style={{\n                        background: BLACK,\n                        paddingTop: \"50px\",\n                        paddingBottom: \"30px\"\n                    }}\n                >\n                <span\n                    className=\"text__content__grey__16\"\n                    style={{cursor: \"pointer\", paddingTop: \"5px\"}}\n                >\n                    Политика хранения и обработки персональных данных\n                </span>\n                </div>\n            </div>\n\n            <div className=\"column__sb__c mobile__0_529__footer__block\" style={{background: BLACK}}>\n                <div className=\"column__fs\">\n                    <h4 className=\"text__content__white__b__24\" style={{textAlign: \"center\"}}>Клиентам</h4>\n                    <span\n                        className=\"text__content__grey__16\"\n                        style={{cursor: \"pointer\", paddingTop: \"5px\", textAlign: \"center\"}}\n                    >\n                    Часто задаваемые вопросы\n                </span>\n                    <span\n                        className=\"text__content__grey__16\"\n                        style={{cursor: \"pointer\", paddingTop: \"5px\", textAlign: \"center\"}}\n                    >\n                    Служба поддержки 24/7\n                </span>\n                </div>\n                <div className=\"column__fs\">\n                    <h4 className=\"text__content__white__b__24\" style={{textAlign: \"center\"}}>Парнтёрам</h4>\n                    <span\n                        className=\"text__content__grey__16\"\n                        style={{cursor: \"pointer\", paddingTop: \"5px\", textAlign: \"center\"}}\n                    >\n                    Объект размещения\n                </span>\n                    <span\n                        className=\"text__content__grey__16\"\n                        style={{cursor: \"pointer\", paddingTop: \"5px\", textAlign: \"center\"}}\n                    >\n                    Корпоративным клиентам\n                </span>\n                    <span\n                        className=\"text__content__grey__16\"\n                        style={{cursor: \"pointer\", paddingTop: \"5px\", textAlign: \"center\"}}\n                    >\n                    Поиск отелей на вашем сайте\n                </span>\n                    <span\n                        className=\"text__content__grey__16\"\n                        style={{cursor: \"pointer\", paddingTop: \"5px\", textAlign: \"center\"}}\n                    >\n                    Реклама и PR\n                </span>\n                    <span\n                        className=\"text__content__grey__16\"\n                        style={{cursor: \"pointer\", paddingTop: \"5px\", textAlign: \"center\"}}\n                    >\n                    Контакты\n                </span>\n                </div>\n\n                <div className=\"column__sb__c\" style={{paddingTop: \"30px\", background: BLACK}}>\n                    <Link to={\"/\"}>\n                        <img\n                            src={logo}\n                            alt=\"logo\"\n                            width={274}\n                            height={37}\n                            style={{cursor: \"pointer\"}}\n                        />\n                    </Link>\n                    <span className=\"number__phone__white__b__32\">8 800 556 69 99</span>\n                    <span\n                        className=\"text__content__white__16\"\n                        style={{\n                            marginTop: \"10px\",\n                            marginBottom: \"10px\",\n\n                        }}\n                    >\n                        Следите за нами через соц. сети\n                    </span>\n                    <div className=\"row__sa__c\">\n                        <Link to={\"https://vk.com/\"}>\n                            <img\n                                src={vk}\n                                alt=\"vk\"\n                                width={48}\n                                height={48}\n                                style={{cursor: \"pointer\", padding: \"10px\"}}\n                            />\n                        </Link>\n                        <Link to={\"https://web.telegram.org/\"}>\n                            <img\n                                src={telegram}\n                                alt=\"telegram\"\n                                width={48}\n                                height={48}\n                                style={{cursor: \"pointer\", padding: \"10px\"}}\n                            />\n                        </Link>\n                    </div>\n                </div>\n                <div className=\"row__c__c\" style={{\n                    background: BLACK,\n                    paddingTop: \"50px\",\n                    paddingBottom: \"30px\"\n                }}>\n                        <span className=\"text__content__grey__12\"\n                              style={{cursor: \"pointer\", paddingTop: \"5px\", textAlign: \"center\"}}>\n                            Политика хранения и обработки персональных данных\n                        </span>\n                </div>\n            </div>\n        </div>\n    )\n}","import \"./Buttons.css\"\nimport {Link} from \"react-router-dom\";\n\nexport const ButtonIcon = ({icon, name,ml,mt, handler,background, mb, style, styleText, flexGrow, width, link}) => {\n    return (\n        <Link to={link}\n            className={style}\n            onClick={handler}\n            style={{\n                background: background,\n                width: width,\n                marginLeft: ml,\n                flexGrow: flexGrow,\n                marginBottom: mb,\n                marginTop: mt\n            }}\n        >\n            <span className=\"iconBtn\">{icon}</span>\n            <span className={styleText}>{name}</span>\n        </Link>\n    )\n}","\nexport const ListSearch = ({style, handle, city}) => {\n\n    return (\n        <div className={style} >\n            <div className=\"modal__content__list__search\">\n                <div className=\"modal__body\">\n                    <div className=\"column__fs\" style={{marginBottom: \"10px\"}}>\n                        {city.map(item => (\n                            <span\n                                key={item.hotelId}\n                                onClick={() => handle(\"city\",{city: item.city, hotelId: item.hotelId, location: item.location})}\n                                className=\"text__content__black__14 list__search\"\n                            >\n                                {item.city}\n                            </span>\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","// wordDeclension.js\nexport function wordDeclension(value) {\n    switch (value) {\n        case 1:\n            return \"Гость\";\n        case 2:\n            return \"Гостя\";\n        case 3:\n            return \"Гостя\";\n        case 4:\n            return \"Гостя\";\n        case 21:\n            return \"Гость\";\n        case 22:\n            return \"Гостя\";\n        case 23:\n            return \"Гостя\";\n        case 24:\n            return \"Гостя\";\n        default:\n            return \"Гостей\"\n    }\n}\n\n// wordDeclensionNumber.js\nexport function wordDeclensionNumber(value) {\n    switch (value) {\n        case 1:\n            return \"Номер\";\n        case 2:\n            return \"Номера\";\n        case 3:\n            return \"Номера\";\n        case 4:\n            return \"Номера\";\n        case 21:\n            return \"Номер\";\n        case 22:\n            return \"Номера\";\n        case 23:\n            return \"Номера\";\n        case 24:\n            return \"Номера\";\n        default:\n            return \"Номеров\"\n    }\n}\n\n// wordDeclensionNight.js\nexport function wordDeclensionNight(value) {\n    switch (value) {\n        case 1:\n            return \"Ночь\";\n        case 2:\n            return \"Ночи\";\n        case 3:\n            return \"Ночи\";\n        case 4:\n            return \"Ночи\";\n        case 21:\n            return \"Ночь\";\n        case 22:\n            return \"Ночи\";\n        case 23:\n            return \"Ночи\";\n        case 24:\n            return \"Ночи\";\n        case 31:\n            return \"Ночь\";\n        default:\n            return \"Ночей\"\n    }\n}\n\nexport function getAccommodationCity(city) {\n    const lastChar = city[city.length - 1];\n    const lastTwoChars = city.slice(-2);\n\n    if (lastTwoChars === \"ов\" || lastTwoChars === \"ин\" || lastTwoChars === \"ый\" || lastTwoChars === \"ск\"|| lastTwoChars === \"рг\") {\n        return city + \"е\";\n    } else if (lastChar === \"а\") {\n        return city.slice(0, -1) + \"е\";\n    } else {\n        return city;\n    }\n}","export const dateFormater = (date) => {\n    let arr = []\n    const value = date.toLocaleDateString().replace(/[./]/g, \"-\");\n    arr.push(value.slice(6, 10))\n    arr.push(value.slice(3, 5))\n    arr.push(value.slice(0, 2))\n    return arr.join(\"-\")\n}\n\nexport const dayMonth = (value) => {\n    switch (value.substr(3, 2)) {\n        case \"01\":\n            return \"янв.\";\n        case \"02\":\n            return \"фев.\";\n        case \"03\":\n            return \"мар.\";\n        case \"04\":\n            return \"апр.\";\n        case \"05\":\n            return \"май.\";\n        case \"06\":\n            return \"июн.\";\n        case \"07\":\n            return \"июл.\";\n        case \"08\":\n            return \"авг.\";\n        case \"09\":\n            return \"сен.\";\n        case \"10\":\n            return \"окт.\";\n        case \"11\":\n            return \"ноя.\";\n        case \"12\":\n            return \"дек.\";\n    }\n}","import React, { useState} from \"react\";\nimport {dateFormater, dayMonth} from \"../hooks/dataFormater\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport  * as dataRange from \"../../store/HotelItem\";\nimport \"./Calendar.css\"\n\n\n\nexport const DataRange = ({style, handle, styles, page}) => {\n    const dispatch = useDispatch()\n    const [selectedStartDate, setSelectedStartDate] = useState(null);\n    const [selectedEndDate, setSelectedEndDate] = useState(null);\n    const [hoveredDate, setHoveredDate] = useState(null);\n    const [isSelectingEndDate, setIsSelectingEndDate] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [nightsCount, setNightsCount] = useState(0);\n\n\n\n\n    const isLeapYear = (year) => {\n        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n    };\n\n    const getMonthsList = () => {\n        const allMonths = [\n            {name: \"Январь\", days: 31},\n            {name: \"Февраль\", days: 28},\n            {name: \"Март\", days: 31},\n            {name: \"Апрель\", days: 30},\n            {name: \"Май\", days: 31},\n            {name: \"Июнь\", days: 30},\n            {name: \"Июль\", days: 31},\n            {name: \"Август\", days: 31},\n            {name: \"Сентябрь\", days: 30},\n            {name: \"Октябрь\", days: 31},\n            {name: \"Ноябрь\", days: 30},\n            {name: \"Декабрь\", days: 31},\n        ];\n        const monthsList = [];\n        const currentYear = new Date().getFullYear();\n        const currentMonthIndex = new Date().getMonth(); // Получить текущий номер месяца (0-11)\n\n        for (let year = currentYear; year <= currentYear + 5; year++) {\n            for (let index = 0; index < allMonths.length; index++) {\n                // Для первого года добавить только месяцы, начиная с текущего месяца\n                if (year === currentYear && index < currentMonthIndex) {\n                    continue;\n                }\n\n                const month = allMonths[index];\n                // Если индекс месяца равен 1 (Февраль) и данный год високосный, то количество дней будет 29\n                const daysInMonth = index === 1 && isLeapYear(year) ? 29 : month.days;\n                monthsList.push({\n                    year: year,\n                    name: month.name,\n                    days: daysInMonth,\n                    index: index,\n                });\n            }\n        }\n        return monthsList;\n    };\n\n    const isToday = (date) => {\n        const today = new Date();\n        return date.getDate() === today.getDate() &&\n            date.getMonth() === today.getMonth() &&\n            date.getFullYear() === today.getFullYear();\n    };\n\n    const calculateNights = (startDate, endDate) => {\n        if (!startDate || !endDate) return 0;\n        const timeDifference = Math.abs(endDate - startDate);\n        return Math.ceil(timeDifference / (1000 * 60 * 60 * 24));\n    };\n\n\n\n    const handleDateSelect = (day) => {\n        if (isGrayedOut(day)) {\n            return;\n        }\n\n        if (!selectedStartDate) {\n            setSelectedStartDate(day);\n\n            console.log(\"Выбор даты заезда \")\n            setIsSelectingEndDate(true);\n        } else if (!selectedEndDate) {\n            if (day < selectedStartDate) {\n                setSelectedStartDate(day);\n            } else {\n                const maxEndDate = new Date(selectedStartDate);\n                maxEndDate.setDate(selectedStartDate.getDate() + 30);\n                const endDate = day > maxEndDate ? maxEndDate : day;\n                setSelectedEndDate(endDate);\n                //Закрыть модальное окно\n                handle()\n                saveDataRange(selectedStartDate, endDate)\n                console.log(\"Выбор даты отъезда\")\n                setIsSelectingEndDate(false);\n                // setNightsCount(nights);\n            }\n        } else {\n            setSelectedStartDate(day);\n            setSelectedEndDate(null);\n            setIsSelectingEndDate(true);\n        }\n    };\n\n    const dateText = selectedStartDate\n        ? `Check-In: ${selectedStartDate}`\n        : \"Check-In: -\";\n    const endDateText = selectedEndDate\n        ? `Check-Out: ${selectedEndDate}`\n        : \"Check-Out: -\";\n    const nightsText = nightsCount ? `${nightsCount} Nights` : \"\";\n\n\n\n\n    const saveDataRange = (startDate, endDate) => {\n        if(page === \"search\") {\n            const nights = calculateNights(startDate, endDate);\n            const end = dateFormater(endDate)\n            const start = dateFormater(startDate)\n            //Сохранение даты заезда и отъезда, а также количество ночей\n              const dataRange = {\n                    checkIn: startDate.toLocaleDateString().substr(0, 2),\n                    checkOut: endDate.toLocaleDateString().substr(0, 2),\n                    month:\n                        startDate.toLocaleDateString().substr(3, 2) === endDate.toLocaleDateString().substr(3, 2) ?\n                            dayMonth(startDate.toLocaleDateString()) :\n                            `(${dayMonth(startDate.toLocaleDateString())} - ${dayMonth(endDate.toLocaleDateString())})`,\n                    countNight: nights\n                }\n\n            handle(\"DataRange\", {checkIn: start, checkOut: end, dataRange: dataRange} )\n        }\n        if(page === \"hotel\") {\n            const nights = calculateNights(startDate, endDate);\n            const end = dateFormater(endDate)\n            dispatch(dataRange.checkOutHandler(end))\n            const start = dateFormater(startDate)\n            dispatch(dataRange.checkInHandler(start))\n            //Сохранение даты заезда и отъезда, а также количество ночей\n            dispatch(dataRange.handlerDataRange(\n                {\n                    checkIn: startDate.toLocaleDateString().substr(0, 2),\n                    checkOut: endDate.toLocaleDateString().substr(0, 2),\n                    month:\n                        startDate.toLocaleDateString().substr(3, 2) === endDate.toLocaleDateString().substr(3, 2) ?\n                            dayMonth(startDate.toLocaleDateString()) :\n                            `(${dayMonth(startDate.toLocaleDateString())} - ${dayMonth(endDate.toLocaleDateString())})`,\n                    countNight: nights\n                }))\n        }\n    }\n\n\n    const isFirstSelectedDay = (day) => {\n        if (!selectedStartDate) return false;\n        return day.getTime() === selectedStartDate.getTime();\n    };\n\n    const isLastSelectedDay = (day) => {\n        if (!selectedEndDate) return false;\n        return day.getTime() === selectedEndDate.getTime();\n    };\n\n    const isSelectedDay = (day) => {\n        if (!selectedStartDate || !selectedEndDate) return false;\n        return day > selectedStartDate && day < selectedEndDate;\n    };\n\n    const isGrayedOut = (day) => {\n        if (isBeforeToday(day)) {\n            return true;\n        }\n\n        if (selectedStartDate) {\n            const daysAfterStartDate = Math.floor((day.getTime() - selectedStartDate.getTime()) / (1000 * 60 * 60 * 24));\n            return daysAfterStartDate > 30;\n        }\n\n        return false;\n    };\n\n\n    const isBeforeToday = (date) => {\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        return date < today;\n    };\n\n    const isTemporarySelectedDay = (day) => {\n        if (!selectedStartDate || !hoveredDate || !isSelectingEndDate || isBeforeToday(day)) return false;\n        if (isGrayedOut(day)) return false;\n        return day.getTime() > selectedStartDate.getTime() && day.getTime() < hoveredDate.getTime();\n    };\n\n    const handleMouseEnter = (day) => {\n        if (isSelectingEndDate && !isBeforeToday(day)) {\n            setHoveredDate(day);\n\n            if (isGrayedOut(day)) {\n                setMessage(\"* Нельзя выбрать даты с периодом больше 30 дней\");\n            } else if (day.getTime() === new Date().setHours(0, 0, 0, 0) && selectedEndDate !== null) {\n                setMessage(\"* Нельзя выбрать дату раньше заезда\");\n            } else {\n                setMessage(\"\");\n            }\n        } else if (isBeforeToday(day)) {\n            setMessage(\"* Нельзя выбрать даты из прошлого\");\n        }\n    };\n\n\n    const renderMonthDays = (month) => {\n        const days = [];\n        const firstDayOfMonth = new Date(month.year, month.index, 1);\n        for (let i = 1; i <= (firstDayOfMonth.getDay() + 6) % 7; i++) {\n            days.push(<div key={`empty-${i}`} className=\"day empty\"></div>);\n        }\n\n        for (let i = 1; i <= month.days; i++) {\n            const day = new Date(month.year, month.index, i);\n            days.push(\n                <div\n                    key={day.toString()}\n                    className={\n                        \"day\" +\n                        (isFirstSelectedDay(day) ? \" selected-start\" : \"\") +\n                        (isLastSelectedDay(day) ? \" selected-end\" : \"\") +\n                        (isBeforeToday(day) ? \" text-gray\" : \"\") +\n                        (isToday(day) ? \" today\" : \"\") +\n                        (isSelectedDay(day) ? \" between-selected\" : \"\") +\n                        (isTemporarySelectedDay(day) ? \" between-hovered\" : \"\") +\n                        (isGrayedOut(day) ? \" grayed-out\" : \"\") +\n                        (isGrayedOut(day) ? \" no-pointer\" : \"\") +\n                        \" non-empty\" // добавьте этот класс для не-pустых элементов\n                    }\n                    onClick={() => handleDateSelect(day)}\n                    onMouseEnter={() => handleMouseEnter(day)}\n                    onMouseLeave={() => {\n                        isSelectingEndDate && !isBeforeToday(day) && setHoveredDate(null);\n                        setMessage(\"\");\n                    }}\n\n                >\n                    {i}\n                </div>\n            );\n        }\n\n        return days;\n    };\n\n    const monthsList = getMonthsList();\n\n\n    return (\n        <div className={style}>\n            <div className=\"modal__content__date__range\" style={styles}>\n                <div className=\"modal__body\">\n                    <div className=\"calendar\">\n                        <div className=\"calendar-header\">\n                            <div className=\"weekdays\">\n                                <span>Пн</span>\n                                <span>Вт</span>\n                                <span>Ср</span>\n                                <span>Чт</span>\n                                <span>Пт</span>\n                                <span>Сб</span>\n                                <span>Вс</span>\n                            </div>\n                        </div>\n                        <div className=\"calendar-body\">\n                            <div className=\"months\" >\n                                {monthsList.map((month, index) => (\n                                    <div key={index} className=\"month-container\">\n                                        <div className=\"month-label\">\n                                            {month.name} {month.year}\n                                        </div>\n                                        <div className=\"month-grid\">{renderMonthDays(month)}</div>\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                        <div className=\"row__c__c\" style={{padding: \"5px\", height: \"14px\"}}>\n                            <div className=\"message\">{message}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\n","import { Icon24MinusOutline, Icon24Add } from '@vkontakte/icons';\nimport {BLACK, GREY_WHITE} from \"../../theme/colors\";\n\nexport const ButtonCounter = ({count, style,handleDel, handleAdd}) => {\n    return (\n        <div className={style}>\n            <span\n                onClick={handleDel}\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    cursor: \"pointer\",\n                    width: \"25px\",\n                    height: \"25px\",\n                    borderRadius: \"50%\",\n                    background: GREY_WHITE,\n                }}\n            >\n                <Icon24MinusOutline width={16} height={16} color={BLACK}/>\n            </span>\n            <span className=\"text__content__black__b__16\">{count}</span>\n            <span\n                onClick={handleAdd}\n                style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    width: \"25px\",\n                    height: \"25px\",\n                    borderRadius: \"50%\",\n                    background: GREY_WHITE,\n                    cursor: \"pointer\"\n                }}\n            >\n                <Icon24Add width={16} height={16} color={BLACK}/>\n            </span>\n        </div>\n    )\n}","import \"./Buttons.css\"\n\nexport const Button = (\n    {\n        name, handler, style, styleText, padding, marginLeft, marginTop, color, height\n}) => {\n    return (\n        <div\n            className={style}\n            onClick={handler}\n            style={{\n                background: color,\n                marginLeft: marginLeft,\n                marginTop: marginTop,\n                height: height\n            }}\n        >\n            <span\n                className={styleText}\n                style={{\n                    paddingLeft: padding,\n                    paddingRight: padding,\n\n                }}\n            >{name}</span>\n        </div>\n    )\n}","import {ButtonCounter} from \"../buttons/ButtonCounter\";\nimport React from \"react\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\nimport {Button} from \"../buttons/Button\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    handlerAddChild,\n    handlerAddGuest,\n    handlerDelChild,\n    handlerDelGuest,\n    handlerEditOldChild\n} from \"../../store/Search\";\nimport {RED} from \"../../theme/colors\";\n\nexport const GuestHotel = ({style, guest, child, handler, checkOld, styles}) => {\n    const dispatch = useDispatch()\n    const old = [\n        {id: 0, name: \"до года\",}, {id: 1, name: \"1 год\",}, {id: 2, name: \"2 года\",},\n        {id: 3, name: \"3 года\",}, {id: 4, name: \"4 года\",}, {id: 5, name: \"5 лет\",},\n        {id: 6, name: \"6 лет\",}, {id: 7, name: \"7 лет\",}, {id: 8, name: \"8 лет\",},\n        {id: 9, name: \"9 лет\",}, {id: 10, name: \"10 лет\",}, {id: 11, name: \"11 лет\",},\n        {id: 12, name: \"12 лет\",}, {id: 13, name: \"13 лет\",}, {id: 14, name: \"14 лет\",},\n        {id: 15, name: \"15 лет\",}, {id: 16, name: \"16 лет\",}, {id: 17, name: \"17 лет\",},\n    ]\n\n    const handlerChooseOld = (e, id) => {\n        dispatch(handlerEditOldChild({idChild: id, old: e.target.value}))\n    }\n\n    return (\n        <div className={style}>\n            <div className=\"modal__content__guest\" style={styles}>\n                <div className=\"modal__body\">\n                    <div className=\"column__fs\"\n                        style={{\n                            marginBottom: \"10px\",\n                            marginLeft: \"5px\",\n                            marginRight: \"10px\"\n                        }}\n                    >\n                        <div>\n                            <div className=\"column__fs\">\n                                <div\n                                    className=\"row__sb__c\"\n                                    style={{\n                                        marginTop: \"10px\",\n                                        marginBottom: \"5px\",\n                                        borderBottom: \"1px solid var(--grey-white)\",\n                                        paddingBottom: \"10px\"\n                                    }}\n                                >\n                                    <div className=\"column__fs\">\n                                        <span className=\"text__content__black__14\">Взрослые</span>\n                                        <span className=\"text__content__grey__12\">от 18 лет</span>\n                                    </div>\n                                    <ButtonCounter\n                                        count={guest}\n                                        style={\"row__sb__c counterGuestBtn\"}\n                                        handleAdd={() => dispatch((handlerAddGuest(1)))}\n                                        handleDel={() => dispatch((handlerDelGuest(1)))}\n                                    />\n                                </div>\n                                <div\n                                    className=\"row__sb__c\"\n                                    style={{\n                                        marginTop: \"5px\",\n                                        marginBottom: \"10px\",\n                                        borderBottom: \"1px solid var(--grey-white)\",\n                                        paddingBottom: \"10px\"\n                                    }}\n                                >\n                                    <div className=\"column__fs\">\n                                        <span className=\"text__content__black__14\">Дети</span>\n                                        <span className=\"text__content__grey__12\">до 17 лет</span>\n                                    </div>\n                                    <ButtonCounter\n                                        handleAdd={() => dispatch((handlerAddChild(child.length + 1)))}\n                                        handleDel={() => dispatch((handlerDelChild(child.length - 1)))}\n                                        count={child.length}\n                                        style={\"row__sb__c counterGuestBtn\"}\n                                    />\n                                </div>\n                                {child.length === 0 ?\n                                    \"\"\n                                    :\n                                    child.map(item => (\n                                        <div\n                                            className=\"row__sb__c\"\n                                            key={item.id}\n                                            style={{\n                                                marginTop: \"5px\",\n                                                marginBottom: \"10px\",\n                                                borderBottom: \"1px solid var(--grey-white)\",\n                                                paddingBottom: \"10px\"\n                                            }}\n                                        >\n\n                                            <FormControl sx={{m: 1, width: \"100%\"}} size=\"small\">\n                                                <InputLabel id=\"demo-select-small-label\">Возраст</InputLabel>\n                                                <Select\n                                                    labelId=\"demo-select-small-label\"\n                                                    id=\"demo-select-small\"\n                                                    value={item.old}\n                                                    label=\"Возраст\"\n                                                    onChange={(e) => handlerChooseOld(e, item.id)}\n                                                >\n                                                    <MenuItem  value=\"Возраст\">\n                                                        { checkOld ? <b style={{color: RED}}>Укажите возраст</b> : <b>Возраст</b>}\n                                                    </MenuItem>\n                                                    {old.map(old => (\n                                                        <MenuItem\n                                                            value={old.id}\n                                                            key={old.id}\n                                                        > {old.name}\n                                                        </MenuItem>\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n\n                        </div>\n                        <div\n                            className=\"row__c__c\"\n                        >\n                            <Button\n                                style={\"doneBtn\"}\n                                name={\"Применить\"}\n                                handler={handler}\n                                styleText={\"text__content__white__16\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","export function parseJSONProperties(obj) {\n    // Создаем копию объекта, чтобы не изменять исходный объект\n    const newObj = { ...obj };\n\n    // Перебираем все свойства объекта\n    for (let key in newObj) {\n        // Проверяем, является ли значение свойства строкой\n        if (typeof newObj[key] === 'string') {\n            try {\n                // Пытаемся распарсить значение свойства как JSON\n                newObj[key] = JSON.parse(newObj[key]);\n            } catch (error) {\n                // Если не удалось распарсить, оставляем значение без изменений\n            }\n        }\n    }\n\n    return newObj;\n}\n\nexport const parseJSONData = (jsonData) => {\n    try {\n        const parsedData = JSON.parse(jsonData);\n        return parsedData;\n    } catch (error) {\n        console.error(\"Error parsing JSON data:\", error);\n        return null;\n    }\n};\n\nexport function parseJSONData2(jsonData) {\n    try {\n        const parsedData = JSON.parse(jsonData);\n        return parsedData;\n    } catch (error) {\n        console.error(\"Ошибка при парсинге JSON данных:\", error);\n        return null;\n    }\n}\n\nexport function parseJSONPropertiesInArray(arr) {\n    // Создаем новый массив для сохранения преобразованных объектов\n    const newArr = [];\n\n    // Перебираем все объекты в массиве\n    for (let i = 0; i < arr.length; i++) {\n        const obj = arr[i];\n\n        // Создаем новый объект для сохранения преобразованных свойств\n        const newObj = {};\n\n        // Перебираем все свойства в объекте\n        for (let key in obj) {\n            // Проверяем, является ли значение свойства строкой\n            if (typeof obj[key] === 'string') {\n                try {\n                    // Пытаемся распарсить значение свойства как JSON\n                    newObj[key] = JSON.parse(obj[key]);\n                } catch (error) {\n                    // Если не удалось распарсить, оставляем значение без изменений\n                    newObj[key] = obj[key];\n                }\n            } else {\n                // Если значение не является строкой, оставляем его без изменений\n                newObj[key] = obj[key];\n            }\n        }\n\n        // Добавляем преобразованный объект в новый массив\n        newArr.push(newObj);\n    }\n\n    return newArr;\n}","import {$api} from \"../http\"\n\n\nconst ObjectService = {\n    getAllObject: async () => {\n        try {\n            const response = await $api.get(`/`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch objects from object table');\n        }\n    },\n    getObject: async (path, hotelId) => {\n        try {\n            const response = await $api.get(`/${path}/object/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch object from object table');\n        }\n    },\n    getObjectByUserId: async ( userId) => {\n        try {\n            const response = await $api.get(`/objects/${userId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch object from object table');\n        }\n    },\n    searchObject: async (requestParameters) => {\n        try {\n            const response = await $api.post(`/hotels_map`, {requestParameters});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to search object from object table');\n        }\n    },\n    updateObject: async (path, hotelId, dataObjectSetting) => {\n        try {\n            const response = await $api.put(`/${path}/object/${hotelId}`, {dataObjectSetting});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to update object from object table');\n        }\n    },\n    deleteObject: async (hotelId) => {\n        try {\n            const response = await $api.delete(`/object/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete object from object table');\n        }\n    },\n}\n\nexport default ObjectService","import \"./SearchPanel.css\"\nimport React, {useEffect, useState} from \"react\";\nimport {Icon24ChevronDown, Icon24LocationMapOutline} from '@vkontakte/icons';\nimport {GREY, WHITE} from \"../../theme/colors\";\nimport line from \"../../assets/image/line.png\"\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport {ListSearch} from \"./ListSearch\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {wordDeclension, wordDeclensionNight} from \"../../utils/word-declensions\";\nimport {\n    showListSearchHandler,\n    showCalendarHandler,\n    showGuestHandler,\n  cityOrHotelHandler, handlerDataRange\n} from \"../../store/Search\";\nimport {DataRange} from \"../calendar/DataRange\";\nimport {GuestHotel} from \"./GuestHotel\";\n\nimport {\n    dataNumbersListHandler,\n    loadingHotelListHandler,\n    loadingMapHandler, objectListHandler, pageSwitchingHandler, searchParametersHandler, setFilteredHotels,\n\n} from \"../../store/HotelsList\";\n\nimport {parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\nimport ObjectService from \"../../services/object.service\";\nimport {countOtherSortHandler} from \"../../store/Filter\";\n\n\nconst SearchPanel = () => {\n    const dispatch = useDispatch()\n    const requestParameters = useSelector(state => state.search.cityOrHotel)\n    const [objectList, setObjectList] = useState([])\n    const [filterData, setFilterData] = useState([])\n    const [searchCity, setSearchCity] = useState(requestParameters.city.city || \"\")\n\n    const [checkOld, setCheckOld] = useState(false)\n    const [openDataRang, setOpenDataRang] = useState(false)\n    const [openGuest, setGuest] = useState(false)\n    const [link, setLink] = useState(\"/hotels_map\")\n    const showListSearch = useSelector(state => state.search.showListSearch)\n    const showCalendar = useSelector(state => state.search.showCalendar)\n    const showGuest = useSelector(state => state.search.showGuest)\n    const [isWriteCity, setIsWriteCity] = useState(false)\n\n    //Загрузка объектов\n    const getObjectList = () => {\n        ObjectService.getAllObject()\n            .then(data => {\n                const parsedData = parseJSONPropertiesInArray(data);\n                setObjectList(parsedData);\n\n            })\n            .catch(error => {\n                console.log(error);\n            })\n\n    }\n    useEffect(() => {\n        if (objectList.length === 0) {\n            getObjectList()\n        }\n    }, []);\n\n\n    const handleClickOutsideListSearch = (city) => {\n        dispatch(showListSearchHandler(false));\n        setSearchCity(city)\n    };\n    const handleClickOutsideGuestHotel = () => {\n        setGuest(false);\n        dispatch(showGuestHandler(false));\n        handlerOpenGuest();\n    };\n    const handlerDate = () => {\n        setOpenDataRang(!openDataRang)\n        dispatch(showCalendarHandler(!showCalendar))\n    }\n    const handleClickOutsideDataRange = () => {\n        setOpenDataRang(false);\n        handlerDate();\n    };\n\n    const handlerOpenGuest = () => {\n        setGuest(!openGuest)\n        dispatch(showGuestHandler(!showGuest))\n    }\n\n    const checkingHandler = () => {\n        if (requestParameters.guest.child.map(child => child.old === \"Возраст\")[0]) {\n            setCheckOld(true)\n        } else {\n            setGuest(!openGuest)\n            dispatch(showGuestHandler(!showGuest))\n            setCheckOld(false)\n        }\n    }\n\n    const dataSearchHandler = (type, value) => {\n        if (type === \"city\") {\n            dispatch(cityOrHotelHandler(value))\n            handleClickOutsideListSearch(value.city)\n        }\n        if (type === \"DataRange\") {\n            dispatch(handlerDataRange(value))\n            handlerDate()\n        }\n    }\n\n\n\n    const handlerText = (e) => {\n        if (e.target.value !== \"\") {\n            dispatch(showListSearchHandler(true));\n            const searchText = e.target.value.toLocaleLowerCase();\n            setSearchCity(e.target.value);\n            if (searchText.length !== 0) {\n                // Фильтруем userData по имени, фамилии, телефону или email\n                const filteredCity = objectList.filter(item => {\n                    const cityMatch = item.city && item.city.toLocaleLowerCase().includes(searchText);\n                    return cityMatch;\n                });\n                // Создаем множество уникальных городов\n                const uniqueCities = new Set(filteredCity.map(item => item.city));\n                // Фильтруем уникальные города и сохраняем целые объекты\n                const uniqueCitiesArray = Array.from(uniqueCities).map(city => {\n                    return filteredCity.find(item => item.city === city);\n                });\n                setFilterData(uniqueCitiesArray);\n            } else {\n                // Если строка поиска пустая, возвращаем пустой массив\n                setFilterData([]);\n                dispatch(showListSearchHandler(false));\n            }\n        } else {\n            setSearchCity(\"\");\n            dispatch(showListSearchHandler(false));\n        }\n    }\n\n\n    const updateHotelList = () => {\n        dispatch(pageSwitchingHandler(0))\n        const localDataLocation = {lat: requestParameters.city.location.lat, lon: requestParameters.city.location.lon, zoom: 13}\n        localStorage.setItem('location', JSON.stringify(localDataLocation));\n        dispatch(loadingMapHandler(true))\n        setTimeout(() => {\n            dispatch(loadingMapHandler(false))\n        }, 3000)\n        dispatch(showCalendarHandler(false))\n        dispatch(showGuestHandler(false));\n    }\n\n    const showLoadingIndicator = () => {\n        // добавьте здесь код для отображения индикатора загрузки\n        dispatch(loadingHotelListHandler(true))\n        dispatch(loadingMapHandler(true))\n\n    };\n\n    const hideLoadingIndicator = () => {\n        // добавьте здесь код для скрытия индикатора загрузки\n        dispatch(loadingHotelListHandler(false))\n        dispatch(loadingMapHandler(false))\n\n    };\n\n    const filterNumbers = async (array) => {\n        const checkIn = requestParameters.checkIn\n        const checkOut = requestParameters.checkOut\n        const guest = requestParameters.guest.adult + requestParameters.guest.child.length\n        const filteredNumbers = await array.filter(number => {\n            // Проверяем диапазон дат в bookingList\n            const isDateAvailable = number.bookingList.every(booking => {\n                return !(checkIn >= booking.checkIn && checkIn < booking.checkOut) &&\n                    !(checkOut > booking.checkIn && checkOut <= booking.checkOut);\n            });\n            // Проверяем количество гостей\n            const isGuestCountValid = number.guestCount.length >= guest;\n            return isDateAvailable && isGuestCountValid;\n        });\n        return filteredNumbers\n    }\n\n    const filterObject =  (array, numbers) => {\n        const filterObject = array.filter(object => {\n            return numbers.find(number => object.hotelId === number.hotelId);\n        });\n        return filterObject\n    }\n\n    const handleSearch = async () => {\n        if (requestParameters.city !== null && requestParameters.dataRange !== null && requestParameters.guest !== null) {\n\n            showLoadingIndicator();\n            try {\n                //Загрузка объектов\n                ObjectService.searchObject(requestParameters)\n                    .then(data => {\n                        const  resultObject = parseJSONPropertiesInArray(data.resultObject)\n                        const  resultNumbers = parseJSONPropertiesInArray(data.resultNumbers)\n                        filterNumbers(resultNumbers)\n                            .then(data => {\n                                const resultFilterObject = filterObject(resultObject, data)\n                                dispatch(objectListHandler(resultFilterObject))\n                                dispatch(dataNumbersListHandler(data))\n                                dispatch(setFilteredHotels(null));\n                                dispatch(countOtherSortHandler(resultFilterObject));\n                            });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    })\n                    .finally(() => {\n                        setLink(\"/hotels_map\");\n                    });\n\n\n                updateHotelList();\n                setIsWriteCity(false);\n\n            } catch (error) {\n                console.error('Не удалось создать список отелей:', error);\n                setIsWriteCity(true);\n                setLink(\"/\");\n            } finally {\n                hideLoadingIndicator();\n            }\n        } else {\n            setIsWriteCity(true);\n            setLink(\"/\");\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"row__c__c desktop__big__search\">\n                <div\n                    className=\"row__sb__c input__search\">\n                    <div style={{position: \"relative\", flexGrow: 1.2}}>\n\n                        <input\n                            autoComplete=\"off\"\n                            type=\"text\"\n                            id=\"search__input\"\n                            className=\"search__input__text\"\n                            placeholder={isWriteCity ? \"Введите название города\" : \"Город или отель\"}\n                            value={searchCity}\n                            onChange={handlerText}\n                            required={true}\n                        />\n                        {\n                            showListSearch && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideListSearch}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n\n                        <ListSearch\n                            style={showListSearch ? \"modal__list__search\" : \"modal__none\"}\n                            city={filterData}\n                            handle={(type, value) => dataSearchHandler(type, value)}\n                        />\n\n                    </div>\n\n                    <img\n                        src={line}\n                        alt=\"line\"\n                        height={28}\n                        width={1}\n                    />\n                    <div style={{\n                        position: \"relative\",\n                        width: \"300px\"\n                    }}>\n                        <div\n                            className=\"row__sb__c\"\n                            onClick={() => handlerDate()}\n                            style={{width: \"300px\", cursor: \"pointer\"}}>\n                <span\n                    className=\"text__content__black__14\"\n                    style={{marginLeft: \"10px\"}}\n                >\n                    {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                    <span\n                        className=\"text__content__grey__14\"\n                        style={{marginLeft: \"5px\"}}\n                    >\n                        {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                    </span>\n                </span>\n                            <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                        <Icon24ChevronDown color={GREY}/>\n                    </span>\n                        </div>\n                        {\n                            openDataRang && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideDataRange}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n                        <DataRange\n                            style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                            handle={(type, value) => dataSearchHandler(type, value)}\n                            page={\"search\"}\n                        />\n                    </div>\n                    <img\n                        src={line}\n                        alt=\"line\"\n                        height={28}\n                        width={1}\n                    />\n                    <div style={{\n                        position: \"relative\",\n                        width: \"300px\"\n                    }}>\n                        <div\n                            className=\"row__sb__c\"\n                            onClick={() => handlerOpenGuest()}\n                            style={{\n                                width: \"300px\",\n                                cursor: \"pointer\"\n                            }}\n                        >\n                        <span\n                            className=\"text__content__black__14\"\n                            style={{\n                                marginLeft: \"10px\"\n                            }}\n                        >\n                            {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                        </span>\n                            <span\n                                className={openGuest ? 'iconDate' : \"iconBtn\"}\n                            >\n                            <Icon24ChevronDown color={GREY}/>\n                        </span>\n                        </div>\n                        {\n                            openGuest && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideGuestHotel}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n\n                        <GuestHotel\n                            style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                            guest={requestParameters.guest.adult}\n                            child={requestParameters.guest.child}\n                            handler={() => checkingHandler()}\n                            checkOld={checkOld}\n                        />\n                    </div>\n                </div>\n                <ButtonIcon\n                    icon={<Icon24LocationMapOutline color={WHITE}/>}\n                    name={\"Найти\"}\n                    link={requestParameters.city === null ? \"\" : \"/hotels_map\"}\n                    style={\"searchBtn\"}\n                    handler={() => handleSearch()}\n                    styleText={\"text__content__white__16\"}\n                />\n            </div>\n\n\n            <div className=\"column__c__c laptop__search\">\n                <div className=\"row__c__c\" style={{width: \"47vw\"}}>\n                    <div className=\"row__sb__c input__search\">\n                        <div style={{\n                            position: \"relative\",\n                            flexGrow: 0.8\n                        }}>\n                            <input\n                                autoComplete=\"off\"\n                                type=\"text\"\n                                id=\"search__input\"\n                                className=\"search__input__text\"\n                                placeholder={isWriteCity ? \"Введите название города\" : \"Город или отель\"}\n                                value={searchCity}\n                                onChange={handlerText}\n                                required={true}\n                            />\n                            {\n                                showListSearch && (\n                                    <div\n                                        className=\"click-outside-modal-handler\"\n                                        onClick={handleClickOutsideListSearch}\n                                        style={{\n                                            position: 'fixed',\n                                            top: 0,\n                                            left: 0,\n                                            right: 0,\n                                            bottom: 0,\n                                            zIndex: 1,\n                                        }}\n                                    ></div>\n                                )\n                            }\n                            <ListSearch\n                                style={showListSearch ? \"modal__list__search\" : \"modal__none\"}\n                                city={filterData}\n                                handle={(type, value) => dataSearchHandler(type, value)}\n                            />\n                        </div>\n\n                    </div>\n                    <ButtonIcon\n                        icon={<Icon24LocationMapOutline color={WHITE}/>}\n                        name={\"Найти\"}\n                        width={\"150px\"}\n                        style={\"searchBtn\"}\n                        link={link}\n                        handler={() => handleSearch()}\n                        styleText={\"text__content__white__16\"}\n                    />\n                </div>\n                <div\n                    className=\"row__c__c input__search\"\n                    style={{\n                        width: \"47vw\",\n                        marginTop: \"10px\"\n                    }}\n\n                >\n                    <div style={{position: \"relative\", flexGrow: 1}}>\n                        <div\n                            className=\"row__sb__c\"\n                            onClick={() => handlerDate()}\n                            style={{flexGrow: 1, cursor: \"pointer\"}}>\n                <span\n                    className=\"text__content__black__14\"\n                    style={{marginLeft: \"10px\"}}>\n                     {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                    <span\n                        className=\"text__content__grey__14\"\n                        style={{\n                            marginLeft: \"5px\"\n                        }}\n                    >\n                        {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                    </span>\n                </span>\n                            <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                        <Icon24ChevronDown color={GREY}/>\n                    </span>\n                        </div>\n                        {\n                            openDataRang && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideDataRange}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n                        <DataRange\n                            style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                            handle={(type, value) => dataSearchHandler(type, value)}\n                            page={\"search\"}\n                        />\n                    </div>\n                    <div style={{\n                        position: \"relative\",\n                        flexGrow: 1\n                    }}>\n                        <div\n                            className=\"row__sb__c\"\n                            onClick={() => handlerOpenGuest()}\n                            style={{\n                                flexGrow: 1,\n                                cursor: \"pointer\"\n                            }}\n                        >\n                        <span\n                            className=\"text__content__black__14\"\n                            style={{\n                                marginLeft: \"10px\"\n                            }}\n                        >\n                            {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n\n                        </span>\n                            <span\n                                className={openGuest ? 'iconDate' : \"iconBtn\"}\n                            >\n                            <Icon24ChevronDown color={GREY}/>\n                        </span>\n                        </div>\n                        {\n                            openGuest && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideGuestHotel}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n                        <GuestHotel\n                            style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                            styles={{\n                                flexGrow: 1\n                            }}\n                            guest={requestParameters.guest.adult}\n                            child={requestParameters.guest.child}\n                            handler={() => checkingHandler()}\n                            checkOld={checkOld}\n                        />\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"column__c__c tablet__search\">\n                <div className=\"row__c__c\">\n                    <div className=\"row__sb__c input__search\"\n                         style={{width: \"80vw\"}}\n                    >\n                        <div style={{position: \"relative\", flexGrow: 1}}>\n                            <input\n                                autoComplete=\"off\"\n                                type=\"text\"\n                                id=\"search__input\"\n                                className=\"search__input__text\"\n                                placeholder={isWriteCity ? \"Введите название города\" : \"Город или отель\"}\n                                value={searchCity}\n                                onChange={handlerText}\n                                required={true}\n                            />\n                            {\n                                showListSearch && (\n                                    <div\n                                        className=\"click-outside-modal-handler\"\n                                        onClick={handleClickOutsideListSearch}\n                                        style={{\n                                            position: 'fixed',\n                                            top: 0,\n                                            left: 0,\n                                            right: 0,\n                                            bottom: 0,\n                                            zIndex: 1,\n                                        }}\n                                    ></div>\n                                )\n                            }\n                            <ListSearch\n                                style={showListSearch ? \"modal__list__search\" : \"modal__none\"}\n                                city={filterData}\n                                handle={(type, value) => dataSearchHandler(type, value)}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row__c__c input__search\" style={{width: \"80vw\", marginTop: \"10px\"}}>\n                    <div style={{position: \"relative\", flexGrow: 1}}>\n                        <div\n                            className=\"row__sb__c\"\n                            onClick={() => handlerDate()}\n                            style={{flexGrow: 1, cursor: \"pointer\"}}\n                        >\n                                <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                    {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                                    <span className=\"text__content__grey__14\" style={{marginLeft: \"5px\"}}>\n                                          {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                                    </span>\n                                    </span>\n                            <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                                        <Icon24ChevronDown color={GREY}/>\n                                    </span>\n                        </div>\n                        {\n                            openDataRang && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideDataRange}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n                        <DataRange\n                            style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                            handle={(type, value) => dataSearchHandler(type, value)}\n                            page={\"search\"}\n                        />\n                    </div>\n                </div>\n                <div className=\"row__c__c input__search\" style={{width: \"80vw\", marginTop: \"10px\"}}>\n                    <div style={{position: \"relative\", flexGrow: 1}}>\n                        <div\n                            className=\"row__sb__c\"\n                            onClick={() => handlerOpenGuest()}\n                            style={{flexGrow: 1, cursor: \"pointer\"}}>\n                                <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                    {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                                </span>\n                            <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                                    <Icon24ChevronDown color={GREY}/>\n                                </span>\n                        </div>\n                        {\n                            openGuest && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideGuestHotel}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n                        <GuestHotel\n                            style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                            styles={{flexGrow: 1}}\n                            guest={requestParameters.guest.adult}\n                            child={requestParameters.guest.child}\n                            handler={() => checkingHandler()}\n                            checkOld={checkOld}\n                        />\n                    </div>\n                </div>\n                <div className=\"row__c__c \" style={{width: \"80vw\", marginTop: \"10px\"}}>\n                    <div style={{position: \"relative\", flexGrow: 1}}>\n                        <ButtonIcon\n                            icon={<Icon24LocationMapOutline color={WHITE}/>}\n                            name={\"Найти\"}\n                            style={\"searchBtn__mobile\"}\n                            link={link}\n                            handler={() => handleSearch()}\n                            styleText={\"text__content__white__16\"}\n                        />\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\nexport default React.memo(SearchPanel);","import SearchPanel from \"../search/SearchPanel\";\n\n\n\n\nexport const BannerSearch = ({banner, header,  addHeader, q}) => {\n    return (\n        <div\n            className=\"row__c__c\"\n            style={{\n                height: \"590px\",\n                backgroundImage: `url(${banner})`,\n                backgroundSize: \"cover\",\n                backgroundPosition: \"center\",\n            }}\n        >\n            <div className=\"column__c\">\n                <h1 className=\"header__banner\" >{addHeader} {header.toLocaleUpperCase()}{q}</h1>\n                <SearchPanel/>\n            </div>\n        </div>\n    )\n}","import {$api} from \"../http\"\n\nconst SettingPageService = {\n    getSettingPage: async () => {\n        try {\n            const response = await $api.get('/setting_page/all');\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch statistic from statistic table');\n        }\n    },\n}\nexport default SettingPageService\n","import {BLACK_OPACITY, WHITE} from \"../../theme/colors\";\nimport {Link} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n     dataNumbersListHandler, loadingHotelListHandler,\n    loadingMapHandler, objectListHandler,\n    setFilteredHotels,\n} from \"../../store/HotelsList\";\nimport { countOtherSortHandler} from \"../../store/Filter\";\n\nimport {\n    requestParameterHandler, setBannerHandler,\n    showCalendarHandler,\n    showGuestHandler\n} from \"../../store/Search\";\nimport {useEffect, useState} from \"react\";\nimport ObjectService from \"../../services/object.service\";\nimport {parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\nimport SettingPageService from \"../../services/setting-page.service\";\nimport {dateFormater, monthText} from \"../../utils/dataFormater\";\n\n\nexport const WhereToGo = () => {\n    const dispatch = useDispatch()\n    const requestParameters = useSelector(state => state.search.cityOrHotel)\n    const [data, setData] = useState([])\n    const [link, setLink] = useState(\"/hotels_map\")\n\n    useEffect(() => {\n            if (data.length === 0) {\n                SettingPageService.getSettingPage()\n                    .then(data => {\n                        const result = parseJSONPropertiesInArray(data)\n                        setData(result)\n                    })\n            }\n        }\n        ,\n        []\n    )\n\n\n    const updateHotelList = (reqParams) => {\n        const localDataLocation = {\n            lat: reqParams.city.location.lat,\n            lon: reqParams.city.location.lon,\n            zoom: 13\n        }\n        localStorage.setItem('location', JSON.stringify(localDataLocation));\n        dispatch(loadingMapHandler(true))\n        setTimeout(() => {\n            dispatch(loadingMapHandler(false))\n        }, 3000)\n        dispatch(showCalendarHandler(false))\n        dispatch(showGuestHandler(false));\n    }\n\n\n    const showLoadingIndicator = () => {\n        // добавьте здесь код для отображения индикатора загрузки\n        dispatch(loadingHotelListHandler(true))\n        dispatch(loadingMapHandler(true))\n\n    };\n\n    const hideLoadingIndicator = () => {\n        // добавьте здесь код для скрытия индикатора загрузки\n        dispatch(loadingHotelListHandler(false))\n        dispatch(loadingMapHandler(false))\n\n    };\n\n    const filterNumbers = async (array) => {\n        const checkIn = requestParameters.checkIn\n        const checkOut = requestParameters.checkOut\n        const guest = requestParameters.guest.adult + requestParameters.guest.child.length\n        const filteredNumbers = await array.filter(number => {\n            // Проверяем диапазон дат в bookingList\n            const isDateAvailable = number.bookingList.every(booking => {\n                return !(checkIn >= booking.checkIn && checkIn < booking.checkOut) &&\n                    !(checkOut > booking.checkIn && checkOut <= booking.checkOut);\n            });\n            // Проверяем количество гостей\n            const isGuestCountValid = number.guestCount.length >= guest;\n            return isDateAvailable && isGuestCountValid;\n        });\n        return filteredNumbers\n    }\n\n    const filterObject = (array, numbers) => {\n        const filterObject = array.filter(object => {\n            return numbers.find(number => object.hotelId === number.hotelId);\n        });\n        return filterObject\n    }\n    const [minPrices, setMinPrices] = useState({});\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const prices = {};\n            for (const item of data) {\n                const price = await pricesHandler({ city: { city: item.city } });\n                prices[item.city] = price;\n            }\n            setMinPrices(prices);\n        };\n\n        fetchData();\n    }, [data]);\n\n\n    const pricesHandler = async (city) => {\n        const data = await ObjectService.searchObject(city);\n        const resultNumbers = parseJSONPropertiesInArray(data.resultNumbers);\n        if (resultNumbers.length > 0) {\n            const pricesAboveZero = resultNumbers.filter(price => price.priceBase > 0);\n            if (pricesAboveZero.length > 0) {\n                const minPrice = Math.min(...pricesAboveZero.map(price => price.priceBase));\n                return minPrice;\n            } else {\n                return \"Все цены меньше или равны нулю\";\n            }\n        } else {\n            return \"Нет данных для указанного hotelId\";\n        }\n    }\n\n    const handleSearch = async (reqParams) => {\n        if (reqParams.city !== null && reqParams.dataRange !== null && reqParams.guest !== null) {\n\n            showLoadingIndicator();\n            try {\n                //Загрузка объектов\n                ObjectService.searchObject(reqParams)\n                    .then(data => {\n                        const resultObject = parseJSONPropertiesInArray(data.resultObject)\n                        const resultNumbers = parseJSONPropertiesInArray(data.resultNumbers)\n                        filterNumbers(resultNumbers)\n                            .then(data => {\n                                const resultFilterObject = filterObject(resultObject, data)\n                                dispatch(objectListHandler(resultFilterObject))\n                                dispatch(dataNumbersListHandler(data))\n                                dispatch(setFilteredHotels(null));\n                                dispatch(countOtherSortHandler(resultFilterObject));\n                            });\n\n                    })\n                    .catch(error => {\n                        console.log(error);\n                    })\n                    .finally(() => {\n                        setLink(\"/hotels_map\");\n                    });\n\n\n                updateHotelList(reqParams);\n\n            } catch (error) {\n                console.error('Не удалось создать список отелей:', error);\n\n                setLink(\"/\");\n            } finally {\n                hideLoadingIndicator();\n            }\n        } else {\n            setLink(\"/\");\n        }\n\n    };\n    const searchToParams = async ({header, name, banner, location}) => {\n        const reqParams = {\n            city: {city: name, hotelId: \"\", location: location},\n            dataRange: {\n                checkIn: new Date().getDate(),\n                checkOut: new Date().getDate() + 2,\n                month: monthText(new Date().getMonth()),\n                countNight: 2\n            },\n            guest: {adult: 1, child: []},\n            checkIn: dateFormater(new Date()),\n            checkOut: dateFormater(new Date(new Date().setDate(new Date().getDate() + 2)))\n        }\n       dispatch(setBannerHandler(banner))\n        dispatch(requestParameterHandler(reqParams))\n        await handleSearch(reqParams)\n    }\n\n\n    return (\n        <div className=\"column__c__c \">\n            <div className=\"where__to__go\">\n                <p className=\"header__where__to__go\">Популярные направления</p>\n                <div className=\"city-container\">\n                    {data.map(item => (\n                        <Link\n                            to={link}\n                            key={item.city}\n                            onClick={() => searchToParams({\n                                header: item.city,\n                                name: item.city,\n                                banner: item.photo,\n                                location: item.location\n                            })}\n                            className=\"where__to__go__item city-item\"\n                            style={{\n                                backgroundImage: `url(${item.photo})`,\n                                backgroundSize: \"cover\",\n                                backgroundPosition: \"center\",\n                            }}\n                        >\n                            <div className=\"row__c__fe\" style={{width: \"100%\", marginTop: \"10px\", marginRight: \"10px\"}}>\n                                <span style={{\n                                    background: BLACK_OPACITY,\n                                    color: WHITE,\n                                    padding: \"5px\",\n                                    borderRadius: \"10px\"\n                                }}>\n                                   {minPrices[item.city] !== undefined ? `От ${minPrices[item.city]}` : \"Загрузка...\"}\n                                </span>\n                            </div>\n                            <div className=\"row__c__c\" style={{width: \"100%\"}}>\n                                <span className=\"hotel__city__card\" style={{background: BLACK_OPACITY}}>\n                                    {item.city}\n                                </span>\n                            </div>\n                        </Link>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import price from \"../../assets/image/7.png\"\nimport cash from \"../../assets/image/8.png\"\nimport esim from \"../../assets/image/esim.png\"\n\nexport const BenefitBlock = () => {\n    return (\n        <div>\n            <div className=\"column__c__c benefit__block desktop__benefit__block\">\n                <h2 className=\"text__content__black__b__26\">Путешествуйте вместе с нами</h2>\n                <div className=\"row__sa__c\" style={{marginTop: \"10px\", width: \"100%\",}}>\n                    <div className=\"column__c__c\" style={{margin: \"20px\",}}>\n                        <img\n                            src={price}\n                            alt=\"8\"\n                            width={50}\n                            height={50}\n                        />\n                        <span className=\"text__content__black__b__20\" style={{marginTop: \"20px\", textAlign: \"center\"}}\n                        >Гарантия цены</span>\n                    </div>\n                    <div className=\"column__c__c\" style={{margin: \"20px\"}}>\n                        <img\n                            src={cash}\n                            alt=\"7\"\n                            width={50}\n                            height={50}\n                        />\n                        <span className=\"text__content__black__b__20\" style={{marginTop: \"20px\", textAlign: \"center\"}}\n                        >Кэшбэк за проживание</span>\n                    </div>\n                    <div className=\"column__c__c\" style={{margin: \"20px\",}}>\n                        <img\n                            src={esim}\n                            alt=\"9\"\n                            width={50}\n                            height={50}\n                        />\n                        <span className=\"text__content__black__b__20\" style={{marginTop: \"20px\", textAlign: \"center\"}}\n                        >Всегда на связи E-SIM</span>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"column__c__c benefit__block tablet__benefit__block\">\n                <h2 className=\"text__content__black__b__16\">Путешествуйте вместе с нами</h2>\n                <div className=\"row__wrap__c__c\" style={{marginTop: \"10px\", width: \"100%\",}}>\n                    <div className=\"column__c__c\" style={{margin: \"20px\",}}>\n                        <img\n                            src={price}\n                            alt=\"8\"\n                            width={40}\n                            height={40}\n                        />\n                        <span className=\"text__content__black__b__16\" style={{marginTop: \"20px\", textAlign: \"center\"}}\n                        >Гарантия цены</span>\n                    </div>\n                    <div className=\"column__c__c\" style={{margin: \"20px\"}}>\n                        <img\n                            src={cash}\n                            alt=\"7\"\n                            width={40}\n                            height={40}\n                        />\n                        <span className=\"text__content__black__b__16\" style={{marginTop: \"20px\", textAlign: \"center\"}}\n                        >Кэшбэк за проживание</span>\n                    </div>\n                    <div className=\"column__c__c\" style={{margin: \"20px\",}}>\n                        <img\n                            src={esim}\n                            alt=\"9\"\n                            width={40}\n                            height={40}\n                        />\n                        <span className=\"text__content__black__b__16\" style={{marginTop: \"20px\", textAlign: \"center\"}}\n                        >Всегда на связи E-SIM</span>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}","import phone from \"../../assets/image/phone_1.png\";\nimport imgStore from \"../../assets/image/store.png\";\nimport qr from \"../../assets/image/qr.png\";\n\nexport const MobileApp = () => {\n    return (\n        <div>\n                <div className=\"row__c__c mobileApp__block desktop__mobile__app__block\">\n                    <div className=\"row__c__c\">\n                        <img\n                            src={phone}\n                            alt=\"phone\"\n                            width={\"60%\"}\n                            height={\"65%\"}\n                        />\n                    </div>\n                    <div\n                        className=\"column__fs\"\n                        style={{\n                            marginRight: \"5%\",\n                            marginLeft: \"5%\"\n                        }}\n                    >\n                <span className=\"header__block__black__b__36\">\n                    Все отели в вашем телефоне\n                </span>\n                        <span\n                            className=\"text__content__black__b__24\"\n                            style={{\n                                marginTop: \"20px\",\n                                marginBottom: \"20px\"\n                            }}\n                        >Скачивайте мобильное приложение\n                </span>\n                        <span\n                            className=\"header__banner__black__b__48\"\n                        >\n                    Всегда рядом\n                </span>\n                    </div>\n                    <div\n                        className=\"column__c\"\n                    >\n                <span className=\"text__content__black__b__24\">\n                    Отсканируй QR - код\n                </span>\n                        <img\n                            src={qr}\n                            alt=\"qr\"\n                            width={\"55%\"}\n                            height={\"55%\"}\n                            style={{\n                                marginTop: \"10px\"\n                            }}\n                        />\n                        <img\n                            src={imgStore}\n                            alt=\"store\"\n                            width={220}\n                            height={35}\n                            style={{\n                                marginTop: \"10px\"\n                            }}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row__c__c mobileApp__block tablet__830_1150__mobile__app__block\">\n                    <div className=\"row__c__c\">\n                        <img\n                            src={phone}\n                            alt=\"phone\"\n                            width={\"60%\"}\n                            height={\"65%\"}\n                        />\n                    </div>\n                    <div\n                        className=\"column__fs\"\n                        style={{\n                            marginRight: \"5%\",\n                            marginLeft: \"5%\"\n                        }}\n                    >\n                <span className=\"text__content__black__b__24\">\n                    Все отели в вашем телефоне\n                </span>\n                        <span\n                            className=\"text__content__black__20\"\n                            style={{\n                                marginTop: \"20px\",\n                                marginBottom: \"20px\"\n                            }}\n                        >Скачивайте мобильное приложение\n                </span>\n                        <span\n                            className=\"text__content__black__b__32\"\n                        >\n                    Всегда рядом\n                </span>\n                    </div>\n                    <div\n                        className=\"column__c\"\n                    >\n                <span className=\"text__content__black__b__24\">\n                    Отсканируй QR - код\n                </span>\n                        <img\n                            src={qr}\n                            alt=\"qr\"\n                            width={\"55%\"}\n                            height={\"55%\"}\n                            style={{\n                                marginTop: \"10px\"\n                            }}\n                        />\n                        <img\n                            src={imgStore}\n                            alt=\"store\"\n                            width={220}\n                            height={35}\n                            style={{\n                                marginTop: \"10px\"\n                            }}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row__c__c mobileApp__block tablet__630_830__mobile__app__block\">\n                    <div className=\"row__c__c\">\n                        <img\n                            src={phone}\n                            alt=\"phone\"\n                            width={\"60%\"}\n                            height={\"65%\"}\n                        />\n                    </div>\n                    <div\n                        className=\"column__fs\"\n                    >\n                <span className=\"text__content__white__b__15\">\n                    Все отели в вашем телефоне\n                </span>\n                        <span\n                            className=\"text__content__white__14\"\n                            style={{\n                                marginTop: \"10px\",\n                                marginBottom: \"10px\"\n                            }}\n                        >Скачивайте мобильное приложение\n                </span>\n                        <span\n                            className=\"text__content__white__b__20\"\n                        >\n                    Всегда рядом\n                </span>\n                    </div>\n                    <div\n                        className=\"column__c\"\n                    >\n                <span className=\"text__content__white__b__20\">\n                    Отсканируй QR - код\n                </span>\n                        <img\n                            src={qr}\n                            alt=\"qr\"\n                            width={\"55%\"}\n                            height={\"55%\"}\n                            style={{\n                                marginTop: \"4px\"\n                            }}\n                        />\n                        <img\n                            src={imgStore}\n                            alt=\"store\"\n                            width={220}\n                            height={35}\n                            style={{\n                                marginTop: \"4px\"\n                            }}\n                        />\n                    </div>\n                </div>\n\n                <div className=\"row__c__c mobileApp__block mobile__530_630__mobile__app__block\">\n                    <div className=\"row__c__c\">\n                        <img\n                            src={phone}\n                            alt=\"phone\"\n                            width={\"60%\"}\n                            height={\"65%\"}\n                        />\n                    </div>\n                    <div\n                        className=\"column__fs\"\n                    >\n                        <div className=\"column__fs\">\n                            <span className=\"text__content__white__b__15\">Все отели в вашем телефоне</span>\n                            <span className=\"text__content__white__14\"\n                                style={{\n                                    marginTop: \"10%\",\n                                    marginBottom: \"10%\"\n                                }}\n                            >Скачивайте мобильное приложение\n                            </span>\n                            <span className=\"text__content__white__b__16\">\n                            Всегда рядом\n                            </span>\n                        </div>\n                    </div>\n                    <div className=\"column__c\">\n                            <span className=\"text__content__white__b__15\">\n                                Отсканируй QR - код\n                            </span>\n                        <img\n                            src={qr}\n                            alt=\"qr\"\n                            width={\"55%\"}\n                            height={\"55%\"}\n                            style={{\n                                marginTop: \"4%\"\n                            }}\n                        />\n                        <img\n                            src={imgStore}\n                            alt=\"store\"\n                            width={220}\n                            height={35}\n                            style={{\n                                marginTop: \"4%\"\n                            }}\n                        />\n                    </div>\n                </div>\n\n\n                <div className=\"row__c__c mobileApp__block mobile__app__block\">\n                    <div className=\"row__c__c\">\n                        <img\n                            src={phone}\n                            alt=\"phone\"\n                            width={\"60%\"}\n                            height={\"65%\"}\n                        />\n                    </div>\n                    <div className=\"column__fs\" style={{marginRight: \"10%\"}}>\n                <span className=\"text__content__white__14\">\n                    Все отели в вашем телефоне\n                </span>\n                        <span\n                            className=\"text__content__white__12\"\n                            style={{\n                                marginTop: \"5%\",\n                                marginBottom: \"5%\"\n                            }}\n                        >Скачивайте мобильное приложение</span>\n                        <span className=\"text__content__white__b__16\">Всегда рядом</span>\n                        <img\n                            src={imgStore}\n                            alt=\"store\"\n                            width={120}\n                            height={20}\n                            style={{\n                                marginTop: \"3%\"\n                            }}\n                        />\n                    </div>\n                </div>\n        </div>\n    )\n}","import {Header} from \"../components/header/Header\";\nimport {Footer} from \"../components/footer/Footer\";\nimport {BannerSearch} from \"../components/blocks/BannerSearch\";\nimport {WhereToGo} from \"../components/blocks/WhereToGo\";\nimport {BenefitBlock} from \"../components/blocks/BenefitBlock\";\nimport {MobileApp} from \"../components/blocks/MobileApp\";\nimport banner from \"../assets/image/banner-main.jpg\"\nimport React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {checkInHandler, checkOutHandler, initDateRangeHandler} from \"../store/Search\";\nimport {dateFormater} from \"../components/hooks/dataFormater\";\n\n\nexport const Main = () => {\n    const cityOrHotel = useSelector(state => state.search.cityOrHotel)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if(cityOrHotel.dataRange.checkIn === \"\" &&  cityOrHotel.dataRange.checkOut === \"\") {\n            const startFull = new Date()\n            const endFull = new Date();\n            endFull.setDate(endFull.getDate() + 2);\n\n            const start = dateFormater(startFull)\n            const end = dateFormater(endFull)\n            dispatch(initDateRangeHandler())\n            dispatch(checkInHandler(start))\n            dispatch(checkOutHandler(end))\n        }\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <BannerSearch\n                    header={\"ЖИВИТЕ ТАМ, ГДЕ НРАВИТСЯ\"}\n                    banner={banner}\n\n                />\n                <div className=\"column\" style={{margin: \"1%\"}}>\n                    <WhereToGo />\n                    <BenefitBlock/>\n                    <MobileApp/>\n                </div>\n\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import Slider from '@mui/material/Slider';\nimport {ThemeProvider, createTheme} from '@mui/material/styles';\nimport line2 from \"../../assets/image/line2.png\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    rangeValueEndHandler,\n    rangeValueStartHandler\n} from \"../../store/Filter\";\nimport {GREY_BLACK} from \"../../theme/colors\";\n\n\nconst theme = createTheme({\n    palette: {\n        secondary: {\n            main: GREY_BLACK,\n        },\n    },\n});\n\nexport const RangePrice = ({handlerFocus}) => {\n    const dispatch = useDispatch()\n    const rangeValueStart = useSelector(state => state.filter.rangeValueStart)\n    const rangeValueEnd = useSelector(state => state.filter.rangeValueEnd)\n\n\n\n    const handleChange = (event, newValue) => {\n        dispatch(rangeValueStartHandler(newValue[0]))\n        dispatch(rangeValueEndHandler(newValue[1]))\n    };\n\n    const handleChangeStart = (event) => {\n        dispatch(rangeValueStartHandler(event.target.value))\n    }\n\n    const handleChangeEnd = (event) => {\n        dispatch(rangeValueEndHandler(event.target.value))\n    }\n\n    return (\n        <>\n            <div className=\"row__sb__c\">\n                <div className=\"input__range__block\">\n                    <input\n                        type=\"number\"\n                        className=\"input__range\"\n                        value={rangeValueStart}\n                        placeholder={\"0\"}\n                        onBlur={(event) => handlerFocus(event)}\n                        onChange={handleChangeStart}\n                    />\n                </div>\n                <div\n                    className=\"row__c__c\"\n                    style={{\n                        marginRight: \"5px\",\n                        marginLeft: \"5px\",\n                        marginBottom: \"30px\"\n                    }}\n                >\n                    <img\n                        src={line2}\n                        alt=\"line2\"\n                    />\n                </div>\n                <div className=\"input__range__block\">\n                    <input\n                        type=\"number\"\n                        className=\"input__range\"\n                        value={rangeValueEnd}\n                        placeholder={\"20000+\"}\n                        onBlur={(event) => handlerFocus(event)}\n                        onChange={handleChangeEnd}\n                    />\n                </div>\n            </div>\n            <ThemeProvider theme={theme}>\n                <Slider\n                    value={[rangeValueStart, rangeValueEnd]}\n                    onChange={handleChange}\n                    onMouseUp={(event) => handlerFocus(event)}\n                    max={200000}\n                    min={0}\n                    step={1}\n                    color=\"secondary\"\n                />\n            </ThemeProvider>\n        </>\n    )\n}","import {$api} from \"../http\"\n\n\n const NumberService = {\n     getAllNumbers: async (path,hotelId) => {\n         try {\n             const response = await $api.get(`${path}/numbers/${hotelId}`);\n             console.log(\"response\",response);\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to fetch numbers from number table');\n         }\n     },\n     getAllHotelIdNumbers: async (path, hotelIds) => {\n         try {\n             const response = await $api.post(`${path}/numbers/hotels`, {hotelIds});\n             console.log(\"response\",response);\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to fetch numbers from number table');\n         }\n     },\n     getNumberById: async (path,numberId) => {\n         try {\n             const response = await $api.get(`/${path}/number_one/${numberId}`);\n             console.log(\"numberId\",numberId);\n             console.log(\"response\",response);\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to fetch numbers from number table');\n         }\n     },\n     createNumber: async (dataNumber) => {\n         try {\n             const response = await $api.post('/setting_object/numbers', {dataNumber});\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to create numbers from number table');\n         }\n     },\n     updateNumber: async (numberId, dataNumber) => {\n         try {\n             const response = await $api.put(`/setting_number/numbers/${numberId}`, {dataNumber});\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to update numbers from number table');\n         }\n     },\n     deleteNumberById: async (numberId, categoryId) => {\n         try {\n             const response = await $api.post(`/setting_object/numbers/${numberId}`, {categoryId});\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to delete number from number table');\n         }\n     },\n     deleteNumbersByLastCategory: async (id) => {\n         try {\n             const response = await $api.delete(`/setting_object/numbers/${id}`);\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to update numbers from number table');\n         }\n     },\n     deleteAllNumbersByCategory: async (categoryId) => {\n         try {\n             const response = await $api.delete(`/setting_object/numbers/${categoryId}`);\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to update numbers from number table');\n         }\n     },\n     deleteAllNumberByObject: async (hotelId) => {\n         try {\n             const response = await $api.delete(`/main/numbers/${hotelId}`);\n             return response.data;\n         } catch (error) {\n             throw new Error('Failed to delete numbers at object from number table');\n         }\n     },\n}\n\nexport default NumberService;","import {Icon24SlidersVerticalOutline} from '@vkontakte/icons';\nimport {BLACK, ORANGE, WHITE} from \"../../theme/colors\";\nimport {RangePrice} from \"../inputs/RangePrice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {ButtonCounter} from \"../buttons/ButtonCounter\";\nimport {Button} from \"../buttons/Button\";\nimport { useEffect} from \"react\";\nimport {\n    chooseParamHandler,\n    countOtherSortHandler, distanceHandler,\n    handlerAddBedroom, handlerDelBedroom, initFilterHandler, nutritionHandler, politicalCancelHandler,\n    resetParamHandler, reviewScoreHandler, shortFacilitiesHandler, starsHandler, typeObjectHandler\n} from \"../../store/Filter\";\nimport {\n setFilteredHotels,\n} from \"../../store/HotelsList\";\nimport {handlerCountHotels} from \"../../store/Main\";\nimport NumberService from \"../../services/number.service\";\nimport {parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\n\n\nexport const Filter = ({updateHoleList}) => {\n    const dispatch = useDispatch()\n    const listFilter = useSelector(state => state.filter.listFilter)\n    const bedroomCount = useSelector(state => state.filter.bedroomCount)\n    const objectList = useSelector(state => state.hotels_list.objectList)\n    const filteredHotels = useSelector(state => state.hotels_list.filteredHotels)\n    const initFilter = useSelector(state => state.filter.initFilter)\n    const typeObject = useSelector(state => state.filter.typeObject)\n    const reviewScore = useSelector(state => state.filter.reviewScore)\n    const distance = useSelector(state => state.filter.distance)\n    const stars = useSelector(state => state.filter.stars)\n    const politicalCancel = useSelector(state => state.filter.politicalCancel)\n    const nutrition = useSelector(state => state.filter.nutrition)\n    const shortFacilities = useSelector(state => state.filter.shortFacilities)\n    const rangeValueStart = useSelector(state => state.filter.rangeValueStart)\n    const rangeValueEnd = useSelector(state => state.filter.rangeValueEnd)\n    const requestParameters = useSelector(state => state.search.cityOrHotel)\n\n\n    useEffect(() => {\n        if(!initFilter || objectList.length !== 0) {\n            dispatch(initFilterHandler(true))\n            dispatch(countOtherSortHandler(objectList));\n            // console.log(\"UPDATE\")\n        }\n    }, [])\n\n    const handleCategoryChange = (result, idElement, idBlock, value) => {\n        dispatch(chooseParamHandler({idElement: idElement, idBlock: idBlock}));\n\n        switch (idBlock) {\n            case 0:\n                const newTypeObject = typeObject.includes(value)\n                    ? typeObject.filter((cat) => cat !== value)\n                    : [...typeObject, value];\n\n\n                dispatch(typeObjectHandler(newTypeObject))\n\n                handleFilterChange(\n                    newTypeObject,\n                    stars,\n                    reviewScore,\n                    distance,\n                    politicalCancel,\n                    nutrition,\n                    shortFacilities,\n                    result,\n\n                );\n                break;\n            case 1:\n                const newStars = stars.includes(value)\n                    ? stars.filter((cat) => cat !== value)\n                    : [...stars, value];\n                dispatch(starsHandler(newStars))\n                handleFilterChange(\n                    typeObject,\n                    newStars,\n                    reviewScore,\n                    distance,\n                    politicalCancel,\n                    nutrition,\n                    shortFacilities,\n                    result,\n\n                );\n                break;\n            case 2:\n                const newReviewScore = reviewScore.includes(value)\n                    ? reviewScore.filter((cat) => cat !== value)\n                    : [...reviewScore, value];\n                dispatch(reviewScoreHandler(newReviewScore))\n                handleFilterChange(\n                    typeObject,\n                    stars,\n                    newReviewScore,\n                    distance,\n                    politicalCancel,\n                    nutrition,\n                    shortFacilities,\n                    result,\n\n                );\n                break;\n            case 3:\n                const newDistance = distance.includes(value)\n                    ? distance.filter((cat) => cat !== value)\n                    : [...distance, value];\n                dispatch(distanceHandler(newDistance))\n                handleFilterChange(\n                    typeObject,\n                    stars,\n                    reviewScore,\n                    newDistance,\n                    politicalCancel,\n                    nutrition,\n                    shortFacilities,\n                    result,\n\n                );\n                break;\n            case 4:\n                const newPoliticalCancel = politicalCancel.includes(value)\n                    ? politicalCancel.filter((cat) => cat !== value)\n                    : [...politicalCancel, value];\n                dispatch(politicalCancelHandler(newPoliticalCancel))\n                handleFilterChange(\n                    typeObject,\n                    stars,\n                    reviewScore,\n                    distance,\n                    newPoliticalCancel,\n                    nutrition,\n                    shortFacilities,\n                    result,\n\n                );\n                break;\n            case 5:\n                const newNutrition = nutrition.includes(value)\n                    ? nutrition.filter((cat) => cat !== value)\n                    : [...nutrition, value];\n                dispatch(nutritionHandler(newNutrition))\n                handleFilterChange(\n                    typeObject,\n                    stars,\n                    reviewScore,\n                    distance,\n                    politicalCancel,\n                    newNutrition,\n                    shortFacilities,\n                    result,\n\n                );\n                break;\n            case 6:\n                const newShortFacilities = shortFacilities.includes(value)\n                    ? shortFacilities.filter((cat) => cat !== value)\n                    : [...shortFacilities, value];\n                dispatch(shortFacilitiesHandler(newShortFacilities))\n                handleFilterChange(\n                    typeObject,\n                    stars,\n                    reviewScore,\n                    distance,\n                    politicalCancel,\n                    nutrition,\n                    newShortFacilities,\n                    result,\n\n                );\n                break;\n            default:\n                break;\n        }\n    };\n\n    const filterObjectPrice = async (array) => {\n        try {\n            const data = await NumberService.getAllHotelIdNumbers(\"hotels_map\", array);\n            const resultNumbers = parseJSONPropertiesInArray(data);\n            const number = await filterNumbers(resultNumbers);\n            return number;\n        } catch (error) {\n            console.error(\"An error occurred:\", error);\n            return null; // Возвращаем null в случае ошибки\n        }\n    }\n    // //Фильтр\n    const handleFilterChange = async (typeObject, stars, reviewScore, distance, politicalCancel, nutrition, shortFacilities, result) => {\n        setTimeout(async () => {\n\n\n            //Базовые данные\n            let updatedFilteredHotels = []\n\n            objectList.map(item => {\n                updatedFilteredHotels.push(item)\n            })\n\n            // console.log(\"Параметры\", typeObject, stars, reviewScore, distance, politicalCancel, nutrition, shortFacilities, !result);\n\n\n            if (typeObject && typeObject.length > 0) {\n                updatedFilteredHotels = updatedFilteredHotels.filter((hotel) =>\n                    typeObject.includes(hotel.property_type)\n                );\n\n            }\n\n            if (stars && stars.length > 0) {\n                updatedFilteredHotels = updatedFilteredHotels.filter((hotel) =>\n                    stars.includes(hotel.stars)\n                );\n\n            }\n\n            if (reviewScore && reviewScore.length > 0) {\n                updatedFilteredHotels = updatedFilteredHotels.filter((hotel) =>\n                    reviewScore.includes(hotel.rating)\n                );\n            }\n\n            if (distance && distance.length > 0) {\n                updatedFilteredHotels = updatedFilteredHotels.filter((hotel) =>\n                    distance.includes(Math.ceil(hotel.distance))\n                );\n            }\n            if (politicalCancel && politicalCancel.length > 0) {\n                updatedFilteredHotels = updatedFilteredHotels.map((hotel) => {\n                    hotel.political_cancel.filter(value => {\n                        if (politicalCancel.includes(value)) {\n                            console.log(\"Поиск значения\", value)\n                        }\n                    })\n                    return hotel\n                })\n            }\n\n            if (nutrition && nutrition.length > 0) {\n                updatedFilteredHotels = updatedFilteredHotels.map((hotel) => {\n                    hotel.nutrition.filter(value => {\n                        if (nutrition.includes(value)) {\n                            console.log(\"Поиск значения\", value)\n                        }\n                    })\n                    return hotel\n                })\n            }\n\n            if (shortFacilities && shortFacilities.length > 0) {\n\n                updatedFilteredHotels = updatedFilteredHotels.map((hotel) => {\n                    hotel.shortFacilities.filter(value => {\n                        if (shortFacilities.includes(value)) {\n                            console.log(\"Поиск значения\", value)\n                        }\n                    })\n                    return hotel\n                })\n            }\n\n            const listNumber = await filterObjectPrice(updatedFilteredHotels.map(hotelId => hotelId.hotelId))\n            const newArray = listNumber.filter(price => price.priceBase >= rangeValueStart && price.priceBase <= rangeValueEnd)\n            const resultFilterObject = filterObject(updatedFilteredHotels, newArray)\n            dispatch(handlerCountHotels(resultFilterObject.length))\n            updateFilteredData(resultFilterObject)\n        }, 0)\n    }\n\n    const updateFilteredData = (array) => {\n        dispatch(countOtherSortHandler(array));\n        dispatch(setFilteredHotels(array));\n        updateHoleList()\n    }\n\n\n    const filterNumbers = async (array) => {\n        const checkIn = requestParameters.checkIn\n        const checkOut = requestParameters.checkOut\n        const guest = requestParameters.guest.adult + requestParameters.guest.child.length\n        const filteredNumbers = await array.filter(number => {\n            // Проверяем диапазон дат в bookingList\n            const isDateAvailable = number.bookingList.every(booking => {\n                return !(checkIn >= booking.checkIn && checkIn < booking.checkOut) &&\n                    !(checkOut > booking.checkIn && checkOut <= booking.checkOut);\n            });\n            // Проверяем количество гостей\n            const isGuestCountValid = number.guestCount.length >= guest;\n            return isDateAvailable && isGuestCountValid;\n        });\n        return filteredNumbers\n    }\n\n\n    const filterObjectBedRooms = async (array) => {\n        try {\n            const data = await NumberService.getAllHotelIdNumbers(\"hotels_map\", array);\n            const resultNumbers = parseJSONPropertiesInArray(data);\n            const number = await filterNumbers(resultNumbers);\n            console.log(\"number filters\", number);\n            return number;\n        } catch (error) {\n            console.error(\"An error occurred:\", error);\n            return null; // Возвращаем null в случае ошибки\n        }\n    }\n\n    const filterObject = (array, numbers) => {\n        const filterObject = array.filter(object => {\n            return numbers.find(number => object.hotelId === number.hotelId);\n        });\n        return filterObject\n    }\n\n    const addDelBedrooms = async (action, value) => {\n        //Базовые данные\n        let updatedFilteredHotelsBedroom = []\n\n        filteredHotels === null ?\n            objectList.map(item => {\n                updatedFilteredHotelsBedroom.push(item)\n\n            })\n            :\n            filteredHotels.map(item => {\n                updatedFilteredHotelsBedroom.push(item)\n            })\n        const listNumber = await filterObjectBedRooms(updatedFilteredHotelsBedroom.map(hotelId => hotelId.hotelId))\n\n        if (action === 'update') {\n\n            const bedroomSort = listNumber.filter(bedroom => bedroom.countBedrooms <= bedroomCount);\n            const resultFilterObject = filterObject(updatedFilteredHotelsBedroom, bedroomSort)\n            updateFilteredData(resultFilterObject)\n\n        }\n        if (action === 'add') {\n\n            dispatch(handlerAddBedroom(value))\n            const bedroomSort = listNumber.filter(bedroom => bedroom.countBedrooms <= bedroomCount + (bedroomCount === 4 ? 0 : 1));\n            const resultFilterObject = filterObject(updatedFilteredHotelsBedroom, bedroomSort)\n            updateFilteredData(resultFilterObject)\n\n        }\n        if (action === 'del') {\n            dispatch(handlerDelBedroom(value))\n            const bedroomSort = listNumber.filter(bedroom => bedroom.countBedrooms <= bedroomCount - (bedroomCount === 1 ? 0 : 1));\n            const resultFilterObject = filterObject(updatedFilteredHotelsBedroom, bedroomSort)\n            updateFilteredData(resultFilterObject)\n        }\n    }\n\n\n\n\n\n\n\n    const handlerFocus = async (event) => {\n        if (event.currentTarget) {\n            //Базовые данные\n            if(typeObject.length === 0 && reviewScore.length === 0 && distance.length === 0 && stars.length === 0 && politicalCancel.length === 0 && nutrition.length === 0 && shortFacilities.length === 0 ){\n                const listNumber = await filterObjectPrice(objectList.map(hotelId => hotelId.hotelId))\n                const newArray = listNumber.filter(price => price.priceBase >= rangeValueStart && price.priceBase <= rangeValueEnd)\n                const resultFilterObject = filterObject(objectList, newArray)\n                updateFilteredData(resultFilterObject)\n            } else {\n                handleFilterChange(\n                    typeObject,\n                    stars,\n                    reviewScore,\n                    distance,\n                    politicalCancel,\n                    nutrition,\n                    shortFacilities,\n                    false,\n                );\n            }\n        }\n\n    }\n    //\n    // useEffect(() => {\n    //     const checkedArray = []\n    //     listFilter.map(item => {\n    //         item.options.map(opt => {\n    //             if (opt.result === true) {\n    //                 checkedArray[0] = opt.result\n    //             }\n    //         })\n    //\n    //     })\n    //\n    //     if (checkedArray[0] === undefined) {\n    //         dispatch(setFilteredHotels(null));\n    //     } else {\n    //         console.log(\"Фильтр еще не пуст\");\n    //     }\n    // }, [handleFilterChange, handleCategoryChange, listFilter])\n\n    const resetParamsHandler = () => {\n        dispatch(resetParamHandler())\n        dispatch(setFilteredHotels(null))\n        dispatch(countOtherSortHandler(objectList));\n        updateHoleList()\n    }\n\n\n    return (\n        <div>\n            <div className=\"column laptop__907__filter\"\n                 style={{\n                     background: WHITE,\n                     width: \"240px\",\n                     borderRadius: \"15px 15px 0 0\",\n                     marginRight: \"30px\",\n                 }}\n            >\n                <div className=\"row__c__fs\"\n                     style={{marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\"}}>\n                    <Icon24SlidersVerticalOutline color={BLACK}/>\n                    <span className=\"text__content__black__b__20\" style={{marginLeft: \"10px\"}}>\n                    Параметры\n                </span>\n                </div>\n                <div className=\"column__fs filter\">\n                    <h4 className=\"text__content__black__b__16\">\n                        Цена\n                    </h4>\n                    <RangePrice handlerFocus={handlerFocus}/>\n                    {listFilter.map(item => (\n                        <div\n                            className=\"column__fs\"\n                            key={item.id}\n                        >\n                            <h4 className=\"text__content__black__b__16\">\n                                {item.header}\n                            </h4>\n                            {item.options.map(option => (\n                                <div\n                                    className=\"row__sb__c\"\n                                    key={option.id}\n                                >\n                                    <div className=\"row__c__c\">\n                                        <input\n                                            type=\"checkbox\"\n                                            onChange={() => handleCategoryChange(option.result, option.id, item.id, option.value)}\n                                            checked={option.result}\n                                            disabled={option.count === 0}\n                                            style={{\n                                                marginTop: \"8px\",\n                                                cursor: \"pointer\",\n                                                color: ORANGE\n                                            }}\n                                        />\n                                        <span\n                                            className=\"text__content__black__13\"\n                                            style={{\n                                                marginLeft: \"5px\",\n                                                marginTop: \"5px\"\n                                            }}\n                                        >\n                                    {option.name}\n                                </span>\n                                    </div>\n                                    <span className=\"text__content__grey__12\">\n                                {option.result ? \"\" : option.count}\n                            </span>\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n                    <h4 className=\"text__content__black__b__16\">\n                        Количество спален\n                    </h4>\n                    <div className=\"row__sb__c\">\n                <span className=\"text__content__black__13\">\n                  Спальни\n                </span>\n                        <ButtonCounter\n                            handleDel={() => addDelBedrooms(\"del\", 1)}\n                            handleAdd={() => addDelBedrooms(\"add\", 1)}\n                            count={bedroomCount}\n                            style={\"row__sb__c counterBtn\"}\n                        />\n                    </div>\n                </div>\n\n                <Button\n                    name={\"Сбросить параметры\"}\n                    style={\"resetOptionsBtn\"}\n                    handler={() => resetParamsHandler()}\n                    padding={\"0\"}\n                    styleText={\"text__content__white__14\"}\n                    marginLeft={\"0\"}\n                    marginTop={\"0\"}\n                />\n            </div>\n\n\n            <div className=\"column tablet__906__filter\"\n                 style={{background: WHITE, width: \"260px\", height: \"100vh\"}}>\n                <div className=\"row__c__fs\"\n                     style={{marginLeft: \"10px\", marginTop: \"10px\", marginBottom: \"10px\"}}>\n                    <Icon24SlidersVerticalOutline color={BLACK}/>\n                    <span className=\"text__content__black__b__20\" style={{marginLeft: \"10px\"}}>\n                    Параметры\n                </span>\n                </div>\n                <div className=\"column__fs filter\">\n                    <h4 className=\"text__content__black__b__16\">\n                        Цена\n                    </h4>\n                    <RangePrice/>\n                    {listFilter.map(item => (\n                        <div\n                            className=\"column__fs\"\n                            key={item.id}\n                        >\n                            <h4 className=\"text__content__black__b__16\">\n                                {item.header}\n                            </h4>\n                            {item.options.map(option => (\n                                <div\n                                    className=\"row__sb__c\"\n                                    key={option.id}\n                                >\n                                    <div className=\"row__c__c\">\n                                        <input\n                                            type=\"checkbox\"\n                                            onChange={() => handleCategoryChange(option.result, option.id, item.id, option.value)}\n                                            checked={option.result}\n                                            style={{\n                                                marginTop: \"8px\",\n                                                // width: \"20px\",\n                                                // height: \"20px\",\n                                                cursor: \"pointer\",\n                                                color: ORANGE\n                                            }}\n                                        />\n                                        <span\n                                            className=\"text__content__black__13\"\n                                            style={{\n                                                marginLeft: \"5px\",\n                                                marginTop: \"5px\"\n                                            }}\n                                        >\n                                    {option.name}\n                                </span>\n                                    </div>\n                                    <span className=\"text__content__grey__12\">\n                                {option.count}\n                            </span>\n                                </div>\n                            ))}\n                        </div>\n                    ))}\n                    <h4 className=\"text__content__black__b__16\">\n                        Количество спален\n                    </h4>\n                    <div className=\"row__sb__c\">\n                <span className=\"text__content__black__13\">\n                  Спальни\n                </span>\n                        <ButtonCounter\n                            handleDel={() => addDelBedrooms(\"del\", 1)}\n                            handleAdd={() => addDelBedrooms(\"add\", 1)}\n                            count={bedroomCount}\n                            style={\"row__sb__c counterBtn\"}\n                        />\n                    </div>\n                </div>\n\n                <Button\n                    name={\"Сбросить параметры\"}\n                    style={\"resetOptionsBtn\"}\n                    handler={() => resetParamsHandler()}\n                    padding={\"5%\"}\n                    styleText={\"text__content__white__14\"}\n                    marginLeft={\"0\"}\n                    marginTop={\"0px\"}\n                />\n            </div>\n        </div>\n    )\n}","export const Rating = ({rating, countReviews, type}) => {\n    return (\n        <>\n            {\n                type === \"review\" ?\n                    <div className=\"column__c\" style={{\n                        margin: 10\n                    }}>\n                        <div className=\"column__c__c rating__block\">\n                            <span className=\"text__content__white__14\">Оценка</span>\n                            <span\n                                className=\"assessment__b\"\n                                style={{textShadow: \"0 0 8px rgba(0, 0, 0, 0.55)\"}}\n                            >{rating}</span>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"column__c\">\n                        <div className=\"row__c__c rating__header\">\n                            <span className=\"text__content__white__14\">Рейтинг</span>\n                        </div>\n                        <div className=\"column__c__c rating__block\">\n                    <span\n                        className=\"assessment__b\"\n                        style={{textShadow: \"0 0 8px rgba(0, 0, 0, 0.55)\"}}\n                    >{rating}</span>\n                            <div className=\"row__c__c assessment\">\n                                <span className=\"text__content__grey__12\">{countReviews} оценок</span>\n                            </div>\n                        </div>\n                    </div>\n            }\n        </>\n    )\n}","import {$api} from \"../http\"\n\n\nconst FavoriteService = {\n    getAllFavorites: async (path,userId) => {\n        try {\n            const response = await $api.get(`/${path}/get/${userId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch bookings from booking table');\n        }\n    },\n    createFavorite: async (path,dataFavorite) => {\n        try {\n            const response = await $api.post(`/${path}/add`, {dataFavorite});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to create booking from booking table');\n        }\n    },\n    deleteFavorite: async (path,hotelId) => {\n        try {\n            const response = await $api.delete(`/${path}/delete/${hotelId}`);\n            console.log(\"response bookings\", response);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete booking from booking table');\n        }\n    },\n}\n\nexport default FavoriteService;","export function getCurrentDate() {\n    const currentDate = new Date();\n    const day = String(currentDate.getDate()).padStart(2, '0');\n    const month = String(currentDate.getMonth() + 1).padStart(2, '0'); // Месяцы начинаются с 0\n    const year = currentDate.getFullYear();\n\n    return `${day}.${month}.${year}`;\n}\nexport function getYesterdayDate() {\n    const today = new Date();\n    const yesterday = new Date(today);\n    yesterday.setDate(today.getDate() - 1);\n\n    const year = yesterday.getFullYear();\n    const month = String(yesterday.getMonth() + 1).padStart(2, '0');\n    const day = String(yesterday.getDate()).padStart(2, '0');\n\n    const formattedDate = `${year}-${month}-${day}`;\n    return formattedDate;\n}\n","import React, {useState, useEffect} from 'react';\nimport {\n    Icon24BrowserBack,\n    Icon24BrowserForward,\n    Icon24LikeOutline,\n    Icon24Like,\n    Icon24RadioOn,\n    Icon24RadioOff\n} from '@vkontakte/icons';\nimport no_photo from \"../../assets/image/no_photo.jpg\";\nimport {WHITE} from '../../theme/colors';\nimport {useSelector} from 'react-redux';\nimport {useNavigate} from 'react-router-dom';\nimport FavoriteService from \"../../services/favorite.service\";\nimport {v4 as uuidv4} from \"uuid\";\nimport {getCurrentDate} from \"../../utils/createDataNow\";\n\nexport const SliderMini = React.memo(({photoHotel, hotelId, width, height, borderRadius, minWidth}) => {\n    const [count, setCount] = useState(0);\n    const [favorite, setFavorite] = useState([]);\n    const userId = useSelector((state) => state.auth.userId);\n    const [arrayImage, setArrayImage] = useState([]);\n    const auth = useSelector(state => state.auth.isAuth);\n    const navigate = useNavigate();\n\n    const loadFavorite = () => {\n        FavoriteService.getAllFavorites(\"hotels_map\", userId)\n            .then(data => {\n                setFavorite(data)\n            })\n    }\n    useEffect(() => {\n        if (auth) {\n            if (favorite.length === 0) {\n                loadFavorite()\n            }\n        } else {\n            console.log(\"Не авторизован!\");\n        }\n    }, [])\n\n\n\n\n    useEffect(() => {\n        if (photoHotel) {\n            setArrayImage(photoHotel.slice(0, 10).map(item => item.url));\n        }\n    }, [photoHotel]);\n\n    const addFavorite = () => {\n        if (auth) {\n            const isFavorite = favorite.some(fav => +fav.hotelId === hotelId);\n            if (!isFavorite) {\n                const dataFavorite = {\n                    id: uuidv4(),\n                    userId: userId,\n                    hotelId: hotelId,\n                    date: getCurrentDate()\n                };\n                setFavorite(prevFavorite => [...prevFavorite, dataFavorite]); // Добавление нового элемента в массив favorite\n                FavoriteService.createFavorite(\"hotels_map\", dataFavorite)\n                    .then(data => console.log(\"Add favorite\", data))\n                    .catch(e => console.log(e))\n                    .finally(() => loadFavorite());\n            }\n        } else {\n            navigate('/api/login');\n        }\n    };\n\n    const removeFavorite = () => {\n\n        if (auth) {\n            const isFavorite = favorite.some(fav => +fav.hotelId === hotelId);\n            if (isFavorite) {\n                const deleteFavorite = favorite.filter(fav => +fav.hotelId !== hotelId)\n                setFavorite(deleteFavorite)\n                FavoriteService.deleteFavorite(\"hotels_map\", hotelId)\n                    .then(data => console.log(\"Del favorite\", data))\n                    .catch(e => console.log(e))\n                    .finally(() => loadFavorite())\n            }\n        } else {\n            navigate('/api/login');\n        }\n    };\n\n    const handlerForward = () => {\n        setCount(prevCount => (prevCount + 1) % arrayImage.length);\n    };\n\n    const handlerBack = () => {\n        setCount(prevCount => (prevCount - 1 + arrayImage.length) % arrayImage.length);\n    };\n\n\n    return (\n        <div\n            className=\"column__sb\"\n            style={{\n                height: height,\n                minWidth: minWidth,\n                maxWidth: width,\n                borderRadius: borderRadius,\n                backgroundImage: arrayImage.length === 0 ? `url(${no_photo})` : `url(${arrayImage[count]})`,\n                backgroundSize: 'cover',\n                backgroundPosition: 'center',\n            }}\n        >\n            <div className=\"row__c__fe\">\n                {favorite.some(fav => +fav.hotelId === hotelId) ? (\n                    <div className=\"cardControlSlider\" onClick={() => removeFavorite()}>\n        <Icon24Like width={35} height={35} color={WHITE}/>\n    </div>\n                ) : (\n                    <div className=\"cardControlSlider\" onClick={() =>  addFavorite() }>\n        <Icon24LikeOutline width={35} height={35} color={WHITE}/>\n    </div>\n                )}\n            </div>\n            <div className=\"row__sb__c\">\n                <span className=\"cardControlSlider\" onClick={handlerBack}>\n                    <Icon24BrowserBack color={WHITE}/>\n                </span>\n                <span className=\"cardControlSlider\" onClick={handlerForward}>\n                    <Icon24BrowserForward color={WHITE}/>\n                </span>\n            </div>\n            <span className=\"row__c__c cardControlSlider\">\n                {arrayImage.map((url, index) => (\n                    <span key={index} style={{padding: index === count ? '5px' : '2.5px'}}>\n                        {index === count ? (\n                            <Icon24RadioOn width={9} height={9} color={WHITE}/>\n                        ) : (\n                            <Icon24RadioOff width={9} height={9} color={WHITE}/>\n                        )}\n                    </span>\n                ))}\n            </span>\n        </div>\n    );\n});\n\n","// Функция для форматирования числа в денежный формат\nexport function formatMoney(number) {\n    // Преобразуем число в строку\n    let str = number.toString();\n    // Проверяем, есть ли десятичная точка или запятая\n    let dotIndex = str.indexOf(\".\");\n    let commaIndex = str.indexOf(\",\");\n    // Если есть точка, то разделяем строку на целую и дробную части\n    if (dotIndex > -1) {\n        let integerPart = str.slice(0, dotIndex);\n        let decimalPart = str.slice(dotIndex + 1);\n        // Добавляем пробелы между тысячами в целой части\n        integerPart = integerPart.replace(/\\d{1,3}(?=(\\d{3})+(?!\\d))/g, \"$& \");\n        // Возвращаем отформатированную строку\n        return integerPart + \",\" + decimalPart;\n    }\n    // Если есть запятая, то разделяем строку на целую и дробную части\n    else if (commaIndex > -1) {\n        let integerPart = str.slice(0, commaIndex);\n        let decimalPart = str.slice(commaIndex + 1);\n        // Добавляем пробелы между тысячами в целой части\n        integerPart = integerPart.replace(/\\d{1,3}(?=(\\d{3})+(?!\\d))/g, \"$& \");\n        // Возвращаем отформатированную строку\n        return integerPart + \".\" + decimalPart;\n    }\n    // Если нет точки и запятой, то просто добавляем пробелы между тысячами\n    else {\n        return str.replace(/\\d{1,3}(?=(\\d{3})+(?!\\d))/g, \"$& \");\n    }\n}","import {$api} from \"../http\"\n\n\nconst PhotoObjectService = {\n    getAllPhotosObject: async (path, hotelId) => {\n        try {\n            const response = await $api.get(`/${path}/by_hotelId/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch object photos from photos object table');\n        }\n    },\n    createPhotoObject: async (path,objectPhotos) => {\n        try {\n            const response = await $api.post(`/${path}/object/photos`, {objectPhotos});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch object photos from photos object table');\n        }\n    },\n    deletePhotoObject: async (path,idImg) => {\n        try {\n            const response = await $api.delete(`/${path}/object/photo/${idImg}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete object photo from photos object table');\n        }\n    },\n    deleteAllPhotosObject: async (hotelId) => {\n        try {\n            const response = await $api.delete(`/object/photos/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete object photos from photos object table');\n        }\n    },\n}\n\nexport default PhotoObjectService","import {$api} from \"../http\"\n\n\nconst RatingService = {\n    getAllRatingObject: async (hotelId) => {\n        try {\n            const response = await $api.get(`/hotel/rating/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch object photos from photos object table');\n        }\n    },\n    getAllCityRatingObject: async (path,city) => {\n        try {\n            const response = await $api.get(`/${path}/rating/city/${city}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch object photos from photos object table');\n        }\n    },\n    createRatingObject: async (rating) => {\n        try {\n            const response = await $api.post(`/hotel/rating`, {rating});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch object photos from photos object table');\n        }\n    },\n    // deleteRatingObject: async (path,idImg) => {\n    //     try {\n    //         const response = await $api.delete(`/${path}/object/photo/${idImg}`);\n    //         return response.data;\n    //     } catch (error) {\n    //         throw new Error('Failed to delete object photo from photos object table');\n    //     }\n    // },\n}\n\nexport default RatingService","import {Button} from \"../buttons/Button\";\nimport metro from \"../../assets/image/metro.png\"\nimport {GREY_BLACK, WHITE} from \"../../theme/colors\";\nimport {Rating} from \"./Rating\";\nimport {SliderMini} from \"../slider/SliderMini\";\nimport {Link} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    dataNumbersListHandler,\n    loadingMapHandler, loadNumberListModalHandler,\n    showPlaceMarkHandler\n} from \"../../store/HotelsList\";\nimport {useEffect, useState} from \"react\";\nimport {formatMoney} from \"../../utils/formating-money\";\nimport PhotoObjectService from \"../../services/photo-object.service\";\nimport {parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\nimport RatingService from \"../../services/rating.service\";\nimport NumberService from \"../../services/number.service\";\n\nexport const HotelCard = (\n    {\n        toggleDrawerMap,\n        name,\n        nearMetro,\n        address,\n        distance,\n        hotelId,\n        location,\n        item,\n        hotelCity,\n    }) => {\n    const dispatch = useDispatch()\n    const showMetro = useSelector(state => state.hotels_list.metroShow)\n    const dataNumbersList = useSelector(state => state.hotels_list.dataNumbersList)\n    const [objectPhotos, setObjectPhotos] = useState([]);\n    const [averagePrice, setAveragePrice] = useState(\"\");\n    const [rating, setRating] = useState(0)\n    const [ratingObject, setRatingObject] = useState(null);\n    const [ratingCount, setRatingCount] = useState([]);\n    const requestParameters = useSelector(state => state.hotels_item.cityOrHotel)\n\n    const roundToOneDecimal = (num) => Math.round(num * 10) / 10;\n\n    const calculateTotalRating = (ratings) => {\n        const totalRating = Object.values(ratings).reduce((acc, curr) => acc + curr, 0);\n        const averageRating = totalRating / Object.keys(ratings).length;\n        return roundToOneDecimal(averageRating);\n    };\n\n    useEffect(() => {\n        if (!ratingObject) {\n            RatingService.getAllRatingObject(hotelId)\n                .then(data => {\n                    if(data.data.length !== 0) {\n                        setRatingCount(data.data)\n                        const ratings = data.data.reduce((acc, item, index, array) => {\n                            acc.cleanliness = (acc.cleanliness || 0) + item.cleanliness / array.length;\n                            acc.mood = (acc.mood || 0) + item.mood / array.length;\n                            acc.timelyCheckIn = (acc.timelyCheckIn || 0) + item.timelyCheckIn / array.length;\n                            acc.priceQuality = (acc.priceQuality || 0) + item.priceQuality / array.length;\n                            acc.photoMatch = (acc.photoMatch || 0) + item.photoMatch / array.length;\n                            acc.qualityService = (acc.qualityService || 0) + item.qualityService / array.length;\n                            return acc;\n                        }, {});\n\n                        Object.keys(ratings).forEach(key => {\n                            ratings[key] = roundToOneDecimal(ratings[key]);\n                        });\n\n                        // Вызов функции для расчета общего рейтинга и сохранение результата в локальную переменную rating\n                        const totalRating = calculateTotalRating(ratings);\n                        setRating(totalRating);\n                        setRatingObject(ratings);\n                    } else {\n                        const ratings = {\n                            cleanliness: 0,\n                            mood: 0,\n                            timelyCheckIn: 0,\n                            priceQuality: 0,\n                            photoMatch: 0,\n                            qualityService: 0\n                        }\n                        setRating(0);\n                        setRatingObject(ratings);\n                    }\n\n                })\n                .catch(error => console.log(error));\n        }\n        if (objectPhotos.length === 0) {\n            PhotoObjectService.getAllPhotosObject(\"hotels_map\", hotelId)\n                .then(data => setObjectPhotos(data))\n        }\n\n        // Фильтрация номеров по hotelId\n        const filteredPrices = dataNumbersList.filter(price => price.hotelId === hotelId);\n        // Поиск средней цены\n        if (filteredPrices.length > 0) {\n            const minPrice = Math.min(...filteredPrices.map(price => price.priceBase));\n            const filteredMinPrice = minPrice > 0 ? minPrice : 0;\n            setAveragePrice(filteredMinPrice);\n        } else {\n            console.log(\"Нет данных для указанного hotelId\");\n        }\n    }, [])\n\n\n    const showHotelOnMap = () => {\n        toggleDrawerMap()\n        dispatch(showPlaceMarkHandler(true))\n        dispatch(loadingMapHandler(true))\n        setTimeout(() => {\n            dispatch(loadingMapHandler(false))\n        }, 1000)\n        console.log(\"// Обновление местоположения\", location);\n        const localDataLocation = {lat: location.lat, lon: location.lon, zoom: 16}\n        localStorage.setItem('location', JSON.stringify(localDataLocation));\n    }\n\n    const showHotelOnMapDesktop = () => {\n        dispatch(showPlaceMarkHandler(true))\n        dispatch(loadingMapHandler(true))\n        setTimeout(() => {\n            dispatch(loadingMapHandler(false))\n        }, 1000)\n        console.log(\"// Обновление местоположения\", location);\n        const localDataLocation = {lat: location.lat, lon: location.lon, zoom: 16}\n        localStorage.setItem('location', JSON.stringify(localDataLocation));\n    }\n\n    const filterNumbers = async (array) => {\n        const checkIn = requestParameters.checkIn\n        const checkOut = requestParameters.checkOut\n        const guest = requestParameters.guest.adult + requestParameters.guest.child.length\n        const filteredNumbers = await array.filter(number => {\n            // Проверяем диапазон дат в bookingList\n            const isDateAvailable = number.bookingList.every(booking => {\n                return !(checkIn >= booking.checkIn && checkIn < booking.checkOut) &&\n                    !(checkOut > booking.checkIn && checkOut <= booking.checkOut);\n            });\n            // Проверяем количество гостей\n            const isGuestCountValid = number.guestCount.length >= guest;\n            return isDateAvailable && isGuestCountValid;\n        });\n        return filteredNumbers\n    }\n\n    const chooseHotelMore = () => {\n        localStorage.setItem(\"hotelId\", hotelId)\n        NumberService.getAllNumbers(\"hotels_map\", hotelId)\n            .then(data => {\n                const resultNumb = parseJSONPropertiesInArray(data)\n                filterNumbers(resultNumb)\n                    .then(data => {\n                        dispatch(dataNumbersListHandler(data))\n                    })\n                    .catch(e => console.log(e))\n                    .finally(() => {\n                        dispatch(loadNumberListModalHandler(false))\n                    })\n            })\n    }\n\n\n    return (\n        <div>\n            <div\n                className=\"row__c__fs desktop__1250__card__block\"\n                style={{\n                    background: WHITE,\n                    borderRadius: \"20px\",\n                    height: \"260px\",\n                    marginBottom: \"20px\",\n                    width: \"auto\"\n                }}\n            >\n                {/*SLIDER*/}\n                <SliderMini\n                    item={item}\n                    hotelId={hotelId}\n                    photoHotel={objectPhotos}\n                    width={\"360px\"}\n                    minWidth={\"300px\"}\n                    height={\"260px\"}\n                    borderRadius={\"10px 0 0 10px\"}\n                />\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        alignContent: \"space-between\",\n                        flexGrow: 2,\n                        margin: \"20px\",\n                    }}\n                >\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            minWidth: \"400px\",\n                            maxWidth: \"100%\"\n                        }}\n                    >\n                        <div className=\"column__fs\">\n                        <span className=\"text__content__black__b__16 \"\n                              style={{overflowWrap: \"break-word\", width: \"100%\", marginBottom: \"5px\"}}>{name}</span>\n                            <span className=\"text__content__black__12 marginsCards\"\n                                  style={{marginLeft: 0}}>{address}\n                        </span>\n                            <span className=\"text__content__black__12 marginsCards\"\n                                  style={{marginLeft: 0}}>\n                            {distance} км от центра города\n                        </span>\n                            {showMetro ?\n                                nearMetro.map(item => (\n                                    <div className=\"row__c__fs\" key={item.id}>\n                                        <img src={metro} alt=\"metro\"/>\n                                        <span className=\"text__content__grey__12 marginsCards\">{item.name}</span>\n                                    </div>\n                                ))\n                                :\n                                \"\"\n                            }\n\n                            <Button\n                                name={\"Показать на карте\"}\n                                marginLeft={\"0\"}\n                                marginTop={\"10px\"}\n                                height={\"20px\"}\n                                style={\"showOnMapBtn\"}\n                                styleText={\"text__content__white__12\"}\n                                color={GREY_BLACK}\n                                handler={() => hotelCity ? showHotelOnMap() : showHotelOnMapDesktop()}\n                            />\n                        </div>\n                        {/*Пустышка*/}\n                        <div className=\"null\">---------</div>\n                        {/*Оценка отеля*/}\n                        <div className=\"column__c\">\n                            <Rating\n                                rating={rating}\n                                countReviews={ratingCount.length}\n                            />\n                            <div className=\"row__c__c price__card\">\n                            <span\n                                className=\"text__content__white__b__15\">от {formatMoney(averagePrice)} ₽</span>\n                            </div>\n                        </div>\n                    </div>\n                    <Link to={\"/hotel\"}>\n                        <Button\n                            name={\"Выбрать свободный номер\"}\n                            marginLeft={\"0\"}\n                            style={\"chooseHotelBtn\"}\n                            marginTop={\"35px\"}\n                            styleText={\"text__content__white__15\"}\n                            handler={() => chooseHotelMore()}\n                            height={\"40px\"}/>\n                    </Link>\n                </div>\n            </div>\n            <div\n                className=\"row__c__fs laptop__908_1249__card__block\"\n                style={{\n                    background: WHITE,\n                    borderRadius: \"20px\",\n                    height: \"260px\",\n                    marginBottom: \"20px\",\n                    width: \"auto\",\n                    marginRight: \"10px\"\n                }}\n            >\n                {/*SLIDER*/}\n                <SliderMini\n                    hotelId={hotelId}\n                    photoHotel={objectPhotos}\n                    width={\"360px\"}\n                    minWidth={\"300px\"}\n                    height={\"260px\"}\n                    borderRadius={\"10px 0 0 10px\"}\n                />\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        alignContent: \"space-between\",\n                        flexGrow: 2,\n                        margin: \"20px\",\n                    }}\n                >\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                        }}\n                    >\n                        <div className=\"column__fs\">\n                        <span className=\"text__content__black__b__16 \"\n                              style={{overflowWrap: \"break-word\", width: \"100%\", marginBottom: \"5px\"}}>{name}</span>\n                            <span className=\"text__content__black__12 marginsCards\"\n                                  style={{marginLeft: 0}}>{address}\n                                </span>\n                            <span className=\"text__content__black__12 marginsCards\"\n                                  style={{marginLeft: 0}}>\n                            {distance} км от центра города\n                        </span>\n                            {showMetro ?\n                                nearMetro.map(item => (\n                                    <div className=\"row__c__fs\" key={item.id}>\n                                        <img src={metro} alt=\"metro\"/>\n                                        <span className=\"text__content__grey__12 marginsCards\">{item.name}</span>\n                                    </div>\n                                ))\n                                :\n                                \"\"\n                            }\n\n                            <Button\n                                name={\"Показать на карте\"}\n                                marginLeft={\"0\"}\n                                marginTop={\"10px\"}\n                                height={\"20px\"}\n                                style={\"showOnMapBtn\"}\n                                styleText={\"text__content__white__12\"}\n                                color={GREY_BLACK}\n                                handler={() => showHotelOnMap()}\n                            />\n                        </div>\n                        {/*Пустышка*/}\n                        <div className=\"null\">----</div>\n                        {/*Оценка отеля*/}\n                        <div className=\"column__c\">\n                            <Rating\n                                rating={rating}\n                                countReviews={ratingCount.length}\n                            />\n                            <div className=\"row__c__c price__card\">\n                            <span\n                                className=\"text__content__white__b__15\">от {formatMoney(averagePrice)} ₽</span>\n                            </div>\n                        </div>\n                    </div>\n                    <Link to={\"/hotel\"}>\n                        <Button\n                            name={\"Выбрать свободный номер\"}\n                            marginLeft={\"0\"}\n                            style={\"chooseHotelBtn\"}\n                            marginTop={\"35px\"}\n                            styleText={\"text__content__white__15\"}\n                            handler={() => chooseHotelMore()}\n                            height={\"40px\"}/>\n                    </Link>\n                </div>\n            </div>\n            <div\n                className=\"row__c__fs tablet__661_907__card__block\"\n                style={{\n                    background: WHITE,\n                    borderRadius: \"20px\",\n                    height: \"240px\",\n                    marginBottom: \"20px\",\n                    width: \"auto\",\n                    marginRight: \"10px\",\n                    marginLeft: \"10px\"\n                }}\n            >\n                {/*SLIDER*/}\n                <SliderMini\n                    hotelId={hotelId}\n                    photoHotel={objectPhotos}\n                    width={\"360px\"}\n                    minWidth={\"300px\"}\n                    height={\"240px\"}\n                    borderRadius={\"10px 0 0 10px\"}\n                />\n                <div\n                    style={{\n                        display: \"flex\",\n                        flexDirection: \"column\",\n                        justifyContent: \"center\",\n                        alignContent: \"space-between\",\n                        flexGrow: 1,\n                        margin: \"20px\",\n                    }}\n                >\n                    <div\n                        style={{\n                            display: \"flex\",\n                            flexDirection: \"row\",\n                            justifyContent: \"space-between\",\n                            minWidth: \"300px\",\n                            maxWidth: \"100%\"\n                        }}\n                    >\n                        <div className=\"column__fs\">\n                        <span className=\"text__content__black__b__16 \"\n                              style={{overflowWrap: \"break-word\", width: \"100%\", marginBottom: \"5px\"}}>{name}</span>\n                            <span className=\"text__content__black__12 marginsCards\"\n                                  style={{marginLeft: 0}}>{address}\n                        </span>\n                            <span className=\"text__content__black__12 marginsCards\"\n                                  style={{marginLeft: 0}}>\n                            {distance} км от центра города\n                        </span>\n                            {showMetro ?\n                                nearMetro.map(item => (\n                                    <div className=\"row__c__fs\" key={item.id}>\n                                        <img src={metro} alt=\"metro\"/>\n                                        <span className=\"text__content__grey__12 marginsCards\">{item.name}</span>\n                                    </div>\n                                ))\n                                :\n                                \"\"\n                            }\n\n                            <Button\n                                name={\"Показать на карте\"}\n                                marginLeft={\"0\"}\n                                marginTop={\"10px\"}\n                                height={\"20px\"}\n                                style={\"showOnMapBtn\"}\n                                styleText={\"text__content__white__12\"}\n                                color={GREY_BLACK}\n                                handler={() => showHotelOnMap()}\n                            />\n                        </div>\n                        {/*Пустышка*/}\n                        <div className=\"null\">----</div>\n                        {/*Оценка отеля*/}\n                        <div className=\"column__c\">\n                            <Rating\n                                rating={rating}\n                                countReviews={ratingCount.length}\n                            />\n                            <div className=\"row__c__c price__card\">\n                            <span\n                                className=\"text__content__white__b__15\">от {formatMoney(averagePrice)} ₽</span>\n                            </div>\n                        </div>\n                    </div>\n                    <Link to={\"/hotel\"}>\n                        <Button\n                            name={\"Выбрать свободный номер\"}\n                            marginLeft={\"0\"}\n                            style={\"chooseHotelBtn\"}\n                            marginTop={\"35px\"}\n                            styleText={\"text__content__white__15\"}\n                            handler={() => chooseHotelMore()}\n                            height={\"30px\"}/>\n                    </Link>\n                </div>\n            </div>\n\n            <div className=\"column__card mobile__0_660__card__block\">\n                <div\n                    className=\"row__sb__c\"\n                    style={{marginBottom: \"20px\", marginTop: \"10px\"}}\n                >\n                <span\n                    className=\"text__content__black__b__16\"\n                    style={{\n                        overflowWrap: \"break-word\",\n                        width: \"100%\",\n                        marginBottom: \"5px\",\n                    }}\n                >\n                  {name}\n                </span>\n                    <div\n                        className=\"row__c__c\"\n                        style={{\n                            background: GREY_BLACK,\n                            padding: \"5px\",\n                            borderRadius: \"5px\",\n                            width: \"50px\",\n                        }}\n                    >\n                  <span\n                      className=\"assessment__b\"\n                      style={{textShadow: \"0 0 8px rgba(0, 0, 0, 0.55)\"}}\n                  >\n                    {rating}\n                  </span>\n                    </div>\n                </div>\n\n                {/*SLIDER*/}\n                <SliderMini\n                    hotelId={hotelId}\n                    photoHotel={objectPhotos}\n                    width={\"100%\"}\n                    height={\"240px\"}\n                    borderRadius={\"10px 10px 10px 10px\"}\n                />\n\n                <div className=\"row__sb__c\" style={{marginTop: \"10px\"}}>\n                    <div className=\"column\">\n                      <span\n                          className=\"text__content__grey__12 marginsCards\"\n                          style={{marginLeft: 0, fontWeight: \"bold\"}}\n                      >\n                        {address}\n                      </span>\n                    </div>\n                    <div className=\"column\">\n      <span\n          className=\"text__content__grey__12 marginsCards\"\n          style={{marginLeft: 0, fontWeight: \"bold\"}}\n      >\n        {distance} км от центра города\n      </span>\n                    </div>\n                </div>\n\n                {showMetro\n                    ? nearMetro.map((item) => (\n                        <div className=\"row__c__fs\" key={item.id}>\n                            <img src={metro} alt=\"metro\"/>\n                            <span className=\"text__content__grey__12 marginsCards\">\n            {item.name}\n          </span>\n                        </div>\n                    ))\n                    : null}\n\n                <div className=\"row__sb__c\" style={{marginBottom: \"20px\", marginTop: \"10px\"}}>\n                    <div className=\"row__c__c price__card\">\n      <span className=\"text__content__white__b__15\">\n        {formatMoney(4000)} ₽\n      </span>\n                    </div>\n                    <span\n                        className=\"text__content__black__b__14\"\n                        style={{marginTop: \"10px\"}}\n                        onClick={() => showHotelOnMap()}\n                    >\n      Показать на карте\n    </span>\n                </div>\n                <Link to={\"/hotel\"}>\n                    <Button\n                        name={\"Выбрать свободный номер\"}\n                        marginLeft={\"0\"}\n                        style={\"chooseHotelBtn\"}\n                        marginTop={\"5px\"}\n                        styleText={\"text__content__white__15\"}\n                        handler={() => chooseHotelMore()}\n                        height={\"35px\"}\n                    />\n                </Link>\n            </div>\n\n        </div>\n    )\n}","import { useDispatch, useSelector } from \"react-redux\";\nimport { pageSwitchingHandler } from \"../../store/HotelsList\";\nimport { GREY, WHITE } from \"../../theme/colors\";\n\nexport const ButtonPage = () => {\n    const dispatch = useDispatch();\n    const objectList = useSelector(state => state.hotels_list.objectList);\n    const filteredHotels = useSelector(state => state.hotels_list.filteredHotels);\n    const itemsPerPage = 5; // Максимальное количество объектов на странице\n    const data = filteredHotels ? filteredHotels : objectList;\n    const itemPage = useSelector(state => state.hotels_list.itemPage);\n\n    if (data.length === 0) {\n        return null; // Возвращаем null, если данных нет\n    }\n\n    // Вычисление количества страниц\n    const pageCount = Math.ceil(data.length / itemsPerPage);\n    const pages = Array.from({ length: pageCount }, (_, index) => index);\n\n    const choosePage = (page) => {\n        dispatch(pageSwitchingHandler(page));\n    }\n\n    return (\n        <div>\n            <div className=\"row__c__c\" style={{ display: \"flex\", marginTop: \"20px\", marginBottom: \"20px\" }}>\n                {pages.map((page) => (\n                    <section\n                        key={page}\n                        onClick={() => choosePage(page)}\n                        style={{\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                            alignItems: \"center\",\n                            flexShrink: 0,\n                            width: \"35px\",\n                            height: \"35px\",\n                            borderRadius: \"50%\",\n                            margin: \"0 5px\",\n                            background: (itemPage === page) ? GREY : WHITE,\n                            cursor: \"pointer\"\n                        }}\n                    >\n                        <span className=\"text__content__black__b__16\">{page + 1}</span>\n                    </section>\n                ))}\n            </div>\n        </div>\n    )\n}","import {SliderMini} from \"../slider/SliderMini\";\nimport {GREY_BLACK, ORANGE} from \"../../theme/colors\";\n\nimport {Link} from \"react-router-dom\";\nimport {Button} from \"../buttons/Button\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {dataHotelHandler} from \"../../store/HotelItem\";\nimport {useEffect, useState} from \"react\";\nimport PhotoObjectService from \"../../services/photo-object.service\";\n\n\nexport const BalloonYandexMap = ({ hotelId, name, rating, item}) => {\n    const dispatch = useDispatch()\n    const dataNumbersList = useSelector(state => state.hotels_list.dataNumbersList)\n    const [objectPhotos, setObjectPhotos] = useState([]);\n    const [averagePrice, setAveragePrice] = useState(\"\");\n\n\n    useEffect(() => {\n        if (objectPhotos.length === 0) {\n            PhotoObjectService.getAllPhotosObject(\"hotels_map\", hotelId)\n                .then(data => setObjectPhotos(data))\n        }\n        // Фильтрация номеров по hotelId\n        const filteredPrices = dataNumbersList.filter(price => price.hotelId === hotelId);\n        // Поиск средней цены\n        if (filteredPrices.length > 0) {\n            const totalPrices = filteredPrices.map(price => price.priceBase);\n            const sumPrices = totalPrices.reduce((acc, curr) => acc + curr, 0);\n            const averagePrice = sumPrices / filteredPrices.length;\n            setAveragePrice(averagePrice)\n        } else {\n            console.log(\"Нет данных для указанного hotelId\");\n        }\n    }, [])\n    return (\n        <div className=\"column\"\n             key={hotelId}\n        >\n            <SliderMini\n                photoHotel={objectPhotos}\n                width={\"360px\"}\n                hotelId={hotelId}\n                minWidth={\"\"}\n                item={item}\n                height={\"200px\"}\n                borderRadius={\"10px\"}\n            />\n            <span className=\"text__content__black__b__14\" style={{textAlign: \"center\", marginTop: \"5px\"}}>{name}</span>\n            <div className=\"row__sb__c\" style={{margin: \"10px\"}}>\n                <span style={{\n                    display: \"flex\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    background: GREY_BLACK,\n                    borderRadius: \"5px\",\n                    padding: \"8px 14px  8px 14px\",\n                    color: ORANGE,\n                    fontWeight: \"bold\",\n                    textShadow: \"0 0 5px var(--black-opacity)\"\n                }}>\n                    {rating}\n                </span>\n                <div className=\"column\">\n                    <span className=\"text__content__grey__12\">Цена</span>\n                    <span className=\"text__content__black__b__16\">{averagePrice} ₽</span>\n                </div>\n            </div>\n            <Link to={\"/hotel\"}>\n                <Button\n                    name={\"Выбрать свободный номер\"}\n                    marginLeft={\"0\"}\n                    style={\"chooseHotelMapBtn\"}\n                    marginTop={\"10px\"}\n                    styleText={\"text__content__white__14\"}\n                    handler={() => dispatch(dataHotelHandler(item))}\n                />\n            </Link>\n        </div>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport { Map, Placemark, YMaps, FullscreenControl, ZoomControl } from \"@pbe/react-yandex-maps\";\nimport location from \"../../assets/image/location_2.png\";\nimport { Spinner } from \"../spinner/Spinner\";\nimport { BalloonYandexMap } from \"../blocks/BalloonYandexMap\";\nimport { createPortal } from \"react-dom\";\nimport {  useSelector } from \"react-redux\";\n\nexport const HotelMap = () => {\n    const loadingMap = useSelector(state => state.hotels_list.loadingMap);\n    const objectList = useSelector(state => state.hotels_list.objectList);\n    const [activePortal, setActivePortal] = useState(false);\n    const [idHotel, setIdHotel] = useState(null);\n    const filteredHotels = useSelector(state => state.hotels_list.filteredHotels);\n    const locationMap = localStorage.getItem('location');\n    const locationJsonParse = JSON.parse(locationMap);\n    const mapState = {\n        center: [locationJsonParse.lat, locationJsonParse.lon],\n        zoom: locationJsonParse.zoom,\n    };\n\n    const Portal = ({ children, getHTMLElementId }) => {\n        const mount = document.getElementById(getHTMLElementId);\n        const el = document.createElement('div');\n\n        useEffect(() => {\n            if (mount) mount.appendChild(el);\n            return () => {\n                if (mount) mount.removeChild(el);\n            };\n        }, [el, mount]);\n\n        if (!mount) return null;\n        return createPortal(children, el);\n    };\n\n    const handlePlacemarkClick =  (item) => {\n        setTimeout(() => {\n            setActivePortal(true);\n            setIdHotel(item.hotelId);\n            const localDataLocation = { lat: item.location.lat, lon: item.location.lon, zoom: 16 };\n            localStorage.setItem('location', JSON.stringify(localDataLocation));\n        }, 0)\n\n    };\n\n    return (\n        <div className=\"mapYandex\">\n            <YMaps preload={true} query=\"ru_RU\">\n                {!loadingMap ? (\n                    <Map\n                        defaultState={mapState}\n                        width={\"100%\"}\n                        height={\"96vh\"}\n                        modules={['geoObject.addon.balloon', 'geoObject.addon.hint']}\n                    >\n                        <ZoomControl options={{ float: \"right\" }} />\n                        <FullscreenControl />\n                        {filteredHotels !== null ? (\n                            filteredHotels.map(item => (\n                                <Placemark\n                                    key={item.hotelId}\n                                    geometry={[item.location.lat, item.location.lon]}\n                                    properties={{\n                                        hintContent: `<span class=\"text__content__black__12\"><b>${item.name}</b></span>`,\n                                        balloonContent: '<div id=\"driver-2\" class=\"balloon__card\"></div>',\n                                    }}\n                                    onClick={() => handlePlacemarkClick(item)}\n                                    options={{\n                                        iconLayout: \"default#image\",\n                                        iconImageSize: [40, 40],\n                                        iconImageHref: location,\n                                    }}\n                                />\n                            ))\n                        ) : (\n                            objectList.map(item => (\n                                <Placemark\n                                    key={item.hotelId}\n                                    geometry={[item.location.lat, item.location.lon]}\n                                    properties={{\n                                        hintContent: `<span class=\"text__content__black__12\"><b>${item.name}</b></span>`,\n                                        balloonContent: '<div id=\"driver-2\" class=\"balloon__card\"></div>',\n                                    }}\n                                    onClick={() => handlePlacemarkClick(item)}\n                                    options={{\n                                        iconLayout: \"default#image\",\n                                        iconImageSize: [40, 40],\n                                        iconImageHref: location,\n                                    }}\n                                />\n                            ))\n                        )}\n                    </Map>\n                ) : (\n                    <Spinner />\n                )}\n                {activePortal && (\n                    <Portal getHTMLElementId={'driver-2'}>\n                        {objectList.map(item => {\n                            if (item.hotelId === idHotel) {\n                                return (\n                                    <BalloonYandexMap\n                                        key={item.hotelId}\n                                        hotelId={item.hotelId}\n                                        name={item.name}\n                                        rating={item.rating}\n                                        item={item}\n                                    />\n                                );\n                            }\n                            return null;\n                        })}\n                    </Portal>\n                )}\n            </YMaps>\n        </div>\n    );\n};","import {useDispatch, useSelector} from \"react-redux\";\nimport {useEffect, useState} from \"react\";\nimport {\n    countPageHandler, dataHotelsListHandler, loadingHotelListHandler,\n\n    pageSwitchingHandler,\n    showHotelMapHandler\n} from \"../../store/HotelsList\";\nimport { countOtherSortHandler} from \"../../store/Filter\";\nimport \"./Modals.css\"\n\nexport const Sort = ({style, handleSort}) => {\n    const dispatch = useDispatch()\n    const [dataHotel, setDataHotel] = useState([])\n    const [active, setActive] = useState([{id: 1, active: false}, {id: 2, active: true}, {id: 3, active: false}])\n    const dataHotelsList = useSelector(state => state.hotels_list.dataHotelsList)\n    const cityOrHotel = useSelector(state => state.search.cityOrHotel)\n\n    const updateHoleList = () => {\n        //Возврат на первую страницу\n        dispatch(pageSwitchingHandler(0))\n        //Лоадеры\n        dispatch(loadingHotelListHandler(true))\n        setTimeout(() => {\n            dispatch(loadingHotelListHandler(false))\n        }, 300)\n        //Обновление местоположения\n        dispatch(showHotelMapHandler(\n            {\n                lat: cityOrHotel.city.location.lat,\n                lon: cityOrHotel.city.location.lon,\n                zoom: 13\n            }))\n    }\n    //Сортировка по страницам\n    const sortPage = (array) => {\n        const newArray = []\n        //Распределение по страницам\n        const length = array.length;\n        const step = 25;\n        let res = length / step\n        const countPage = Math.floor(res);\n\n        let stepStart = 0\n        let stepEnd = 25\n\n        for (let i = 0; i < countPage + 1; i++) {\n            newArray.push({\n                id: i,\n                hotels: array.slice(stepStart, stepEnd)\n            })\n            stepStart += 25\n            stepEnd += 25\n        }\n        dispatch(countPageHandler(countPage + 1))\n        //Обновление количества отелей в списке параметров\n        dispatch(countOtherSortHandler(newArray))\n        dispatch(dataHotelsListHandler(newArray))\n    }\n    useEffect(() => {\n        //Базовые данные\n        const baseData = []\n        dataHotelsList.map(item => {\n            item.hotels.map(hotels => {\n                baseData.push(hotels)\n            })\n        })\n        setDataHotel(baseData)\n    }, [dataHotelsList])\n\n    const activeButtonSort = (id) => {\n        const newArray = active.map(item => {\n            if (item.id === id) {\n                item.active = true\n            }\n            return item\n        })\n        const arr = newArray.map(item => {\n            if (item.id !== id) {\n                item.active = false\n            }\n            return item\n        })\n        setActive(arr)\n    }\n\n    const sortedOnPrice = (id) => {\n        const sorted = [...dataHotel].sort((a, b) => a.last_price_info.price - b.last_price_info.price);\n        activeButtonSort(id)\n        updateHoleList()\n        sortPage(sorted)\n    }\n    const sortedOnReviews = (id) => {\n        const sorted = [...dataHotel].sort((a, b) => b.countReviews[0].rating - a.countReviews[0].rating);\n        activeButtonSort(id)\n        updateHoleList()\n        sortPage(sorted)\n    }\n    const sortedOnReviewsAndPrice = (id) => {\n        const price = [...dataHotel].sort((a, b) => a.last_price_info.price - b.last_price_info.price);\n        const reviews = [...price].sort((a, b) => b.countReviews[0].rating - a.countReviews[0].rating);\n        activeButtonSort(id)\n        updateHoleList()\n        sortPage(reviews)\n    }\n\n    return (\n        <div>\n            <div className={style} onClick={handleSort}>\n                <div className=\"modal__content__sort tablet__661__filter\">\n                    <div className=\"modal__body\">\n                        <div\n                            className=\"row__c__c bgHover\"\n                            onClick={() => sortedOnReviews(1)}\n                            style={{cursor: \"pointer\", fontWeight: active[0].active ? \"bold\" : \"\"}}>\n                            <span className=\"text__content__black__14\">Лучший по отзывам</span>\n                        </div>\n                        <div\n                            className=\"row__c__c bgHover\"\n                            onClick={() => sortedOnPrice(2)}\n                            style={{\n                                cursor: \"pointer\",\n                                fontWeight: active[1].active ? \"bold\" : \"\",\n                            }}\n                        >\n                            <span className=\"text__content__black__14\">Лучший по цене</span>\n                        </div>\n                        <div\n                            className=\"row__c__c bgHover\"\n                            onClick={() => sortedOnReviewsAndPrice(3)}\n                            style={{\n                                cursor: \"pointer\",\n                                fontWeight: active[2].active ? \"bold\" : \"\"\n                            }}\n                        >\n                            <span className=\"text__content__black__14\">Лучшие отзывы и цена</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n\n            <div className=\"column mobile__0_660__filter\">\n                <div className=\"row__c__c\">\n                    <h3 className=\"text__content__black__b__20\">Сортировка</h3>\n                </div>\n                <div\n                    className=\"row__c__c bgHover\"\n                    onClick={() => sortedOnReviews(1)}\n                    style={{\n                        cursor: \"pointer\",\n                        fontWeight: active[0].active ? \"bold\" : \"\"\n                    }}\n                >\n                    <span className=\"text__content__black__14\">Лучший по отзывам</span>\n                </div>\n                <div\n                    className=\"row__c__c bgHover\"\n                    onClick={() => sortedOnPrice(2)}\n                    style={{\n                        cursor: \"pointer\",\n                        fontWeight: active[1].active ? \"bold\" : \"\",\n                    }}\n                >\n                    <span className=\"text__content__black__14\">Лучший по цене</span>\n                </div>\n                <div\n                    className=\"row__c__c bgHover\"\n                    onClick={() => sortedOnReviewsAndPrice(3)}\n                    style={{\n                        cursor: \"pointer\",\n                        fontWeight: active[2].active ? \"bold\" : \"\"\n                    }}\n                >\n                    <span className=\"text__content__black__14\">Лучшие отзывы и цена</span>\n                </div>\n            </div>\n        </div>\n\n    )\n}","import React, {useEffect, useState} from 'react';\nimport {Header} from \"../components/header/Header\";\nimport {Filter} from \"../components/filters/Filter\";\nimport {HotelCard} from \"../components/cards/HotelCard\";\nimport {ButtonPage} from \"../components/buttons/ButtonPage\";\nimport {Footer} from \"../components/footer/Footer\";\nimport {GREY, WHITE} from \"../theme/colors\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Spinner} from \"../components/spinner/Spinner\";\nimport {HotelMap} from \"../components/maps/HotelMap\";\nimport {\n    Icon24ArticleBoxOutline,\n    Icon24DismissSubstract,\n    Icon24Filter,\n    Icon24LocationMapOutline\n} from \"@vkontakte/icons\";\nimport Drawer from 'react-modern-drawer'\nimport 'react-modern-drawer/dist/index.css'\nimport {ButtonIcon} from \"../components/buttons/ButtonIcon\";\nimport {Sort} from \"../components/modals/Sort\";\nimport {\n    loadingMapHandler,\n    pageSwitchingHandler,\n    setFilteredHotels,\n} from \"../store/HotelsList\";\nimport { resetParamHandler} from \"../store/Filter\";\nimport {useLocation} from \"react-router-dom\";\nimport {BannerSearch} from \"../components/blocks/BannerSearch\";\nimport piter from \"../assets/image/piter.png\";\nimport {getAccommodationCity} from \"../utils/word-declensions\";\n\n\n\nexport const HotelAndMap = () => {\n    const dispatch = useDispatch()\n    const requestParameters = useSelector(state => state.search.cityOrHotel)\n    const banner = useSelector(state => state.search.banner)\n    const objectList = useSelector(state => state.hotels_list.objectList);\n    const filteredHotels = useSelector(state => state.hotels_list.filteredHotels);\n    const itemPage = useSelector(state => state.hotels_list.itemPage);\n    const itemsPerPage = 10; // Максимальное количество объектов на странице\n    const data = filteredHotels ? filteredHotels : objectList;\n\n    // Фильтрация данных для текущей страницы\n    const startIndex = itemPage * itemsPerPage;\n    const endIndex = startIndex + itemsPerPage;\n    const currentData = data.slice(startIndex, endIndex);\n    const loadingHotelList = useSelector(state => state.hotels_list.loadingHotelList)\n\n\n\n    const dataBanner = {\n        id: 2,\n        cityId: \"12196\",\n        name: \"Санкт-Петербург, Россия\",\n        text: \"Санкт - Петербург\",\n        header: \"ГДЕ ОСТАНОВИТЬСЯ В САНКТ - ПЕТЕРБУРГЕ?\",\n        banner: piter\n    }\n\n\n    const loadingMap = useSelector(state => state.hotels_list.loadingMap)\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n    const [isOpen, setIsOpen] = React.useState(false)\n    const [isOpenMap, setIsOpenMap] = React.useState(false)\n    const [isOpenSort, setIsOpenSort] = React.useState(false)\n\n\n    // useEffect(() => {\n    //     dispatch(loadingHotelListHandler(true))\n    //     dispatch(loadingMapHandler(true))\n    //     // dispatch(updateHotelListData());\n    //     setTimeout(() => {\n    //         dispatch(loadingHotelListHandler(false))\n    //         dispatch(loadingMapHandler(false))\n    //     }, 2000);\n    // }, []);\n\n    // const hotelListData = useSelector((state) => state.dataHotelList);\n    // const dataOld = Object.entries(hotelListData).map(i => i[1])\n\n\n    // function declineToPrepositionalCase(word) {\n    //     // Определите правила склонения для различных окончаний\n    //     const rules = [\n    //         {suffix: 'а', prepositional: 'е'},\n    //         {suffix: 'я', prepositional: 'е'},\n    //         {suffix: 'ь', prepositional: 'и'},\n    //         // Добавьте другие правила по мере необходимости\n    //     ];\n    //\n    //     // По умолчанию оставляем слово неизменным\n    //     let prepositionalWord = word;\n    //\n    //     // Проверяем, соответствует ли слово одному из правил\n    //     for (const rule of rules) {\n    //         if (word.endsWith(rule.suffix)) {\n    //             // Если слово оканчивается на суффикс, применяем правило склонения\n    //             prepositionalWord = word.slice(0, -rule.suffix.length) + rule.prepositional;\n    //             break; // Выходим из цикла, как только найдено соответствие\n    //         }\n    //     }\n    //\n    //     return prepositionalWord;\n    // }\n\n// // Пример использования\n//     const originalWord = 'стол';\n//     const prepositionalWord = declineToPrepositionalCase(originalWord);\n//     console.log(prepositionalWord); // Выведет \"столе\"\n\n\n// Функция для форматирования текста\n//     function formatText(text) {\n//         // Оставьте этот код без изменений\n//         const parts = text.split(\",\");\n//         if (parts.length === 2) {\n//             const beforeComma = parts[0].trim();\n//             const prepositionalWord = declineToPrepositionalCase(beforeComma);\n//             return prepositionalWord;\n//         }\n//         return text;\n//     }\n\n    // const inputText = requestParameters.city.city;\n    // const formattedText = formatText(inputText);\n    // console.log(formattedText);\n    const updateHoleList = () => {\n        //Возврат на первую страницу\n        dispatch(pageSwitchingHandler(0))\n        // // Лоадеры\n        // dispatch(loadingHotelListHandler(true))\n        // setTimeout(() => {\n        //     dispatch(loadingHotelListHandler(false))\n        // }, 300)\n        dispatch(loadingMapHandler(true))\n        setTimeout(() => {\n            dispatch(loadingMapHandler(false))\n        }, 300)\n        // Обновление местоположения\n\n        const localDataLocation = {\n            lat: requestParameters.city.location.lat,\n            lon: requestParameters.city.location.lon,\n            zoom: 13\n        }\n        localStorage.setItem('location', JSON.stringify(localDataLocation));\n\n    }\n\n\n    const toggleDrawer = () => {\n        setIsOpen((prevState) => !prevState)\n    }\n\n    const toggleDrawerMap = () => {\n        setIsOpenMap((prevState) => !prevState)\n    }\n\n    const toggleDrawerSort = () => {\n        setIsOpenSort((prevState) => !prevState)\n    }\n\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n\n    const location = useLocation();\n\n    useEffect(() => {\n        const handleBackButton = () => {\n            // Действие при нажатии кнопки \"Назад\" в браузере\n            console.log('Назад в браузере нажато');\n            dispatch(setFilteredHotels(null));\n            dispatch(resetParamHandler())\n        };\n\n        const unlisten = () => {\n            // Вспомогательная функция для отмены следующего слушателя\n            window.removeEventListener('popstate', handleBackButton);\n        };\n\n        if (location.key) {\n            // Если история сопровождается уникальным ключом, добавьте слушателя.\n            window.addEventListener('popstate', handleBackButton);\n        }\n\n        return unlisten;\n    }, [location]);\n\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n\n            <div className=\"center\">\n                {!loadingHotelList ?\n\n                    <div>\n                        <BannerSearch\n                            header={getAccommodationCity(requestParameters.city.city)}\n                            addHeader={\"ГДЕ ОСТАНОВИТЬСЯ В \"}\n                            q={\"?\"}\n                            banner={banner ? banner : dataBanner.banner}\n                        />\n\n                        <div className=\"row__fs__fs\" style={{margin: \"20px\"}}>\n                            {width <= 906 ? \"\" : <Filter updateHoleList={updateHoleList}/>}\n                            <Drawer\n                                open={isOpen}\n                                onClose={toggleDrawer}\n                                direction='left'\n                                className='bla bla bla'\n                            >\n                                {!loadingHotelList ? <Filter updateHoleList={updateHoleList}/> :\n                                    <div className=\"row__c__c\"><Spinner/></div>}\n                            </Drawer>\n\n                            <Drawer\n                                open={isOpenSort}\n                                onClose={toggleDrawerSort}\n                                direction='bottom'\n                                style={{height: \"22vh\"}}\n                            >\n                                <Sort/>\n                            </Drawer>\n\n                            <Drawer\n                                open={isOpenMap}\n                                onClose={toggleDrawerMap}\n                                direction='bottom'\n                                style={{height: \"88vh\"}}\n                            >\n                                {/*<HotelMap/>*/}\n                                <div className=\"row__c__c\" style={{marginTop: \"20px\",}}>\n                                    <ButtonIcon\n                                        name={\"Закрыть\"}\n                                        handler={() => toggleDrawerMap()}\n                                        styleText={\"text__content__white__14\"}\n                                        style={\"filterBtn\"}\n                                        icon={<Icon24DismissSubstract widtth={20} height={20} color={WHITE}/>}\n                                        width={\"120px\"}\n                                    />\n                                </div>\n                            </Drawer>\n\n                            <div className=\"column__fs__c\" style={{width: \"100%\"}}>\n                                <div className=\"row__c__fs\">\n                                    {/*{width <= 660 ? \"\" : <ButtonSort/>}*/}\n                                    {width >= 906 && width <= 1249 ?\n                                        <ButtonIcon\n                                            name={\"Карта\"}\n                                            handler={() => toggleDrawerMap()}\n                                            styleText={\"text__content__white__14\"}\n                                            style={\"filterBtn\"}\n                                            icon={<Icon24LocationMapOutline color={WHITE}/>}\n                                            width={\"100px\"}\n                                        />\n                                        :\n                                        \"\"\n                                    }\n                                    {width >= 661 && width <= 905 ?\n                                        <>\n                                            <ButtonIcon\n                                                name={\"Параметры\"}\n                                                handler={() => toggleDrawer()}\n                                                styleText={\"text__content__white__14\"}\n                                                style={\"filterBtn\"}\n                                                icon={<Icon24Filter color={WHITE}/>}\n                                                width={\"150px\"}\n                                            />\n                                            <ButtonIcon\n                                                name={\"Карта\"}\n                                                handler={() => toggleDrawerMap()}\n                                                styleText={\"text__content__white__14\"}\n                                                style={\"filterBtn\"}\n                                                icon={<Icon24LocationMapOutline color={WHITE}/>}\n                                                width={\"100px\"}\n                                            />\n                                        </>\n                                        :\n                                        \"\"\n                                    }\n                                    {width >= 0 && width <= 660 ?\n                                        <>\n                                            <div className=\"mobileBtn\" onClick={() => toggleDrawerSort()}>\n                                                <Icon24ArticleBoxOutline color={WHITE}/>\n                                            </div>\n                                            <div className=\"mobileBtn\" onClick={() => toggleDrawer()}>\n                                                <Icon24Filter color={WHITE}/>\n                                            </div>\n                                            <div className=\"mobileBtn\" onClick={() => toggleDrawerMap()}>\n                                                <Icon24LocationMapOutline color={WHITE}/>\n                                            </div>\n                                        </>\n                                        :\n                                        \"\"\n                                    }\n                                </div>\n\n\n                                <div className=\"column\" style={{overflowY: \"scroll\"}}>\n                                    {currentData.length !== 0 ?\n                                        currentData.map(item => (\n                                        <HotelCard\n                                            toggleDrawerMap={toggleDrawerMap}\n                                            key={item.hotelId}\n                                            hotelId={item.hotelId}\n                                            name={item.name}\n                                            countReviews={[]}\n                                            nearMetro={item.metro}\n                                            address={item.address}\n                                            distance={item.distance}\n                                            rating={item.rating}\n                                            location={item.location}\n                                            item={item}\n                                            hotelCity={false}\n                                        />\n\n                                    ))\n                                        :\n                                        <>\n                                            <div className=\"row__c__c\">\n                                                <h2 style={{color: GREY}}>Ничего не найдено</h2>\n                                            </div>\n                                        </>\n                                    }\n                                    {/*{*/}\n                                    {/*    filteredHotels !== null ?*/}\n                                    {/*        filteredHotels.length !== 0  ?*/}\n                                    {/*            filteredHotels.map(item => {*/}\n                                    {/*                // item.metro.length === 0 ? dispatch(showMetroHandler(false)) : dispatch(showMetroHandler(true))*/}\n                                    {/*                return (*/}\n                                    {/*                    <HotelCard*/}\n                                    {/*                        toggleDrawerMap={toggleDrawerMap}*/}\n                                    {/*                        key={item.hotelId}*/}\n                                    {/*                        hotelId={item.hotelId}*/}\n                                    {/*                        name={item.name}*/}\n                                    {/*                        countReviews={[]}*/}\n                                    {/*                        nearMetro={item.metro}*/}\n                                    {/*                        address={item.address}*/}\n                                    {/*                        distance={item.distance}*/}\n                                    {/*                        rating={item.rating}*/}\n                                    {/*                        location={item.location}*/}\n                                    {/*                        item={item}*/}\n                                    {/*                        hotelCity={false}*/}\n                                    {/*                    />*/}\n                                    {/*                )*/}\n                                    {/*            })*/}\n                                    {/*            :*/}\n                                    {/*            <>*/}\n                                    {/*                <div className=\"row__c__c\">*/}\n                                    {/*                    <h2 style={{color: GREY}}>Ничего не найдено</h2>*/}\n                                    {/*                </div>*/}\n                                    {/*            </>*/}\n                                    {/*        :*/}\n                                    {/*        objectList ?*/}\n                                    {/*            objectList.map(item => {*/}\n                                    {/*                // item.metro.length === 0 ? dispatch(showMetroHandler(false)) : dispatch(showMetroHandler(true))*/}\n                                    {/*                return (*/}\n                                    {/*                    <HotelCard*/}\n                                    {/*                        toggleDrawerMap={toggleDrawerMap}*/}\n                                    {/*                        key={item.hotelId}*/}\n                                    {/*                        hotelId={item.hotelId}*/}\n                                    {/*                        name={item.name}*/}\n                                    {/*                        countReviews={[]}*/}\n                                    {/*                        nearMetro={item.metro}*/}\n                                    {/*                        address={item.address}*/}\n                                    {/*                        distance={item.distance}*/}\n                                    {/*                        rating={item.rating}*/}\n                                    {/*                        location={item.location}*/}\n                                    {/*                        item={item}*/}\n                                    {/*                        hotelCity={false}*/}\n                                    {/*                    />*/}\n                                    {/*                )*/}\n                                    {/*            })*/}\n                                    {/*            :*/}\n                                    {/*            <>*/}\n                                    {/*                <div className=\"row__c__c\">*/}\n                                    {/*                    <h2 style={{color: GREY}}>Ничего не найдено</h2>*/}\n                                    {/*                </div>*/}\n                                    {/*            </>*/}\n                                    {/*}*/}\n                                </div>\n                                <ButtonPage/>\n                            </div>\n                            <div className=\"column__fs map1250 map1250-sticky\"\n                                 style={{width: \"100%\", marginLeft: \"20px\", overflowX: \"hidden\", borderRadius: \"15px\"}}>\n                                <HotelMap/>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div className=\"column__c__c\">\n                        <Spinner/>\n                    </div>\n                }\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import {Icon24ShareExternalOutline, Icon24LikeOutline, Icon24Like} from '@vkontakte/icons';\nimport {BLACK, GREY_BLACK} from \"../../theme/colors\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\";\nimport React, { useEffect, useState} from \"react\";\nimport {getCurrentDate} from \"../../utils/createDataNow\";\nimport FavoriteService from \"../../services/favorite.service\";\nimport {v4 as uuidv4} from \"uuid\";\n\n\nexport const HeaderHotelNumber = ({dataHotelNumber, width, hotelId}) => {\n    const navigate = useNavigate();\n    const auth = useSelector(state => state.auth.isAuth);\n    const [favorite, setFavorite] = useState([]);\n    const userId = useSelector((state) => state.auth.userId);\n\n\n\n    const loadFavorite = () => {\n        FavoriteService.getAllFavorites(\"hotel\", userId)\n            .then(data => {\n                setFavorite(data)\n            })\n    }\n    useEffect(() => {\n        if (auth) {\n            if (favorite.length === 0) {\n                loadFavorite()\n            }\n        } else {\n            console.log(\"Не авторизован!\");\n        }\n    }, [])\n\n\n\n\n\n    const addFavorite = () => {\n        if (auth) {\n            const isFavorite = favorite.some(fav => fav.hotelId === hotelId);\n            if (!isFavorite) {\n                const dataFavorite = {\n                    id: uuidv4(),\n                    userId: userId,\n                    hotelId: hotelId,\n                    date: getCurrentDate()\n                };\n                setFavorite(prevFavorite => [...prevFavorite, dataFavorite]); // Добавление нового элемента в массив favorite\n                FavoriteService.createFavorite(\"hotel\", dataFavorite)\n                    .then(data => console.log(\"Add favorite\", data))\n                    .catch(e => console.log(e))\n                    .finally(() => loadFavorite());\n            }\n        } else {\n            navigate('/api/login');\n        }\n    };\n\n    const removeFavorite = () => {\n\n        if (auth) {\n            const isFavorite = favorite.some(fav => fav.hotelId === hotelId);\n            if (isFavorite) {\n                const deleteFavorite = favorite.filter(fav => fav.hotelId !== hotelId)\n                setFavorite(deleteFavorite)\n                FavoriteService.deleteFavorite(\"hotel\", hotelId)\n                    .then(data => console.log(\"Del favorite\", data))\n                    .catch(e => console.log(e))\n                    .finally(() => loadFavorite())\n            }\n        } else {\n            navigate('/api/login');\n        }\n    };\n\n\n    return (\n        <div>\n            {width >= 0 && width <= 920 ?\n                <div\n                    className=\"row__sb__c \"\n                    style={{marginTop: \"15px\", marginBottom: \"15px\"}}>\n                    <h1 className=\"text__content__black__b__20\">\n                        {dataHotelNumber?.name}\n                    </h1>\n                    <div className=\"row__sb__c\">\n                        <div\n                            className=\"row__c__fs\"\n                            onClick={() => console.log(\"Поделиться\")}\n                            style={{\n                                cursor: \"pointer\",\n                                marginLeft: \"20px\",\n                                marginRight: \"7px\"\n                            }}\n                        >\n                            <Icon24ShareExternalOutline color={BLACK}/>\n                        </div>\n                        {favorite.some(fav => fav.hotelId === hotelId) ?\n                            <div\n                                className=\"row__c__fs\"\n                                style={{cursor: \"pointer\", marginLeft: \"7px\", marginRight: \"0px\"}}>\n                                <span onClick={() => removeFavorite()}>\n                                        <Icon24Like width={24} height={24} color={GREY_BLACK}/>\n                                </span>\n                            </div>\n                            :\n                            <div\n                                className=\"row__c__fs\"\n                                style={{cursor: \"pointer\", marginLeft: \"7px\", marginRight: \"0px\"}}>\n                                   <span onClick={() =>  addFavorite() }>\n                                   <Icon24LikeOutline width={24} height={24} color={GREY_BLACK}/>\n                                </span>\n                            </div>\n                        }\n\n                    </div>\n                </div>\n                :\n                <div\n                    className=\"row__sb__c \"\n                    style={{marginTop: \"15px\", marginBottom: \"15px\"}}>\n                    <h1 className=\"header__block__black__b__36\">\n                        {dataHotelNumber?.name}\n                    </h1>\n                    <div className=\"row__sb__c\">\n                        <div\n                            className=\"row__c__fs\"\n                            onClick={() => console.log(\"Поделиться\")}\n                            style={{\n                                cursor: \"pointer\",\n                                marginLeft: \"20px\",\n                                marginRight: \"20px\"\n                            }}\n                        >\n                            <Icon24ShareExternalOutline color={BLACK}/>\n                            <span\n                                className=\"text__content__black__16\"\n                                style={{\n                                    marginLeft: \"10px\"\n                                }}\n                            >Поделиться</span>\n                        </div>\n                        <div\n                            className=\"row__c__fs\"\n                            style={{\n                                cursor: \"pointer\",\n                                marginLeft: \"20px\",\n                                marginRight: \"0px\"\n                            }}\n                        >\n                            {favorite.some(fav => fav.hotelId === hotelId) ?\n                                <div\n                                    className=\"row__c__fs\"\n                                    style={{cursor: \"pointer\", marginLeft: \"7px\", marginRight: \"0px\"}}>\n\n                                <span onClick={() => removeFavorite()}>\n                                        <Icon24Like width={24} height={24} color={GREY_BLACK}/>\n                                </span>\n                                </div>\n                                :\n                                <div\n                                    className=\"row__c__fs\"\n                                    style={{cursor: \"pointer\", marginLeft: \"7px\", marginRight: \"0px\"}}>\n                                   <span onClick={() =>  addFavorite()}>\n                                   <Icon24LikeOutline width={24} height={24} color={GREY_BLACK}/>\n                                </span>\n                                </div>\n                            }\n                            <span\n                                className=\"text__content__black__16\"\n                                style={{\n                                    marginLeft: \"10px\"\n                                }}\n                            >В избранное</span>\n                        </div>\n\n                        {/*<Link*/}\n                        {/*    to={\"/Отели_на_карте\"}*/}\n                        {/*    style={{*/}\n                        {/*        marginLeft: \"20px\",*/}\n                        {/*    }}*/}\n                        {/*>*/}\n                        {/*    <Button*/}\n                        {/*        style={\"mapButton\"}*/}\n                        {/*        styleText={\"text__content__white__16\"}*/}\n                        {/*        padding={10}*/}\n                        {/*        handler={() => console.log(\"Показать на карте\")}*/}\n                        {/*        name={\"Показать на карте\"}/>*/}\n                        {/*</Link>*/}\n                    </div>\n                </div>\n\n            }\n\n        </div>\n    )\n}","import { Icon24BrowserBack, Icon24BrowserForward, Icon24RadioOff, Icon24RadioOn } from \"@vkontakte/icons\";\nimport { WHITE } from \"../../theme/colors\";\nimport { useEffect, useState, useCallback } from \"react\";\nimport no_photo from \"../../assets/image/no_photo.jpg\";\nimport \"./Slider.css\";\n\nexport const SliderBig = ({ photos, height, maxWidth, borderRadius, minWidth, mb, padding }) => {\n    const [count, setCount] = useState(0);\n    const [arrayImage, setArrayImage] = useState([]);\n\n    useEffect(() => {\n        if (photos) {\n            const imageArray = photos.map((item, idx) => ({ img: item.url, id: idx }));\n            setArrayImage(imageArray.slice(0, 10));\n        }\n    }, [photos]);\n\n    const handlerForward = useCallback(() => {\n        setCount((prevCount) => (prevCount >= arrayImage.length - 1 ? 0 : prevCount + 1));\n    }, [arrayImage]);\n\n    const handlerBack = useCallback(() => {\n        setCount((prevCount) => (prevCount <= 0 ? arrayImage.length - 1 : prevCount - 1));\n    }, [arrayImage]);\n\n    const currentImage = (photos && photos.length > 0) ? arrayImage[count]?.img : no_photo;\n\n    return (\n        <>\n            <div\n                className=\"column__sb\"\n                style={{\n                    marginBottom: mb,\n                    height: height,\n                    minWidth: minWidth,\n                    maxWidth: maxWidth,\n                    borderRadius: borderRadius,\n                    backgroundImage: `url(${currentImage})`,\n                    backgroundSize: \"cover\",\n                    backgroundPosition: \"center\",\n                    padding: padding,\n                }}\n            >\n                <div className=\"row__c__fe\">\n                    <span className=\"cardControlSlider\"></span>\n                </div>\n                <div className=\"row__sb__c\">\n                    <span className=\"cardControlSlider arrowBtn\" onClick={handlerBack}>\n                        <Icon24BrowserBack color={WHITE} />\n                    </span>\n                    <span className=\"cardControlSlider arrowBtn\" onClick={handlerForward}>\n                        <Icon24BrowserForward color={WHITE} />\n                    </span>\n                </div>\n                <span className=\"row__c__c cardControlSlider\">\n                    {arrayImage.map((_, index) => (\n                        <span key={index} style={{ padding: index === count ? \"5px\" : \"2.5px\" }}>\n                            {index === count ? (\n                                <Icon24RadioOn width={9} height={9} color={WHITE} />\n                            ) : (\n                                <Icon24RadioOff width={9} height={9} color={WHITE} />\n                            )}\n                        </span>\n                    ))}\n                </span>\n            </div>\n            <div className=\"row__fs__fs\" style={{ marginBottom: \"40px\" }}></div>\n        </>\n    );\n};","import {$api} from \"../http\"\n\n\nconst CategoryService = {\n    getAllCategoryNumber: async (path, hotelId) => {\n        try {\n            const response = await $api.get(`/${path}/categories/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch category from category table');\n        }\n    },\n    getOneCategoryNumber: async (path, categoryId) => {\n        try {\n            const response = await $api.get(`/${path}/category/${categoryId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch category from category table');\n        }\n    },\n    createCategoryNumber: async (categoryData) => {\n        try {\n            const response = await $api.post(`/setting_object/category`, {categoryData});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to create category from category table');\n        }\n    },\n    updateCategory: async (categoryId, categoryData) => {\n        try {\n            const response = await $api.put(`/setting_object/category/sale/${categoryId}`, {categoryData});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to update category from category table');\n        }\n    },\n    updateCategoryNumber: async (categoryId, categoryData, condition) => {\n        try {\n            const response = await $api.put(`/setting_object/add__del/${categoryId}`, {categoryData, condition});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to update category from category table');\n        }\n    },\n    updateCategoryNumberLimit: async (categoryLimitId, categoryData) => {\n        try {\n            const response = await $api.put(`/setting_object/category/${categoryLimitId}`, {categoryData});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to update limit category from category table');\n        }\n    },\n    deleteCategoryNumber: async (categoryId) => {\n        try {\n            const response = await $api.delete(`/setting_object/category/${categoryId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete category from category table');\n        }\n    },\n    deleteAllCategoryNumber: async (hotelId) => {\n        try {\n            const response = await $api.delete(`/main/categories/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete all category from category table');\n        }\n    },\n}\n\nexport default CategoryService","import {$api} from \"../http\"\n\n\nconst PhotoNumberService = {\n    getAllPhotosCategoryNumber: async (path,categoryId) => {\n        try {\n            const response = await $api.get(`/${path}/numbers/photos/${categoryId}`);\n            console.log(\"NUMBER PHOTOS\",response);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch category photos from photos number table');\n        }\n    },\n    getAllPhotosNumber: async (path,numberId) => {\n        try {\n            const response = await $api.get(`/${path}/number/photos/${numberId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch number photos from photos number table');\n        }\n    },\n    createNumberPhotos: async (numberPhotos) => {\n        try {\n            const response = await $api.post(`/setting_number/number/photos`, {numberPhotos});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch number photos from photos number table');\n        }\n    },\n    deleteNumberPhoto: async (path,idImg) => {\n        try {\n            const response = await $api.delete(`/${path}/number/photo/${idImg}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete number photo from photos number table');\n        }\n    },\n    deleteAllNumberPhotos: async (path,numberId) => {\n        try {\n            const response = await $api.delete(`/${path}/number/photos/${numberId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete number photos from photos number table');\n        }\n    },\n    deleteAllCategoryNumberPhotos: async (path,categoryId) => {\n        try {\n            const response = await $api.delete(`/${path}/number/photos/${categoryId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete number photos at category from photos number table');\n        }\n    },\n    deleteAllObjectNumberPhotos: async (hotelId) => {\n        try {\n            const response = await $api.delete(`/number/photos/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete number photos at category from photos number table');\n        }\n    },\n\n}\n\nexport default PhotoNumberService","export const options = [\n    {id: 0, name: \"без звезд\"},\n    {id: 1, name: \"1 звезда\"},\n    {id: 2, name: \"2 звезды\"},\n    {id: 3, name: \"3 звезды\"},\n    {id: 4, name: \"4 звезды\"},\n    {id: 5, name: \"5 звезд\"}\n];\n\nexport const optionsRadio = [\n    {id: 1, name: 'Юридическое лицо' , value: \"ЮЛ\"},\n    {id: 2, name: 'Индивидуальный предприниматель', value: \"ИП\"},\n    {id: 3, name: 'Самозанятый', value: \"СЗ\"}\n];\n\nexport const type_obj = [\n    {name: \"Отель\", value: \"hotel\",},\n    {name: \"Хостел\", value: \"hostel\",},\n    {name: \"Апартаменты, квартиры\", value: \"apartment\",},\n    {name: \"Апарт-отель\", value: \"apartmen_hotel\",},\n    {name: \"Гостевой дом\", value: \"guest_house\",},\n]\nexport const selectRole = [\n    {name: \"Администратор\", value: \"admin\"},\n    {name: \"Бухгалтер\", value: \"accountant\"},\n    {name: \"Менеджер по бронированию\", value: \"bookingManager\"}\n]\nexport const selectNewsletters = [\n    {name: \"Сверка счета\", value: \"accountReconciliation\"},\n    {name: \"Дайджест\", value: \"digest\"},\n    {name: \"Информация о бронированиях\", value: \"bookingInformation\"},\n    {name: \"Смс - уведомления о бронированиях\", value: \"reservationNotifications\"}\n]\nexport const optionListNameNumbers = [\n    {id: 0, name: \"Сюит\", value: \"suite\"}, {id: 1, name: \"Джуниор сюит\", value: \"juniorSuite\"},\n    {id: 2, name: \"Студия\", value: \"studio\"}, {id: 3, name: \"Люкс\", value: \"lux\"},\n    {id: 4, name: \"Двухместный люкс\", value: \"doubleLux\"}, {\n        id: 5,\n        name: \"Двухместный люкс с двуспальной кроватью\",\n        value: \"doubleLuxWithDoubleBed\"\n    },\n    {id: 6, name: \"Улучшенный люкс\", value: \"superiorLux\"}, {id: 7, name: \"Семейный люкс\", value: \"familyLux\"},\n    {id: 8, name: \"Улучшенный семейный номер\", value: \"superiorFamilyRoom\"}, {\n        id: 9,\n        name: \"Апартаменты\",\n        value: \"apartments\"\n    },\n    {id: 10, name: \"Апартаменты делюкс\", value: \"deluxeApartment\"}, {\n        id: 11,\n        name: \"Двухместный полулюкс с двуспальной кроватью\",\n        value: \"doubleJuniorLuxWithDoubleBed\"\n    },\n    {id: 12, name: \"Однокомнатные апартаменты\", value: \"oneRoomApartments\"}, {\n        id: 13,\n        name: \"Однокомнатные улучшенные апартаменты\",\n        value: \"OneRoomSuperiorApartment\"\n    },\n    {id: 14, name: \"Двухкомнатные апартаменты\", value: \"twoRoomApartments\"}, {\n        id: 15,\n        name: \"Трехкомнатные апартаменты\",\n        value: \"threeRoomApartments\"\n    },\n    {id: 16, name: \"Одноместный улучшенный номер\", value: \"singleSuperiorRoom\"}, {\n        id: 17,\n        name: \"Трехместный улучшенный номер\",\n        value: \"tripleSuperiorRoom\"\n    },\n    {id: 18, name: \"Стандартный номер\", value: \"standartRoom\"}, {\n        id: 19,\n        name: \"Представительский люкс\",\n        value: \"executiveLux\"\n    },\n    {\n        id: 20,\n        name: \"Стандартный двухместный номер с двуспальной кроватью\",\n        value: \"standardDoubleRoomWithDoubleBed\"\n    }, {\n        id: 21,\n        name: \"Стандартный двухместный номер с кроватью размера “queen-size”\",\n        value: \"standardDoubleQueenRoom\"\n    },\n    {\n        id: 22,\n        name: \"Стандартный двухместный номер с кроватью размера “king-size”\",\n        value: \"standardDoubleRoomWithKingSizeBed\"\n    }, {\n        id: 23,\n        name: \"Двухместный номер эконом-класса с 2-мя односпальными кроватями\",\n        value: \"economyDoubleRoomWith2SingleBeds\"\n    },\n    {id: 24, name: \"Одноместный номер эконом-класса\", value: \"economySingleRoom\"}, {\n        id: 25,\n        name: \"Четырехместный номер эконом-класса\",\n        value: \"economyQuadrupleRoom\"\n    },\n    {id: 26, name: \"Классический семейный номер\", value: \"classicFamilyRoom\"}, {\n        id: 27,\n        name: \"Кровать в общем номере с 4-мя кроватями и общей ванной\",\n        value: \"BedIn4BedDormitoryRoomWithSharedBathroom\"\n    },\n    {\n        id: 28,\n        name: \"Кровать в общем номере с 6-тью кроватями и общей ванной\",\n        value: \"BedIn6BedDormitoryRoomWithSharedBathroom\"\n    }, {\n        id: 29,\n        name: \"Кровать в общем номере с 8-ми кроватями и общей ванной\",\n        value: \"BedIn8BedDormitoryRoomWithSharedBathroom\"\n    },\n    {\n        id: 30,\n        name: \"Двухместный номер эконом-класса с двуспальной кроватью и общей ванной\",\n        value: \"EconomyDoubleRoomWithDoubleBedAndSharedBathroom\"\n    }, {\n        id: 31,\n        name: \"Двухместный стандартный номер с двуспальной кроватью и балконом\",\n        value: \"doubleStandardRoomWithDoubleBedAndBalcony\"\n    },\n    {\n        id: 32,\n        name: \"Представительский люкс\",\n        value: \"ExecutiveLux\"\n    },\n    {\n        id: 33,\n        name: \"Президентский люкс\",\n        value: \"PresidentialLux\"\n    },\n    {\n        id: 34,\n        name: \"Квартира студия\",\n        value: \"StudioApartment\"\n    },\n    {\n        id: 35,\n        name: \"Однокомнатная квартира\",\n        value: \"OneRoomedFlat\"\n    },\n    {\n        id: 36,\n        name: \"Двухкомнатная квартира\",\n        value: \"TwoRoomedFlat\"\n    },\n    {\n        id: 37,\n        name: \"Трехкомнатная квартира\",\n        value: \"ThreeBedroomApartment\"\n    },\n    {\n        id: 38,\n        name: \"Гостевой дом\",\n        value: \"GuestHouse\"\n    },\n    {\n        id: 39,\n        name: \"Особняк\",\n        value: \"Mansion\"\n    },\n];\n// export const optionListNameNumbers = [\n//     {id: 0, name: \"Сюит\", value: \"suite\"}, {id: 1, name: \"Джуниор сюит\", value: \"juniorSuite\"},\n//     {id: 2, name: \"Студия\", value: \"studio\"},  {id: 3, name: \"Люкс\", value: \"lux\"},\n//     {id: 4, name: \"Двухместный люкс\", value: \"doubleLux\"}, {id: 5, name: \"Двухместный люкс с двуспальной кроватью\", value: \"doubleLuxWithDoubleBed\"},\n//     {id: 6, name: \"Улучшенный люкс\", value: \"superiorLux\"},  {id: 7, name: \"Семейный люкс\", value: \"familyLux\"},\n//     {id: 8, name: \"Улучшенный семейный номер\", value: \"superiorFamilyRoom\"},  {id: 9, name: \"Апартаменты\", value: \"apartments\"},\n//     {id: 10, name: \"Апартаменты делюкс\", value: \"deluxeApartment\"},  {id: 11, name: \"Двухместный полулюкс с двуспальной кроватью\", value: \"doubleJuniorLuxWithDoubleBed\"},\n//     {id: 12, name: \"Однокомнатные апартаменты\", value: \"oneRoomApartments\"}, {id: 13, name: \"Однокомнатные улучшенные апартаменты\", value: \"OneRoomSuperiorApartment\"},\n//     {id: 14, name: \"Двухкомнатные апартаменты\", value: \"twoRoomApartments\"},  {id: 15, name: \"Трехкомнатные апартаменты\", value: \"threeRoomApartments\"},\n//     {id: 16, name: \"Одноместный улучшенный номер\", value: \"singleSuperiorRoom\"}, {id: 17, name: \"Трехместный улучшенный номер\", value: \"tripleSuperiorRoom\"},\n//     {id: 18, name: \"Стандартный номер\", value: \"standartRoom\"},  {id: 19, name: \"Представительский люкс\", value: \"executiveLux\"},\n//     {id: 20, name: \"Стандартный двухместный номер с двуспальной кроватью\", value: \"standardDoubleRoomWithDoubleBed\"},  {id: 21, name: \"Стандартный двухместный номер с кроватью размера “queen-size”\", value: \"standardDoubleQueenRoom\"},\n//     {id: 22, name: \"Стандартный двухместный номер с кроватью размера “king-size”\", value: \"standardDoubleRoomWithKingSizeBed\"},  {id: 23, name: \"Двухместный номер эконом-класса с 2-мя односпальными кроватями\", value: \"economyDoubleRoomWith2SingleBeds\"},\n//     {id: 24, name: \"Одноместный номер эконом-класса\", value: \"economySingleRoom\"}, {id: 25, name: \"Четырехместный номер эконом-класса\", value: \"economyQuadrupleRoom\"},\n//     {id: 26, name: \"Классический семейный номер\", value: \"classicFamilyRoom\"},  {id: 27, name: \"Кровать в общем номере с 4-мя кроватями и общей ванной\", value: \"BedIn4BedDormitoryRoomWithSharedBathroom\"},\n//     {id: 28, name: \"Кровать в общем номере с 6-тью кроватями и общей ванной\", value: \"BedIn6BedDormitoryRoomWithSharedBathroom\"}, {id: 29, name: \"Кровать в общем номере с 8-ми кроватями и общей ванной\", value: \"BedIn8BedDormitoryRoomWithSharedBathroom\"},\n//     {id: 30, name: \"Двухместный номер эконом-класса с двуспальной кроватью и общей ванной\", value: \"EconomyDoubleRoomWithDoubleBedAndSharedBathroom\"},  {id: 31, name: \"Двухместный стандартный номер с двуспальной кроватью и балконом\", value: \"doubleStandardRoomWithDoubleBedAndBalcony\"},\n//\n// ];\nexport const optionCheckBoxNutrition = [\n    {id: 0, name: \"Завтрак включен\", value: \"breakfastIncluded\"}, {\n        id: 1,\n        name: \"Включен завтрак и ужин\",\n        value: \"breakfastAndDinnerIncluded\"\n    },\n    {id: 2, name: \"С собственной кухней\", value: \"withOwnKitchen\"},\n];\nexport const optionCheckBoxCalculationMethod = [\n     {\n        id: 0,\n        name: \"Оплата через сервис\",\n        value: \"paymentThroughTheService\"\n    },\n];\n// {id: 0, name: \"Оплата в отеле\", value: \"paymentAtTheHotel\"},\nexport const optionCheckBoxPoliticalCancel = [\n    {id: 0, name: \"Без предоплаты\", value: \"withoutPrepayment\"},\n    {\n        id: 1,\n        name: \"Оплата заранее\",\n        value: \"paymentInAdvance\"\n    },\n    {id: 2, name: \"Бесплатная отмена\", value: \"freeCancellation\"},\n];\nexport const optionCheckBoxRoomAmenities = [\n    {id: 0, name: \"Ванная комната в номере\", value: \"bathroomInTheRoom\"}, {\n        id: 1,\n        name: \"Туалетные принадлежности\",\n        value: \"toiletries\"\n    },\n    {id: 2, name: \"Фен\", value: \"fan\"}, {id: 3, name: \"Сауна\", value: \"freeCancellation\"},\n    {id: 4, name: \"Общая ванная комната\", value: \"sauna\"}, {id: 5, name: \"Общий туалет\", value: \"sharedToilet\"},\n    {id: 6, name: \"Тапочки\", value: \"slippers\"}, {id: 7, name: \"Туалет в номере\", value: \"toiletInTheRoom\"},\n    {id: 8, name: \"Джакузи\", value: \"jacuzzi\"}, {id: 9, name: \"Душевая кабинка\", value: \"showerStall\"},\n    {id: 10, name: \"Фитнесс - центр\", value: \"fitnessCenter\"}, {id: 11, name: \"Телевизор\", value: \"tv\"},\n    {id: 12, name: \"Халат\", value: \"robe\"}, {id: 13, name: \"Шкаф/гардероб\", value: \"wardrobe/closet\"},\n    {id: 14, name: \"Камин\", value: \"fireplace\"}, {id: 15, name: \"Кондиционер\", value: \"airConditioner\"},\n    {id: 16, name: \"Сетка против комаров\", value: \"mosquitoNet\"}, {id: 17, name: \"Диван\", value: \"sofa\"},\n    {id: 18, name: \"Звукоизоляция\", value: \"soundproofing\"}, {id: 19, name: \"Письменый стол\", value: \"desk\"},\n    {id: 20, name: \"Мини-бар\", value: \"miniBar\"}, {id: 21, name: \"Кресло\", value: \"armchair\"},\n    {id: 22, name: \"Журнальный столик\", value: \"coffeeTable\"}, {\n        id: 23,\n        name: \"Плотные шторы\",\n        value: \"blackoutCurtains\"\n    },\n    {id: 24, name: \"Постельное белье\", value: \"bedSheets\"}, {id: 25, name: \"Столовые прборы\", value: \"cutlery\"},\n    {id: 26, name: \"Вентилятор\", value: \"ventilator\"},\n];\nexport const optionCheckBoxShortFacilities = [\n    {id: 0, name: \"Номера для некурящих\", value: \"noSmoking\"}, {\n        id: 1,\n        name: \"Трансфер от/до аэропорта\",\n        value: \"transferAirport\"\n    },\n    {id: 2, name: \"Бесплатный Wi - Fi\", value: \"wiFiInRoom\"}, {id: 3, name: \"Парковка\", value: \"parking\"},\n    {id: 4, name: \"Круглосуточная стойка регистрации\", value: \"reseption\"}, {\n        id: 5,\n        name: \"Семейные номера\",\n        value: \"familyNumber\"\n    },\n    {id: 6, name: \"Доставка еды в номер\", value: \"foodDelivery\"}, {id: 7, name: \"Можно с питомцами\", value: \"pets\"},\n    {id: 8, name: \"Ресторан\", value: \"restaurant\"}, {id: 9, name: \"Бассейн\", value: \"pool\"},\n    {id: 10, name: \"Фитнесс - центр\", value: \"fitness\"}, {id: 11, name: \"Спа и оздоровительный центр\", value: \"spa\"},\n];\nexport const optionCheckBoxRoomCategories = [\n    {\n        id: 0,\n        name: \"Сюит\",\n        value: \"suite\"\n    },\n    {\n        id: 1,\n        name: \"Апартамент\",\n        value: \"apartment\"\n    },\n    {\n        id: 2,\n        name: \"Люкс\",\n        value: \"lux\"\n    },\n    {\n        id: 3,\n        name: \"Джуниор сюит\",\n        value: \"junior_suite\"\n    },\n    {\n        id: 4,\n        name: \"Студия\",\n        value: \"studio\"\n    },\n    {\n        id: 5,\n        name: \"Стандарт\",\n        value: \"standard\"\n    },\n    {\n        id: 6,\n        name: \"Представительский люкс\",\n        value: \"ExecutiveLux\"\n    },\n    {\n        id: 7,\n        name: \"Президентский люкс\",\n        value: \"PresidentialLux\"\n    },\n    {\n        id: 8,\n        name: \"Квартира студия\",\n        value: \"StudioApartment\"\n    },\n    {\n        id: 9,\n        name: \"Однокомнатная квартира\",\n        value: \"OneRoomedFlat\"\n    },\n    {\n        id: 10,\n        name: \"Двухкомнатная квартира\",\n        value: \"TwoRoomedFlat\"\n    },\n    {\n        id: 11,\n        name: \"Трехкомнатная квартира\",\n        value: \"ThreeBedroomApartment\"\n    },\n    {\n        id: 12,\n        name: \"Гостевой дом\",\n        value: \"GuestHouse\"\n    },\n    {\n        id: 13,\n        name: \"Особняк\",\n        value: \"Mansion\"\n    },\n];\n// export const optionCheckBoxRoomCategories = [\n//     {\n//         id: 0,\n//         name: \"Сюит\",\n//         value: \"suite\"\n//     },\n//     {\n//         id: 1,\n//         name: \"Апартамент\",\n//         value: \"apartment\"\n//     },\n//     {\n//         id: 2,\n//         name: \"Люкс\",\n//         value: \"lux\"\n//     },\n//     {\n//         id: 3,\n//         name: \"Джуниор сюит\",\n//         value: \"junior_suite\"\n//     },\n//     {\n//         id: 4,\n//         name: \"Студия\",\n//         value: \"studio\"\n//     },\n//     {\n//         id: 5,\n//         name: \"Стандартный номер (1 категория)\",\n//         value: \"standard1\"\n//     },\n//     {\n//         id: 6,\n//         name: \"Стандартный номер (2 категория)\",\n//         value: \"standard2\"},\n//     {\n//         id: 7,\n//         name: \"Стандартный номер (3 категория)\",\n//         value: \"standard3\"\n//     },\n//     {\n//         id: 8,\n//         name: \"Стандартный номер (4 категория)\",\n//         value: \"standard4\"\n//     },\n//     {\n//         id: 9,\n//         name: \"Стандартный номер (5 категория)\",\n//         value: \"standard5\"\n//     },\n// ];\nexport const optionCheckBoxPropertyRules = [\n    {\n        id: 0,\n        icon:  \"escalator_warning\",\n        name: \"Можно с детьми любого возраста\",\n        value: \"suitableForChildren\"\n    },\n    {\n        id: 1,\n        icon: \"smoke_free\",\n        name: \"Курение запрещено\",\n        value: \"noSmoking\"\n    },\n    {\n        id: 2,\n        icon: \"celebration\",\n        name: \"Без вечеринок и мероприятий\",\n        value: \"noPartiesOrEvents\"\n    },\n    {\n        id: 3,\n        icon: \"pets\",\n        name: \"Можно с питомцами\",\n        value: \"petsAllowed\"\n    },\n    {\n        id: 4,\n        icon: \"quick_reference\",\n        name: \"Отчетные документы\",\n        value: \"accountingDocuments\"\n    },\n];\n\nexport const optionStatusBooking = [\n    {\n        id: 0,\n        name: \"Ожидание\",\n        value: \"#FFEFB6\",\n    },\n    {\n        id: 1,\n        name: \"Подтверждено\",\n        value: \"#80C669\",\n    },\n    {\n        id: 2,\n        name: \"Новое\",\n        value: \"#01B0F1\",\n    },\n    {\n        id: 3,\n        name: \"Архив\",\n        value: \"#879d9d\",\n    },\n];\nexport const optionPayBooking = [\n    {\n        id: 0,\n        name: \"Через сервис\",\n        value: \"service\",\n    },\n    {\n        id: 1,\n        name: \"В отеле\",\n        value: \"atHotel\",\n    },\n];\nexport const optionPrepayment = [\n    {\n        id: 0,\n        name: \"Без предоплаты\",\n        value: \"no_prepayment\",\n    },\n    {\n        id: 1,\n        name: \"30 %\",\n        value: 30,\n    },\n    {\n        id: 2,\n        name: \"50 %\",\n        value: 50,\n    },\n    {\n        id: 3,\n        name: \"70 %\",\n        value: 70,\n    },\n];\nexport const optionCheckIn = [\n     {id: 1, value: \"12:00\"}, {id: 2, value: \"13:00\"},\n    {id: 3, value: \"14:00\"}, {id: 4, value: \"15:00\"}, {id: 5, value: \"16:00\"},\n    {id: 6, value: \"17:00\"}, {id: 7, value: \"18:00\"}, {id: 8, value: \"19:00\"},\n    {id: 9, value: \"20:00\"}, {id: 10, value: \"21:00\"}, {id: 11, value: \"22:00\"},\n    {id: 12, value: \"23:00\"},\n]\nexport const optionCountGuest = [\n    {id: 0, value: 1}, {id: 1, value: 2}, {id: 2, value: 3},\n    {id: 3, value: 4},\n]\n\nexport const optionCheckOut = [\n    {id: 0, value: \"00:00\"}, {id: 1, value: \"01:00\"}, {id: 2, value: \"02:00\"},\n    {id: 3, value: \"03:00\"}, {id: 4, value: \"04:00\"}, {id: 5, value: \"05:00\"},\n    {id: 6, value: \"06:00\"}, {id: 7, value: \"07:00\"}, {id: 8, value: \"08:00\"},\n    {id: 9, value: \"09:00\"}, {id: 10, value: \"10:00\"}, {id: 11, value: \"11:00\"},\n]\n\nconst data = [\n    {\n        id: 0, header: \"Ванная комната\", options: [\n            {id: 0, name: \"Туалетная бумага\",},\n            {id: 1, name: \"Полотенца\",},\n            {id: 2, name: \"Ванна или душ\",},\n            {id: 3, name: \"Собственная ванная комната\",},\n            {id: 4, name: \"Ванна дома\",},\n            {id: 5, name: \"Душ\",},\n        ]\n    },\n    {\n        id: 1, header: \"Спальня\", options: [\n            {id: 0, name: \"Белье\",},\n        ]\n    },\n    {\n        id: 2, header: \"Вид\", options: [\n            {id: 0, name: \"Вид на город\",},\n            {id: 1, name: \"Вид на достопримечательность\",},\n            {id: 2, name: \"Вид из окна\",},\n        ]\n    },\n    {\n        id: 3, header: \"Кухня\", options: [\n            {id: 0, name: \"Кухонные принадлежности\",},\n            {id: 1, name: \"Стиральная машина\",},\n        ]\n    },\n    {\n        id: 4, header: \"Удобства в номере\", options: [\n            {id: 0, name: \"Вешалка для одежды\",},\n        ]\n    },\n    {\n        id: 5, header: \"Медиа и технологии\", options: [\n            {id: 0, name: \"Телевизор с плоским экраном\",},\n            {id: 1, name: \"Спутниковое телевиденее\",},\n            {id: 2, name: \"Телевизор\",},\n        ]\n    },\n    {\n        id: 6, header: \"Интернет\", options: [\n            {id: 0, name: \"Бесплатный Wi - Fi на территории отеля\",},\n        ]\n    },\n    {\n        id: 7, header: \"Стойка регистрации\", options: [\n            {id: 0, name: \"Выдаются счета\",},\n            {id: 1, name: \"Индивидуальная регистрация заезда/отъезда\",},\n            {id: 2, name: \"Банкомат на территории отеля\",},\n            {id: 3, name: \"Хранение багажа\",},\n            {id: 4, name: \"Обмен валюты\",},\n        ]\n    },\n    {\n        id: 8, header: \"Парковка\", options: [\n            {id: 0, name: \"Парковочные места рядом с отелем\",},\n        ]\n    },\n    {\n        id: 9, header: \"Услуги уборки\", options: [\n            {id: 0, name: \"Услуги по глажению одежды\",},\n        ]\n    },\n    {\n        id: 10, header: \"Безопасность\", options: [\n            {id: 0, name: \"Огнетушители\",},\n            {id: 1, name: \"Видеонаблюдение снаружи и внутри здания\",},\n            {id: 2, name: \"Датчики дыма\",},\n            {id: 3, name: \"Вход по электронной карте\",},\n            {id: 4, name: \"Вход по ключу\",},\n            {id: 5, name: \"Круглосуточная охрана\",},\n        ]\n    },\n    {\n        id: 11, header: \"Персонал говорит на языках\", options: [\n            {id: 0, name: \"Русский\",},\n            {id: 1, name: \"Английский\",},\n        ]\n    },\n\n]","import \"./MoreNumberItem.css\"\nimport {SliderBig} from \"../slider/SliderBig\";\nimport React, {useEffect, useState} from \"react\";\nimport PhotoNumberService from \"../../services/photo-number.service\";\nimport CategoryService from \"../../services/category.service\";\nimport {parseJSONProperties} from \"../../utils/json-parse-object\";\nimport {formatMoney} from \"../../utils/formating-money\";\nimport {BLACK, GREEN, WHITE} from \"../../theme/colors\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    Icon20HomeOutline,\n    Icon20MoneyCircleOutline,\n    Icon20Users3Outline,\n    Icon24ArmchairOutline,\n    Icon24BriefcaseOutline,\n    Icon28CheckCircleOutline,\n    Icon28RssFeedOutline,\n} from \"@vkontakte/icons\";\nimport {optionCheckBoxRoomAmenities} from \"../../utils/varible\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport {dataHotelUserHandler} from \"../../store/ClientData\";\nimport {openMoreNumberHandler} from \"../../store/HotelsList\";\n\nexport const MoreNumberItem = ({number,type, categoryId}) => {\n    const [numberPhotos, setObjectPhotos] = useState([]);\n    const [sale, setSale] = useState(null)\n    const [filterFacilities, setFilterFacilities] = React.useState([])\n    const dispatch = useDispatch()\n    const auth = useSelector(state => state.auth.isAuth);\n    const openMoreNumber = useSelector(state => state.hotels_list.openMoreNumber)\n\n\n    useEffect(() => {\n        if (number !== null) {\n            const newFilterRules = number.roomAmenitiesOption.map(rule => {\n                return optionCheckBoxRoomAmenities.find(item => item.value === rule);\n            }).filter(Boolean); // Фильтруем, чтобы удалить пустые значения\n            console.log(newFilterRules);\n            setFilterFacilities(newFilterRules);\n        }\n    }, [number, optionCheckBoxRoomAmenities]);\n\n    const checkDateRangeForSale = (checkInDate, checkOutDate, saleValue) => {\n        const currentDate = new Date(); // Текущая дата\n        const checkIn = new Date(checkInDate);\n        const checkOut = new Date(checkOutDate);\n\n        // Проверяем, что текущая дата находится в диапазоне между checkIn и checkOut\n        if (currentDate >= checkIn && currentDate <= checkOut && saleValue !== 0) {\n            // Если текущая дата входит в диапазон и значение скидки не равно 0, то устанавливаем скидку\n            setSale(saleValue);\n            console.log(\"Есть скидка\");\n        } else {\n            // Если текущая дата не входит в диапазон или значение скидки равно 0, то скидка не устанавливается\n            setSale(null);\n            console.log(\"Нет скидки\");\n        }\n    }\n\n    useEffect(() => {\n        if (numberPhotos.length === 0) {\n            PhotoNumberService.getAllPhotosNumber(\"hotel\", number?.id)\n                .then(data => setObjectPhotos(data))\n        }\n        CategoryService.getOneCategoryNumber(\"hotel\", categoryId)\n            .then(data => {\n                const listCategory = parseJSONProperties(data)\n\n                const {checkIn, checkOut, value} = listCategory.sale\n                console.log(\"listCategory.sale\", listCategory.sale);\n                if (checkIn !== \"\" && checkOut !== \"\" && value !== 0) {\n                    // Вызов функции с параметрами checkIn, checkOut и value из listCategory.sale\n                    checkDateRangeForSale(checkIn, checkOut, value);\n                } else {\n                    console.log(\"Нет скидки\")\n                    setSale(null)\n                }\n            })\n    }, [])\n\n    const bookingHandler = () => {\n        dispatch(openMoreNumberHandler(!openMoreNumber))\n        dispatch(dataHotelUserHandler(number))\n    }\n\n\n    return (\n        <div className=\"row__fs__fs\">\n            <div className=\"column\">\n                <SliderBig\n                    borderRadius={\"10px\"}\n                    height={\"450px\"}\n                    minWidth={\"450px\"}\n                    padding={5}\n                    maxWidth={\"450px\"}\n                    photos={numberPhotos}\n                />\n                {type === \"booking\" ?\n                    \"\"\n                    :\n                    <ButtonIcon\n                        mt={-20}\n                        handler={() => bookingHandler() }\n                        icon={<Icon24BriefcaseOutline color={WHITE}/>}\n                        style={\"bookBtn\"}\n                        name={\"Забронировать\"}\n                        styleText={\"text__content__white__16\"}\n                        link={auth ? \"/person\" : \"/api/login\"}\n                    />\n\n                }\n\n            </div>\n            <div className=\"column ml__mr_20\">\n                <span className=\"text__content__black__b__14\">\n                    Характеристики номера\n                </span>\n                <div className=\"row__fs__fs mt__mr\">\n                    <div className=\"column\">\n                        <span className=\"text__content__grey__12\">Количество гостей</span>\n                        <div className=\"row__c__fs\">\n                            <Icon20Users3Outline/>\n                            <span\n                                className=\"text__content__black__b__14 mt__mb__5 pr_pl_5\">{number?.guestCount.length}</span>\n                        </div>\n                        <span className=\"text__content__grey__12\">Базовая стоимость</span>\n                        {\n                            sale === null ?\n                                <div className=\"row__c__fs\">\n                                    <Icon20MoneyCircleOutline/>\n                                    <span\n                                        className=\"text__content__black__b__14 mt__mb__5 pr_pl_5\">{formatMoney(number?.priceBase)} ₽</span>\n                                </div>\n                                :\n                                <div className=\"column\">\n                                        <span className=\"text__content__grey__14 mt__mb__5\"\n                                              style={{textDecorationLine: \"line-through\"}}>{formatMoney(number?.priceBase)} ₽</span>\n                                    <div className=\"row__c__fs\">\n                                        <div className=\"row__c__fs\">\n                                            <Icon20MoneyCircleOutline/>\n                                            <span\n                                                className=\"text__content__white__b__15 pr_pl_5\"\n                                                style={{color: GREEN}}\n                                            >\n                                                {formatMoney(number?.priceBase - number?.priceBase * sale / 100)} ₽\n                                            </span>\n                                        </div>\n                                    </div>\n                                </div>\n                        }\n                    </div>\n                    <div className=\"column ml__mr_20\">\n                        <span className=\"text__content__grey__12\">Площадь, кв.м.</span>\n                        <div className=\"row__c__fs\">\n                            <Icon20HomeOutline/>\n                            <span className=\"text__content__black__b__14 mt__mb__5 pr_pl_5\">{number?.area}</span>\n                        </div>\n                        <span className=\"text__content__grey__12\">Количество кроватей</span>\n                        <div className=\"row__c__fs\">\n                            <Icon24ArmchairOutline/>\n                            <span\n                                className=\"text__content__black__b__14 mt__mb__5 pr_pl_5\">{number?.countBedrooms}</span>\n                        </div>\n                        <span className=\"text__content__grey__12\">WI-FI</span>\n                        <div className=\"row__fs__fs\">\n                            <Icon28RssFeedOutline wifth={24} height={24}/>\n                            <span\n                                className=\"text__content__black__b__14 mt__mb__5 pr_pl_5\">{number?.has_wifi.value}</span>\n                        </div>\n                    </div>\n                </div>\n                <span className=\"text__content__black__b__14 mt__mr__20\">\n                        Удобства номера\n                </span>\n                <div className=\"column__fs__c\">\n                    {filterFacilities.map(option => (\n                        <div\n                            style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                marginTop: 5,\n                            }}\n                            key={option.id}\n                        >\n                            <Icon28CheckCircleOutline color={BLACK} width={18} height={18}/>\n                            <span\n                                className=\"text__content__black__10\"\n                                style={{marginLeft: \"5px\", wordBreak: \"break-word\"}}\n                            >\n                                        {option.name}\n                                    </span>\n                        </div>\n                    ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Icon24Cancel} from \"@vkontakte/icons\";\nimport {GREY_BLACK} from \"../../theme/colors\";\nimport { openMoreNumberHandler} from \"../../store/HotelsList\";\nimport {useEffect, useState} from \"react\";\nimport {Spinner} from \"../spinner/Spinner\";\nimport {MoreNumberItem} from \"../MoreNumberItem/MoreNumberItem\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 800,\n    height: 600,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    borderRadius: 5,\n    p: 4,\n};\n\n\nexport const MoreNumber = ({type}) => {\n    const dispatch = useDispatch()\n    const openMoreNumber = useSelector(state => state.hotels_list.openMoreNumber)\n    const loadMoreNumberModalHandler = useSelector(state => state.hotels_list.loadMoreNumberModalHandler)\n    const number = useSelector(state => state.hotels_list.dataNumber)\n    const categoryId = useSelector(state => state.hotels_list.categoryId)\n    const [width, setWidth] = useState(window.innerWidth);\n\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n        };\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    const closeMobileCodeModal = () => {\n        dispatch(openMoreNumberHandler(!openMoreNumber))\n    }\n\n\n    return (\n        <>\n            <Modal\n                open={openMoreNumber}\n                onClose={() => closeMobileCodeModal()}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <div className=\"column\">\n                        <div className=\"row__sb__c\">\n                            <h3>Об номере</h3>\n                            <span onClick={() => closeMobileCodeModal()}\n                                  style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                        </div>\n                        <div className=\"column modal__center__scroll\" style={{height: \"550px\"}}>\n                            {loadMoreNumberModalHandler ?\n                                <Spinner/>\n                                :\n                                number ?\n                                    <MoreNumberItem type={type} number={number} categoryId={categoryId}/>\n                                    :\n                                    <div className=\"row__c__c\">\n                                        <span className=\"text__content__grey__16\">Нет свободных номеров</span>\n                                    </div>\n                            }\n                        </div>\n                    </div>\n                </Box>\n            </Modal>\n        </>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {SliderBig} from \"../slider/SliderBig\";\nimport React, {useEffect, useState} from \"react\";\nimport {Icon20More, Icon24MoneyTransfer} from '@vkontakte/icons';\nimport {GREEN, GREY_BANNER, GREY_BLACK, ORANGE,  WHITE} from \"../../theme/colors\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport {formatMoney} from \"../../utils/formating-money\";\nimport CategoryService from \"../../services/category.service\";\nimport {parseJSONProperties} from \"../../utils/json-parse-object\";\nimport PhotoNumberService from \"../../services/photo-number.service\";\nimport {MoreNumber} from \"../modals/MoreNumber\";\nimport {\n    openMoreNumberHandler,\n    openNumberListHandler, setCategoryHandler,\n    setCategoryIdHandler, setDataObjectBooking, setNumberBookingHandler,\n    setNumberHandler\n} from \"../../store/HotelsList\";\n\n\nexport const ListNumberCard = ({\n                                   id,\n                                   name,\n                                   categoryId,\n                                   width,\n                                   number,\n                                   guestCount,\n                                   priceBase,\n                                   area,\n                                   bedroom,\n                                   hasWiFi,\n                                   type,\n                                   dataHotelNumber\n                               }) => {\n    const dispatch = useDispatch()\n    const [objectPhotos, setObjectPhotos] = useState([]);\n    const [sale, setSale] = useState(null)\n    const [category, setCategory] = useState(null)\n    const auth = useSelector(state => state.auth.isAuth);\n\n    const checkDateRangeForSale = (checkInDate, checkOutDate, saleValue) => {\n        const currentDate = new Date(); // Текущая дата\n        const checkIn = new Date(checkInDate);\n        const checkOut = new Date(checkOutDate);\n\n        // Проверяем, что текущая дата находится в диапазоне между checkIn и checkOut\n        if (currentDate >= checkIn && currentDate <= checkOut && saleValue !== 0) {\n            // Если текущая дата входит в диапазон и значение скидки не равно 0, то устанавливаем скидку\n            setSale(saleValue);\n            console.log(\"Есть скидка\");\n        } else {\n            // Если текущая дата не входит в диапазон или значение скидки равно 0, то скидка не устанавливается\n            setSale(null);\n            console.log(\"Нет скидки\");\n        }\n    }\n\n\n    useEffect(() => {\n        if (objectPhotos.length === 0) {\n            PhotoNumberService.getAllPhotosNumber(\"hotel\", id)\n                .then(data => setObjectPhotos(data))\n        }\n        CategoryService.getOneCategoryNumber(\"hotel\", categoryId)\n            .then(data => {\n                const listCategory = parseJSONProperties(data)\n                setCategory(listCategory)\n                const {checkIn, checkOut, value} = listCategory.sale\n                console.log(\"listCategory.sale\", listCategory.sale);\n                if (checkIn !== \"\" && checkOut !== \"\" && value !== 0) {\n                    // Вызов функции с параметрами checkIn, checkOut и value из listCategory.sale\n                    checkDateRangeForSale(checkIn, checkOut, value);\n                } else {\n                    console.log(\"Нет скидки\")\n                    setSale(null)\n                }\n            })\n    }, [])\n\n    const openMoreNumber = () => {\n        dispatch(openMoreNumberHandler(true))\n        dispatch(openNumberListHandler(false))\n        dispatch(setCategoryIdHandler(categoryId))\n        dispatch(setNumberHandler(number))\n    }\n\n    const bookingNumber = () => {\n        dispatch(setCategoryHandler(category))\n        dispatch(setDataObjectBooking(dataHotelNumber))\n        dispatch(setNumberBookingHandler(number))\n        dispatch(setNumberHandler(number))\n    }\n\n    return (\n        <div>\n            <div className=\"row__sb__fs borderBottom desktop__booking__hotel__block\"\n                 style={{paddingBottom: \"15px\", flexWrap: \"wrap\", marginBottom: \"20px\"}}>\n                {/*SLIDER*/}\n                <SliderBig\n                    borderRadius={\"10px\"}\n                    height={\"180px\"}\n                    minWidth={\"260px\"}\n                    padding={5}\n                    maxWidth={\"250px\"}\n                    photos={objectPhotos}\n                />\n                <div className=\"column ml__mr_20\">\n                    <div className=\"row__c__fs\">\n                        <span className=\"text__content__black__b__16 mt__mr\">{name}</span>\n                    </div>\n                    <div className=\"row__fs__fs\">\n                        <div className=\"column\">\n                            <span className=\"text__content__grey__12\">Количество гостей</span>\n                            <span className=\"text__content__black__b__14 mt__mb__5\">{guestCount}</span>\n                            <span className=\"text__content__grey__12\">Базовая стоимость</span>\n                            {\n                                sale === null ?\n                                    <span\n                                        className=\"text__content__black__b__14 mt__mb__5\">{formatMoney(priceBase)} ₽</span>\n                                    :\n                                    <div className=\"column\">\n                                        <span className=\"text__content__grey__14 mt__mb__5\"\n                                              style={{textDecorationLine: \"line-through\"}}>{formatMoney(priceBase)} ₽</span>\n                                        <div className=\"row__c__fs\">\n                                            <span\n                                                className=\"text__content__white__b__15 \"\n                                                style={{color: GREEN}}\n                                            >\n                                                {formatMoney(priceBase - priceBase * sale / 100)} ₽\n                                            </span>\n                                        </div>\n                                    </div>\n                            }\n\n                        </div>\n                        <div className=\"column \" style={{marginLeft: 50}}>\n                            <span className=\"text__content__grey__12\">Площадь, кв.м.</span>\n                            <span className=\"text__content__black__b__14 mt__mb__5\">{area}</span>\n                            <span className=\"text__content__grey__12\">Количество кроватей</span>\n                            <span className=\"text__content__black__b__14 mt__mb__5\">{bedroom}</span>\n                        </div>\n                        <div className=\"column \" style={{marginLeft: 50}}>\n                            <span className=\"text__content__grey__12\">WI-FI</span>\n                            <span className=\"text__content__black__b__14 mt__mb__5\">{hasWiFi}</span>\n                        </div>\n                        {\n                            sale === null ?\n                                \"\"\n                                :\n                                type === \"booking\" ?\n                                    \"\"\n                                    :\n                                    <div className=\"column__c__c\" style={{\n                                        marginLeft: 50,\n                                        background: GREY_BLACK,\n                                        width: 50,\n                                        height: 50,\n                                        borderRadius: 5,\n                                        padding: 3\n                                    }}>\n                                        <span className=\"text__content__white__b__15\"\n                                              style={{color: ORANGE}}>SALE</span>\n                                        <span className=\"text__content__white__b__16 mt__mb__5\"\n                                              style={{color: GREEN}}>\n                                        {sale} %\n                                    </span>\n                                    </div>\n                        }\n                    </div>\n                    {\n                        type === \"booking\" ?\n                            \"\"\n                            :\n\n                            <div className=\"row__c__fs\">\n                                <ButtonIcon\n                                    mt={20}\n                                    style={\"bookBookingBtn\"}\n                                    name={\"Забронировать\"}\n                                    icon={<Icon24MoneyTransfer color={WHITE} width={20} height={20}/>}\n                                    handler={() => bookingNumber()}\n                                    styleText={\"text__content__white__12\"}\n                                    link={auth ? \"/person\" : \"/api/login\"}\n                                />\n                                <ButtonIcon\n                                    background={GREY_BANNER}\n                                    ml={20}\n                                    mt={20}\n                                    style={\"bookBookingBtn\"}\n                                    name={\"Подробнее\"}\n                                    icon={<Icon20More color={WHITE} width={20} height={20}/>}\n                                    handler={() => openMoreNumber()}\n                                    styleText={\"text__content__white__12\"}\n                                />\n                            </div>\n                    }\n\n\n                </div>\n\n            </div>\n            <div className=\"column__fs borderBottom mobile__booking__hotel__block\"\n                 style={{paddingBottom: \"15px\", marginBottom: \"20px\"}}>\n                {/*SLIDER*/}\n                <SliderBig\n                    borderRadius={\"10px\"}\n                    height={\"180px\"}\n                    minWidth={\"260px\"}\n                    padding={5}\n                    maxWidth={\"250px\"}\n                    photos={objectPhotos}\n                />\n                <div className=\"column__sb\" style={{marginLeft: \"10px\"}}>\n                    <div className=\"row__c__fs\">\n                        <span className=\"text__content__black__b__16 mt__mr\">{name}</span>\n                    </div>\n                    <div className=\"row__fs__fs\">\n                        <div className=\"column\">\n                            <span className=\"text__content__grey__12\">Количество гостей</span>\n                            <span className=\"text__content__black__b__14 mt__mb__5\">{guestCount}</span>\n                            <span className=\"text__content__grey__12\">Базовая стоимость</span>\n                            {\n                                sale === null ?\n                                    <span\n                                        className=\"text__content__black__b__14 mt__mb__5\">{formatMoney(priceBase)} ₽</span>\n                                    :\n                                    <div className=\"column\">\n                                        <span className=\"text__content__grey__14 mt__mb__5\"\n                                              style={{textDecorationLine: \"line-through\"}}>{formatMoney(priceBase)} ₽</span>\n                                        <div className=\"row__c__fs\">\n                                            <span\n                                                className=\"text__content__white__b__15 \"\n                                                style={{color: GREEN}}\n                                            >\n                                                {formatMoney(priceBase - priceBase * sale / 100)} ₽\n                                            </span>\n                                        </div>\n                                    </div>\n                            }\n\n                        </div>\n                        <div className=\"column \" style={{marginLeft: 50}}>\n                            <span className=\"text__content__grey__12\">Площадь, кв.м.</span>\n                            <span className=\"text__content__black__b__14 mt__mb__5\">{area}</span>\n                            <span className=\"text__content__grey__12\">Количество кроватей</span>\n                            <span className=\"text__content__black__b__14 mt__mb__5\">{bedroom}</span>\n                        </div>\n                        <div className=\"column \" style={{marginLeft: 50}}>\n                            <span className=\"text__content__grey__12\">WI-FI</span>\n                            <span className=\"text__content__black__b__14 mt__mb__5\">{hasWiFi}</span>\n                        </div>\n                        {\n                            sale === null ?\n                                \"\"\n                                :\n                                type === \"booking\" ?\n                                    \"\"\n                                    :\n                                    <div className=\"column__c__c\" style={{\n                                        marginLeft: 50,\n                                        background: GREY_BLACK,\n                                        width: 50,\n                                        height: 50,\n                                        borderRadius: 5,\n                                        padding: 3\n                                    }}>\n                                        <span className=\"text__content__white__b__15\"\n                                              style={{color: ORANGE}}>SALE</span>\n                                        <span className=\"text__content__white__b__16 mt__mb__5\"\n                                              style={{color: GREEN}}>\n                                        {sale} %\n                                    </span>\n                                    </div>\n                        }\n                    </div>\n                    {\n                        type === \"booking\" ?\n                            \"\"\n                            :\n                            <div className=\"row__sb__c\">\n                                <ButtonIcon\n                                    style={\"bookBookingBtn\"}\n                                    name={width >= 0 && width <= 425 ? \"\" : \"Забронировать\"}\n                                    icon={<Icon24MoneyTransfer color={WHITE} width={20} height={20}/>}\n                                    handler={() => bookingNumber()}\n                                    styleText={\"text__content__white__12\"}\n                                    link={auth ? \"/person\" : \"/api/login\"}\n                                />\n                                <ButtonIcon\n                                    background={GREY_BANNER}\n                                    ml={20}\n                                    mt={20}\n                                    style={\"bookBookingBtn\"}\n                                    name={width >= 0 && width <= 425 ? \"\" : \"Подробнее\"}\n                                    icon={<Icon20More color={WHITE} width={20} height={20}/>}\n                                    handler={() => openMoreNumber()}\n                                    styleText={\"text__content__white__12\"}\n                                />\n                            </div>\n                    }\n                </div>\n            </div>\n            <MoreNumber/>\n        </div>\n    )\n}\n","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Icon24Cancel} from \"@vkontakte/icons\";\nimport {GREY_BLACK} from \"../../theme/colors\";\nimport { openNumberListHandler} from \"../../store/HotelsList\";\nimport {useEffect, useState} from \"react\";\nimport {ListNumberCard} from \"../cards/ListNumberCard\";\nimport {Spinner} from \"../spinner/Spinner\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 800,\n    height: 600,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    borderRadius: 5,\n    p: 4,\n};\n\n\nexport const NumberList = ({dataHotelNumber}) => {\n    const dispatch = useDispatch()\n    const openNumberList = useSelector(state => state.hotels_list.openNumberList)\n    const loadNumberListModal = useSelector(state => state.hotels_list.loadNumberListModal)\n    const dataNumbersList = useSelector(state => state.hotels_list.dataNumbersList)\n    const [width, setWidth] = useState(window.innerWidth);\n\n\n    console.log(\"dataNumbersList\", dataNumbersList);\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n    const closeMobileCodeModal = () => {\n        dispatch(openNumberListHandler(!openNumberList))\n    }\n\n\n    return (\n        <>\n            <Modal\n                open={openNumberList}\n                onClose={() => closeMobileCodeModal()}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <div className=\"column\">\n                        <div className=\"row__sb__c\">\n                            <h3>Выберите свободный номер</h3>\n                            <span onClick={() => closeMobileCodeModal()}\n                                  style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                        </div>\n                        <div className=\"column block__center__scroll\" style={{height: \"550px\"}}>\n                            {loadNumberListModal ?\n                                <Spinner/>\n                                :\n                                dataNumbersList.length !== 0 ?\n                                    dataNumbersList.map(number => {\n                                        return (\n                                            <ListNumberCard\n                                                key={number.id}\n                                                name={number.name}\n                                                id={number.id}\n                                                hotelId={number.hotelId}\n                                                number={number}\n                                                categoryId={number.categoryId}\n                                                guestCount={number.guestCount.length}\n                                                area={number.area}\n                                                priceBase={number.priceBase}\n                                                bedroom={number.countBedrooms}\n                                                hasWiFi={number.has_wifi.value}\n                                                width={width}\n                                                dataHotelNumber={dataHotelNumber}\n                                            />\n                                        )\n                                    })\n                                    :\n                                    <div className=\"row__c__c\">\n                                        <span className=\"text__content__grey__16\">Нет свободных номеров</span>\n                                    </div>\n                            }\n                        </div>\n                    </div>\n                </Box>\n            </Modal>\n        </>\n    )\n}","import {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport {Icon24BriefcaseOutline, Icon24Cancel, Icon24ChevronDown, Icon24FlashOutline} from '@vkontakte/icons';\nimport {GREY, GREY_BLACK, RED, WHITE} from \"../../theme/colors\";\nimport {DataRange} from \"../calendar/DataRange\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {wordDeclension, wordDeclensionNight} from \"../../utils/word-declensions\";\nimport { handlerDataRange, showCalendarHandler, showGuestHandler} from \"../../store/Search\";\nimport React, {useEffect, useState} from \"react\";\nimport {GuestHotel} from \"../search/GuestHotel\";\nimport InputMask from \"react-input-mask\";\nimport { dataHotelUserHandler, phoneUserHandler, linkUserHandler} from \"../../store/ClientData\";\nimport Drawer from \"react-modern-drawer\";\nimport {formatMoney} from \"../../utils/formating-money\";\nimport {\n    dataNumbersListHandler,\n    loadNumberListModalHandler,\n    openNumberListHandler\n} from \"../../store/HotelsList\";\nimport {NumberList} from \"../modals/NumberList\";\nimport NumberService from \"../../services/number.service\";\nimport {parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\n\n\nexport const QuickBooking = ({dataHotelNumber}) => {\n    const dispatch = useDispatch()\n    const hotelId = localStorage.getItem(\"hotelId\")\n    const requestParameters = useSelector(state => state.search.cityOrHotel)\n    const showCalendar = useSelector(state => state.search.showCalendar)\n    const showGuest = useSelector(state => state.search.showGuest)\n    const [openDataRang, setOpenDataRang] = useState(false)\n    const [openGuest, setGuest] = useState(false)\n    const [checkOld, setCheckOld] = useState(false)\n    const [phone, setPhone] = useState(\"\");\n    const [checkPhone, setCheckPhone] = useState(false);\n    const dataClient = useSelector(state => state.client__data.dateClient)\n    const [isOpenBooking, setIsOpenBooking] = React.useState(false)\n    const auth = useSelector(state => state.auth.isAuth);\n    const [averagePrice, setAveragePrice] = useState(\"\");\n\n\n    useEffect(() => {\n        if (averagePrice === \"\") {\n            NumberService.getAllNumbers(\"hotel\", hotelId)\n                .then(data => {\n                    const resultNumb = parseJSONPropertiesInArray(data)\n                    // Фильтрация номеров по hotelId\n                    const filteredPrices = resultNumb.filter(price => +price.hotelId === +hotelId);\n\n                    if (filteredPrices.length > 0) {\n                        const pricesAboveZero = filteredPrices.filter(price => price.priceBase > 0);\n                        if (pricesAboveZero.length > 0) {\n                            const minPrice = Math.min(...pricesAboveZero.map(price => price.priceBase));\n                            setAveragePrice(minPrice);\n                        } else {\n                            console.log(\"Все цены меньше или равны нулю\");\n                        }\n                    } else {\n                        console.log(\"Нет данных для указанного hotelId\");\n                    }\n                })\n        }\n    }, [])\n\n\n    const toggleDrawerBooking = () => {\n        setIsOpenBooking((prevState) => !prevState)\n    }\n\n    const handleClickOutsideGuestHotel = () => {\n        setGuest(false);\n        dispatch(showGuestHandler(false));\n        handlerOpenGuest();\n    };\n\n    const handleClickOutsideDataRange = () => {\n        setOpenDataRang(false);\n        handlerDate();\n    };\n\n    const handlerDate = () => {\n        setOpenDataRang(!openDataRang)\n        dispatch(showCalendarHandler(!showCalendar))\n    }\n    const dataSearchHandler = (type, value) => {\n        if (type === \"DataRange\") {\n            dispatch(handlerDataRange(value))\n            handlerDate()\n        }\n    }\n\n    const handlerOpenGuest = () => {\n        setGuest(!openGuest)\n        dispatch(showGuestHandler(!showGuest))\n    }\n    const checkingHandler = () => {\n        if (requestParameters.guest.child.map(child => child.old === \"Возраст\")[0]) {\n            setCheckOld(true)\n        } else {\n            setGuest(!openGuest)\n            dispatch(showGuestHandler(!showGuest))\n            setCheckOld(false)\n        }\n    }\n\n    const filterNumbers = async (array) => {\n        const checkIn = requestParameters.checkIn\n        const checkOut = requestParameters.checkOut\n        const guest = requestParameters.guest.adult + requestParameters.guest.child.length\n        const filteredNumbers = await array.filter(number => {\n            // Проверяем диапазон дат в bookingList\n            const isDateAvailable = number.bookingList.every(booking => {\n                return !(checkIn >= booking.checkIn && checkIn < booking.checkOut) &&\n                    !(checkOut > booking.checkIn && checkOut <= booking.checkOut);\n            });\n            // Проверяем количество гостей\n            const isGuestCountValid = number.guestCount.length >= guest;\n            return isDateAvailable && isGuestCountValid;\n        });\n        return filteredNumbers\n    }\n\n    const openListNumber = () => {\n        dispatch(loadNumberListModalHandler(true))\n        NumberService.getAllNumbers(\"hotel\", hotelId)\n            .then(data => {\n                const resultNumb = parseJSONPropertiesInArray(data)\n                filterNumbers(resultNumb)\n                    .then(data => {\n                        dispatch(dataNumbersListHandler(data))\n                    })\n                    .catch(e => console.log(e))\n                    .finally(() => {\n                        dispatch(loadNumberListModalHandler(false))\n                    })\n            })\n\n\n        // dispatch(loadingNumberListHandler(true))\n        dispatch(openNumberListHandler(true))\n    }\n\n    console.log(\"requestParameters\", requestParameters);\n\n    const regex = /^\\+7 \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$/;\n    const bookingHandler = (phone) => {\n        if (regex.test(phone)) {\n            // dispatch(mobileCodeModalHandler(true))\n            dispatch(phoneUserHandler(phone))\n            dispatch(linkUserHandler(\"/Личный_кабинет\"))\n            dispatch(dataHotelUserHandler(dataHotelNumber))\n            setCheckPhone(false)\n        } else {\n            setCheckPhone(true)\n        }\n    }\n\n    return (\n        <div>\n            <div className=\"column quick__booking\">\n                <div className=\"row__sb__c inputQuickBookingPeople\">\n                    <div className=\"quick__booking__block\">\n                        <div\n                            className=\"row__sb__c quick__booking__block\"\n                            onClick={() => handlerDate()}\n                            style={{cursor: \"pointer\"}}>\n                <span\n                    className=\"text__content__black__14\"\n                    style={{marginLeft: \"10px\"}}>\n                    {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                    <span\n                        className=\"text__content__grey__14\"\n                        style={{marginLeft: \"5px\"}}>\n                        {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                    </span>\n                </span>\n                            <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                        <Icon24ChevronDown color={GREY}/>\n                    </span>\n                        </div>\n                        {\n                            openDataRang && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideDataRange}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n                        <DataRange\n                            style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                            handle={(type, value) => dataSearchHandler(type, value)}\n                            page={\"search\"}\n                        />\n                    </div>\n                </div>\n                <div className=\"row__c__fs inputQuickBookingPeople\">\n                    <div className=\"quick__booking__block\">\n                        <div\n                            className=\"row__sb__c quick__booking__block\"\n                            onClick={() => handlerOpenGuest()}\n                            style={{cursor: \"pointer\",}}>\n                        <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                            {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                        </span>\n                            <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                            <Icon24ChevronDown color={GREY}/>\n                        </span>\n                        </div>\n                        {\n                            openGuest && (\n                                <div\n                                    className=\"click-outside-modal-handler\"\n                                    onClick={handleClickOutsideGuestHotel}\n                                    style={{\n                                        position: 'fixed',\n                                        top: 0,\n                                        left: 0,\n                                        right: 0,\n                                        bottom: 0,\n                                        zIndex: 1,\n                                    }}\n                                ></div>\n                            )\n                        }\n                        <GuestHotel\n                            style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                            guest={requestParameters.guest.adult}\n                            child={requestParameters.guest.child}\n                            handler={() => checkingHandler()}\n                            checkOld={checkOld}\n                        />\n                    </div>\n                </div>\n                <div className=\"row__sb__c\" style={{marginTop: \"10px\", marginBottom: \"15px\"}}>\n                    <span\n                        className=\"text__content__black__b__16\">Итого за {requestParameters.dataRange.countNight} суток</span>\n                    <span\n                        className=\"text__content__black__b__20\">{formatMoney(averagePrice * requestParameters.dataRange.countNight)} ₽</span>\n                </div>\n                {auth ?\n\n                    <ButtonIcon\n                        handler={() => openListNumber()}\n                        icon={<Icon24BriefcaseOutline color={WHITE}/>}\n                        style={\"bookBtn\"}\n                        name={\"Забронировать\"}\n                        styleText={\"text__content__white__16\"}\n                    />\n                    :\n                    <>\n            <span\n                className=\"text__content__black__12\"\n                style={{marginTop: \"5px\", marginBottom: \"5px\"}}>Ваш телефон для бронирования</span>\n                        <div className=\"row__c__fs\">\n                            <InputMask\n                                value={phone}\n                                className=\"inputQuickBookingPhone text__content__black__16\"\n                                onChange={(e) => setPhone(e.target.value)}\n                                mask=\"+79999999999\"\n                                placeholder=\"+79999999999\"\n                            />\n                        </div>\n                        {checkPhone ?\n                            <span className=\"text__content__black__b__12\" style={{\n                                marginTop: \"5px\",\n                                marginBottom: \"5px\",\n                                color: RED\n                            }}>Некорректный номер телефона</span>\n                            :\n                            \"\"\n                        }\n                        <span\n                            className=\"text__content__grey__12\"\n                            style={{marginTop: \"5px\", marginBottom: \"10px\"}}>\n                Отправим код для подтверждения и\n                информацию о бронировании\n            </span>\n                        <ButtonIcon\n                            handler={() => bookingHandler(phone)}\n                            icon={<Icon24BriefcaseOutline color={WHITE}/>}\n                            style={\"bookBtn\"}\n                            name={\"Забронировать\"}\n                            styleText={\"text__content__white__16\"}\n                            link={regex.test(phone) ? \"/api/registration\" : \"\"}\n                        />\n                    </>\n                }\n\n                <span\n                    className=\"text__content__grey__12\"\n                    style={{marginTop: \"10px\", marginBottom: \"10px\"}}>\n                Нажимая кнопку <b>Забронировать</b> , Вы\n                соглашаетесь с условиями <ins>пользовательского\n                соглашения и на обработку персональных\n                данных</ins>\n            </span>\n                <span\n                    className=\"text__content__black__16\"\n                    style={{marginTop: \"5px\", marginBottom: \"5px\"}}>\n                Служба бронирования\n            </span>\n                <span\n                    className=\"text__content__black__b__20\"\n                    style={{marginTop: \"5px\"}}>\n                8 800 556 69 99\n            </span>\n            </div>\n            <div className=\"column mobile__quick__booking\" style={{marginBottom: \"40px\"}}>\n                <Drawer\n                    open={isOpenBooking}\n                    onClose={toggleDrawerBooking}\n                    direction='bottom'\n                    style={{height: dataClient.auth ? \"80vh\" : \"90vh\", overflowY: \"scroll\"}}\n                >\n                    <div className=\"row__sb__c\" style={{padding: \"20px\",}}>\n                        <h4>Проверьте дату и количество гостей</h4>\n                        <span onClick={() => toggleDrawerBooking()}\n                              style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                    </div>\n                    <div className=\"column\"\n                         style={{height: \"100%\", background: WHITE, paddingLeft: \"20px\", paddingRight: \"20px\"}}>\n                        <div className=\"row__sb__c inputQuickBookingPeople\">\n                            <div className=\"quick__booking__block\">\n                                <div\n                                    className=\"row__sb__c quick__booking__block\"\n                                    onClick={() => handlerDate()}\n                                    style={{cursor: \"pointer\"}}>\n                <span\n                    className=\"text__content__black__14\"\n                    style={{marginLeft: \"10px\"}}>\n                    {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                    <span\n                        className=\"text__content__grey__14\"\n                        style={{marginLeft: \"5px\"}}>\n                        {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                    </span>\n                </span>\n                                    <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                        <Icon24ChevronDown color={GREY}/>\n                    </span>\n                                </div>\n                                {\n                                    openDataRang && (\n                                        <div\n                                            className=\"click-outside-modal-handler\"\n                                            onClick={handleClickOutsideDataRange}\n                                            style={{\n                                                position: 'fixed',\n                                                top: 0,\n                                                left: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                zIndex: 1,\n                                            }}\n                                        ></div>\n                                    )\n                                }\n                                <DataRange\n                                    style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                                    handle={() => handlerDate()}\n                                    page={\"search\"}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"row__c__fs inputQuickBookingPeople\">\n                            <div className=\"quick__booking__block\">\n                                <div\n                                    className=\"row__sb__c quick__booking__block\"\n                                    onClick={() => handlerOpenGuest()}\n                                    style={{cursor: \"pointer\",}}>\n                        <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                            {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                        </span>\n                                    <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                            <Icon24ChevronDown color={GREY}/>\n                        </span>\n                                </div>\n                                {\n                                    openGuest && (\n                                        <div\n                                            className=\"click-outside-modal-handler\"\n                                            onClick={handleClickOutsideGuestHotel}\n                                            style={{\n                                                position: 'fixed',\n                                                top: 0,\n                                                left: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                zIndex: 1,\n                                            }}\n                                        ></div>\n                                    )\n                                }\n                                <GuestHotel\n                                    style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                                    guest={requestParameters.guest.adult}\n                                    child={requestParameters.guest.child}\n                                    handler={() => checkingHandler()}\n                                    checkOld={checkOld}\n                                />\n                            </div>\n                        </div>\n                        <div className=\"row__sb__c\" style={{marginTop: \"20px\", marginBottom: \"35px\"}}>\n                    <span\n                        className=\"text__content__black__b__16\">Итого за {requestParameters.dataRange.countNight} суток</span>\n                            <span\n                                className=\"text__content__black__b__20\">{formatMoney(averagePrice * requestParameters.dataRange.countNight)} ₽</span>\n                        </div>\n                        {auth === true ?\n\n                            <ButtonIcon\n                                handler={() => dispatch(dataHotelUserHandler(dataHotelNumber))}\n                                icon={<Icon24BriefcaseOutline color={WHITE}/>}\n                                style={\"bookBtn\"}\n                                name={\"Забронировать\"}\n                                styleText={\"text__content__white__16\"}\n                                link={\"/person\"}\n                            />\n                            :\n                            <>\n                            <span\n                                className=\"text__content__black__14\"\n                                style={{marginTop: \"5px\", marginBottom: \"5px\"}}>Ваш телефон для бронирования</span>\n                                <div className=\"row__c__fs\">\n                                    <InputMask\n                                        value={phone}\n                                        className=\"inputQuickBookingPhone text__content__black__16\"\n                                        onChange={(e) => setPhone(e.target.value)}\n                                        mask=\"+79999999999\"\n                                        placeholder=\"+79999999999\"\n                                    />\n                                </div>\n                                {checkPhone ?\n                                    <span className=\"text__content__black__b__14\" style={{\n                                        marginTop: \"5px\",\n                                        marginBottom: \"5px\",\n                                        color: RED\n                                    }}>Некорректный номер телефона</span>\n                                    :\n                                    \"\"\n                                }\n                                <span\n                                    className=\"text__content__grey__14\"\n                                    style={{marginTop: \"5px\", marginBottom: \"20px\"}}>\n                Отправим код для подтверждения и\n                информацию о бронировании\n            </span>\n                                <ButtonIcon\n                                    handler={() => bookingHandler(phone)}\n                                    icon={<Icon24BriefcaseOutline color={WHITE}/>}\n                                    style={\"bookBtn\"}\n                                    name={\"Забронировать\"}\n                                    styleText={\"text__content__white__16\"}\n                                    link={regex.test(phone) ? \"/api/registration\" : \"\"}\n                                />\n                            </>\n                        }\n\n                        <span\n                            className=\"text__content__grey__14\"\n                            style={{marginTop: \"20px\", marginBottom: \"20px\", textAlign: \"center\"}}>\n                Нажимая кнопку <b>Забронировать</b> , Вы\n                соглашаетесь с условиями <ins>пользовательского\n                соглашения и на обработку персональных\n                данных</ins>\n            </span>\n                        <span\n                            className=\"text__content__black__16\"\n                            style={{marginTop: \"5px\", marginBottom: \"5px\", textAlign: \"center\"}}>\n                Служба бронирования\n            </span>\n                        <span\n                            className=\"text__content__black__b__20\"\n                            style={{marginTop: \"5px\", textAlign: \"center\"}}>\n                8 800 556 69 99\n            </span>\n\n                    </div>\n                </Drawer>\n                <ButtonIcon\n                    handler={() => toggleDrawerBooking()}\n                    icon={<Icon24FlashOutline color={WHITE}/>}\n                    style={\"bookBtn\"}\n                    name={\"Быстрое бронирование\"}\n                    styleText={\"text__content__white__16\"}\n                />\n            </div>\n            <NumberList dataHotelNumber={dataHotelNumber}/>\n        </div>\n    )\n}","import {WHITE} from \"../../theme/colors\";\n\nexport const DescriptionHotel = ({dataHotelNumber}) => {\n    return (\n        <div\n            className=\"column__fs\"\n            style={{\n                background: WHITE,\n                borderRadius: \"20px\",\n                padding: \"20px\",\n                height: \"100%\",\n                marginBottom: \"40px\",\n\n            }}\n        >\n            <span className=\"text__content__black__b__20\" style={{marginBottom: \"15px\"}}>\n                Описание объекта\n            </span>\n            <p className=\"text__content__black__16\">\n                {dataHotelNumber?.description}\n            </p>\n        </div>\n    )\n}","import {BLACK, GREY_BLACK,  WHITE} from \"../../theme/colors\";\nimport Drawer from \"react-modern-drawer\";\nimport {Icon24ErrorCircleOutline, Icon24Cancel} from \"@vkontakte/icons\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport React, {useEffect} from \"react\";\nimport {optionCheckBoxPropertyRules} from \"../../utils/varible\";\n\nexport const HotelRules = ({dataHotelNumber}) => {\n    const [isOpenBooking, setIsOpenBooking] = React.useState(false)\n    const [filterRules, setFilterRules] = React.useState([])\n\n    const toggleDrawerBooking = () => {\n        setIsOpenBooking((prevState) => !prevState)\n    }\n\n    useEffect(() => {\n        if (dataHotelNumber !== null) {\n            const newFilterRules = dataHotelNumber.propertyRules.map(rule => {\n                return optionCheckBoxPropertyRules.find(item => item.value === rule);\n            }).filter(Boolean); // Фильтруем, чтобы удалить пустые значения\n            console.log(newFilterRules);\n            setFilterRules(newFilterRules);\n        }\n    }, [dataHotelNumber, optionCheckBoxPropertyRules]);\n\n    return (\n        <div>\n            <div className=\"column__fs hotel__rules\">\n            <span className=\"text__content__black__b__20\" style={{marginBottom: \"15px\"}}>\n                Правила объекта размещения\n            </span>\n                <div className=\"row__fs__sb\" style={{flexWrap: \"wrap\"}}>\n                    <div className=\"column__fs__c\">\n                        {\n                            filterRules.map(item => (\n                                <div className=\"row__c__fs\" style={{marginBottom: \"15px\"}}>\n                                    <span className=\"material-symbols-outlined\">\n                                        {item.icon.replace(/\"/g, '')}\n                                    </span>\n                                    <span className=\"text__content__black__16\" style={{marginLeft: \"15px\"}}>\n                                        {item.name}\n                                    </span>\n                                </div>\n                            ))\n                        }\n                    </div>\n                    <div className=\"column__fs__c\" style={{marginRight: \"30px\"}}>\n                        <div className=\"row__fs__sb\">\n                            <div className=\"column__fs__c\">\n                            <span className=\"text__content__black__b__16\">\n                                Заезд\n                            </span>\n                                <span className=\"text__content__black__16\" style={{marginTop: \"10px\"}}>\n                                до {dataHotelNumber?.checkIn}\n                            </span>\n                            </div>\n                            <div className=\"column__fs__c\">\n                            <span className=\"text__content__black__b__16\">\n                                Отезд\n                            </span>\n                                <span className=\"text__content__black__16\" style={{marginTop: \"10px\"}}>\n                                после {dataHotelNumber?.checkOut}\n                            </span>\n                            </div>\n                        </div>\n                        <span className=\"text__content__black__b__16\" style={{marginTop: \"20px\"}}>\n                            Минимальный срок проживания\n                        </span>\n                        <span className=\"text__content__black__16\" style={{marginTop: \"10px\"}}>\n                            от {dataHotelNumber?.minimumNightStay} суток\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <div className=\"column mobile__quick__booking\" style={{marginBottom: \"30px\"}}>\n                <Drawer\n                    open={isOpenBooking}\n                    onClose={toggleDrawerBooking}\n                    direction='bottom'\n                    style={{height: \"80vh\", overflowY: \"scroll\"}}\n                >\n                    <div className=\"column\" style={{height: \"100%\", background: WHITE, padding: \"20px\",}}>\n                        <div className=\"row__sb__c\">\n                            <h4> Правила объекта размещения</h4>\n                            <span onClick={() => toggleDrawerBooking()}\n                                  style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                        </div>\n\n                        <div className=\"column__fs__c\">\n                            <div className=\"row__fs__sb\">\n                                <div className=\"column__fs__c\">\n                                             <span className=\"text__content__black__b__16\">\n                                                Заезд\n                                            </span>\n                                    <span className=\"text__content__black__16\" style={{marginTop: \"10px\"}}>\n                                                до {dataHotelNumber?.checkIn}\n                                            </span>\n                                </div>\n                                <div className=\"column__fs__c\">\n                                            <span className=\"text__content__black__b__16\">\n                                                Отезд\n                                            </span>\n                                    <span className=\"text__content__black__16\" style={{marginTop: \"10px\"}}>\n                                                после {dataHotelNumber?.checkOut}\n                                            </span>\n                                </div>\n                            </div>\n                            <span className=\"text__content__black__b__16\" style={{marginTop: \"20px\"}}>\n                                                Минимальный срок проживания\n                                            </span>\n                            <span className=\"text__content__black__16\"\n                                  style={{marginTop: \"10px\", marginBottom: \"10px\"}}>\n                                                от {dataHotelNumber?.minimumNightStay} суток\n                                            </span>\n                            {\n                                filterRules.map(item => (\n                                    <div className=\"row__c__fs\" style={{marginBottom: \"15px\"}}>\n                                    <span className=\"material-symbols-outlined\">\n                                        {item.icon.replace(/\"/g, '')}\n                                    </span>\n                                        <span className=\"text__content__black__16\" style={{marginLeft: \"15px\"}}>\n                                        {item.name}\n                                    </span>\n                                    </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </Drawer>\n                <ButtonIcon\n                    handler={() => toggleDrawerBooking()}\n                    icon={<Icon24ErrorCircleOutline color={BLACK}/>}\n                    style={\"bookRulesBtn\"}\n                    name={\"Правила размещения в отеле\"}\n                    styleText={\"text__content__black__16\"}\n                />\n            </div>\n        </div>\n\n    )\n}","import {ButtonCounter} from \"../buttons/ButtonCounter\";\nimport React from \"react\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\nimport {Button} from \"../buttons/Button\";\nimport {useDispatch} from \"react-redux\";\nimport {\n    handlerAddChild,\n    handlerAddGuest,\n    handlerDelChild,\n    handlerDelGuest,\n    handlerEditOldChild\n} from \"../../store/HotelItem\";\nimport {RED} from \"../../theme/colors\";\n\nexport const GuestHotelNumber = ({style, guest, child, handler, checkOld, styles, styles_content}) => {\n    const dispatch = useDispatch()\n    const old = [\n        {id: 0, name: \"до года\",}, {id: 1, name: \"1 год\",}, {id: 2, name: \"2 года\",},\n        {id: 3, name: \"3 года\",}, {id: 4, name: \"4 года\",}, {id: 5, name: \"5 лет\",},\n        {id: 6, name: \"6 лет\",}, {id: 7, name: \"7 лет\",}, {id: 8, name: \"8 лет\",},\n        {id: 9, name: \"9 лет\",}, {id: 10, name: \"10 лет\",}, {id: 11, name: \"11 лет\",},\n        {id: 12, name: \"12 лет\",}, {id: 13, name: \"13 лет\",}, {id: 14, name: \"14 лет\",},\n        {id: 15, name: \"15 лет\",}, {id: 16, name: \"16 лет\",}, {id: 17, name: \"17 лет\",},\n    ]\n\n    const handlerChooseOld = (e, id) => {\n\n        dispatch(handlerEditOldChild({idChild: id, old: e.target.value}))\n    }\n\n    return (\n        <div\n            className={style}\n\n        >\n            <div\n                className=\"modal__content__guest\"\n                style={styles}\n            >\n                <div className=\"modal__body\">\n                    <div\n                        className=\"column__fs\"\n                        style={{\n                            marginBottom: \"10px\",\n                            marginLeft: \"5px\",\n                            marginRight: \"10px\"\n                        }}\n                    >\n\n                        <div>\n                            <div className=\"column__fs\">\n                                <div\n                                    className=\"row__sb__c\"\n                                    style={{\n                                        marginTop: \"10px\",\n                                        marginBottom: \"5px\",\n                                        borderBottom: \"1px solid var(--grey-white)\",\n                                        paddingBottom: \"10px\"\n                                    }}\n                                >\n                                    <div className=\"column__fs\">\n                                        <span className=\"text__content__black__14\">Взрослые</span>\n                                        <span className=\"text__content__grey__12\">от 18 лет</span>\n                                    </div>\n                                    <ButtonCounter\n                                        count={guest}\n                                        style={\"row__sb__c counterGuestBtn\"}\n                                        handleAdd={() => dispatch((handlerAddGuest(1)))}\n                                        handleDel={() => dispatch((handlerDelGuest(1)))}\n                                    />\n                                </div>\n                                <div\n                                    className=\"row__sb__c\"\n                                    style={{\n                                        marginTop: \"5px\",\n                                        marginBottom: \"10px\",\n                                        borderBottom: \"1px solid var(--grey-white)\",\n                                        paddingBottom: \"10px\"\n                                    }}\n                                >\n                                    <div className=\"column__fs\">\n                                        <span className=\"text__content__black__14\">Дети</span>\n                                        <span className=\"text__content__grey__12\">до 17 лет</span>\n                                    </div>\n                                    <ButtonCounter\n                                        handleAdd={() => dispatch((handlerAddChild(child.length + 1)))}\n                                        handleDel={() => dispatch((handlerDelChild(child.length - 1)))}\n                                        count={child.length}\n                                        style={\"row__sb__c counterGuestBtn\"}\n                                    />\n                                </div>\n                                {child.length === 0 ?\n                                    \"\"\n                                    :\n                                    child.map(item => (\n                                        <div\n                                            className=\"row__sb__c\"\n                                            key={item.id}\n                                            style={{\n                                                marginTop: \"5px\",\n                                                marginBottom: \"10px\",\n                                                borderBottom: \"1px solid var(--grey-white)\",\n                                                paddingBottom: \"10px\"\n                                            }}\n                                        >\n\n                                            <FormControl sx={{m: 1, width: \"100%\"}} size=\"small\">\n                                                <InputLabel id=\"demo-select-small-label\">Возраст</InputLabel>\n                                                <Select\n                                                    labelId=\"demo-select-small-label\"\n                                                    id=\"demo-select-small\"\n                                                    value={item.old}\n                                                    label=\"Возраст\"\n                                                    onChange={(e) => handlerChooseOld(e, item.id)}\n                                                >\n                                                    <MenuItem  value=\"Возраст\">\n                                                        { checkOld ? <b style={{color: RED}}>Укажите возраст</b> : <b>Возраст</b>}\n                                                    </MenuItem>\n                                                    {old.map(old => (\n                                                        <MenuItem\n                                                            value={old.id}\n                                                            key={old.id}\n                                                        > {old.name}\n                                                        </MenuItem>\n                                                    ))}\n                                                </Select>\n                                            </FormControl>\n                                        </div>\n                                    ))\n                                }\n                            </div>\n\n                        </div>\n                        <div\n                            className=\"row__c__c\"\n                        >\n                            <Button\n                                style={\"doneBtn\"}\n                                name={\"Применить\"}\n                                handler={handler}\n                                styleText={\"text__content__white__16\"}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import {BLACK, GREY, GREY_BANNER, GREY_BLACK, ORANGE, WHITE} from \"../../theme/colors\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport {\n    Icon28SyncOutline,\n    Icon24CalendarOutline,\n    Icon24ChevronDown,\n    Icon24Search,\n    Icon24Cancel\n} from \"@vkontakte/icons\";\nimport {DataRange} from \"../calendar/DataRange\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {wordDeclension, wordDeclensionNight} from \"../../utils/word-declensions\";\nimport { showCalendarHandler, handlerDataRange, showGuestHandler} from \"../../store/HotelItem\";\nimport {GuestHotelNumber} from \"../search/GuestHotelNumber\";\nimport Drawer from \"react-modern-drawer\";\nimport NumberService from \"../../services/number.service\";\nimport {parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\nimport {dataNumbersListHandler, loadingNumberListHandler} from \"../../store/HotelsList\";\n\n\n\nexport const CheckAvailability = () => {\n    const dispatch = useDispatch()\n    const requestParameters = useSelector(state => state.hotels_item.cityOrHotel)\n    const showCalendar = useSelector(state => state.hotels_item.showCalendar)\n    const showGuest = useSelector(state => state.hotels_item.showGuest)\n    const [openDataRang, setOpenDataRang] = useState(false)\n    const [openGuest, setGuest] = useState(false)\n    const [checkOld, setCheckOld] = useState(false)\n    const [isOpen, setIsOpen] = React.useState(false)\n    const hotelId = localStorage.getItem(\"hotelId\")\n    const dataNumbers = useSelector(state => state.hotels_list.dataNumbersList)\n\n    const toggleDrawer = () => {\n        setIsOpen((prevState) => !prevState)\n    }\n    const handleClickOutsideGuestHotel = () => {\n        setGuest(false);\n        dispatch(showGuestHandler(false));\n        handlerOpenGuest();\n    };\n\n    const handleClickOutsideDataRange = () => {\n        setOpenDataRang(false);\n        handlerDate();\n    };\n\n\n    const handlerDate = () => {\n        setOpenDataRang(!openDataRang)\n        dispatch(showCalendarHandler(!showCalendar))\n    }\n    const dataSearchHandler = (type, value) => {\n        if (type === \"DataRange\") {\n            dispatch(handlerDataRange(value))\n            handlerDate()\n        }\n    }\n    const handlerOpenGuest = () => {\n        setGuest(!openGuest)\n        dispatch(showGuestHandler(!showGuest))\n    }\n    const checkingHandler = () => {\n        if (requestParameters.guest.child.map(child => child.old === \"Возраст\")[0]) {\n            setCheckOld(true)\n        } else {\n            setGuest(!openGuest)\n            dispatch(showGuestHandler(!showGuest))\n            setCheckOld(false)\n        }\n    }\n    const filterNumbers = async (array) => {\n        const checkIn = requestParameters.checkIn\n        const checkOut = requestParameters.checkOut\n        const guest = requestParameters.guest.adult + requestParameters.guest.child.length\n\n        const filteredNumbers = await array.filter(number => {\n            // Проверяем диапазон дат в bookingList\n            const isDateAvailable = number.bookingList.every(booking => {\n                return !(checkIn >= booking.checkIn && checkIn < booking.checkOut) &&\n                    !(checkOut > booking.checkIn && checkOut <= booking.checkOut);\n            });\n            // Проверяем количество гостей\n            const isGuestCountValid = number.guestCount.length >= guest;\n            return isDateAvailable && isGuestCountValid;\n        });\n\n        return filteredNumbers\n    }\n\n    useEffect(() => {\n        if (dataNumbers.length === 0) {\n            console.log(\"INIT NUMBERS\");\n            NumberService.getAllNumbers(\"hotel\", hotelId)\n                .then(data => {\n                    const resultNumb = parseJSONPropertiesInArray(data)\n                    filterNumbers(resultNumb)\n                        .then(data => {\n                            dispatch(dataNumbersListHandler(data))\n                        })\n                })\n        }\n    }, [])\n\n\n\n\n    const handlerCheckedPlace = () => {\n        dispatch(loadingNumberListHandler(true))\n        NumberService.getAllNumbers(\"hotel\", hotelId)\n            .then(data => {\n                const resultNumb = parseJSONPropertiesInArray(data)\n                filterNumbers(resultNumb)\n                    .then(data => {\n                        dispatch(dataNumbersListHandler(data))\n                    })\n                    .catch(e => console.log(e))\n                    .finally(() => dispatch(loadingNumberListHandler(false)))\n            })\n    }\n\n\n    return (\n        <div>\n            <div className=\"column__fs desktop__super__mega__big__check__availability__block\"\n                 style={{\n                     background: GREY_BANNER,\n                     borderRadius: \"20px\",\n                     padding: \"20px\",\n                     height: \"100%\",\n                     marginBottom: \"40px\",\n                 }}\n            >\n                <div className=\"row__fs__fs\">\n                    <div className=\"row__sb__c inputCheckAvailability\">\n                        <div className=\"row__sb__c \">\n                            <div style={{position: \"relative\", width: \"300px\"}}>\n                                <div\n                                    className=\"row__sb__c\"\n                                    onClick={() => handlerDate()}\n                                    style={{width: \"300px\", cursor: \"pointer\"}}>\n                                    <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                                        <Icon24CalendarOutline color={BLACK}/>\n                                        <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                        {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                                            <span className=\"text__content__grey__14\" style={{marginLeft: \"5px\"}}>\n                                            {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                                        </span>\n                                </span>\n                                    </div>\n                                    <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                                    <Icon24ChevronDown color={GREY}/>\n                                </span>\n                                </div>\n                                {\n                                    openDataRang && (\n                                        <div\n                                            className=\"click-outside-modal-handler\"\n                                            onClick={handleClickOutsideDataRange}\n                                            style={{\n                                                position: 'fixed',\n                                                top: 0,\n                                                left: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                zIndex: 1,\n                                            }}\n                                        ></div>\n                                    )\n                                }\n                                <DataRange\n                                    style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                                    handle={(type, value) => dataSearchHandler(type, value)}\n                                    page={\"search\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row__sb__c inputCheckAvailability\">\n                        <div style={{position: \"relative\", width: \"300px\"}}>\n                            <div className=\"row__sb__c\"\n                                 onClick={() => handlerOpenGuest()}\n                                 style={{width: \"300px\", cursor: \"pointer\"}}>\n                                <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                                    <Icon24CalendarOutline color={BLACK}/>\n                                    <span className=\" text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                    {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                                </span>\n                                </div>\n                                <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                                <Icon24ChevronDown color={GREY}/>\n                            </span>\n                            </div>\n                            {\n                                openGuest && (\n                                    <div\n                                        className=\"click-outside-modal-handler\"\n                                        onClick={handleClickOutsideGuestHotel}\n                                        style={{\n                                            position: 'fixed',\n                                            top: 0,\n                                            left: 0,\n                                            right: 0,\n                                            bottom: 0,\n                                            zIndex: 1,\n                                        }}\n                                    ></div>\n                                )\n                            }\n                            <GuestHotelNumber\n                                style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                                guest={requestParameters.guest.adult}\n                                child={requestParameters.guest.child}\n                                handler={() => checkingHandler()}\n                                checkOld={checkOld}\n                            />\n                        </div>\n                    </div>\n                    <ButtonIcon\n                        handler={() => handlerCheckedPlace()}\n                        icon={<Icon28SyncOutline width={24} height={24} color={WHITE}/>}\n                        style={\"checkAvailabilityBtn check__availability pr_pl_5\"}\n                        name={\"Проверить наличие мест\"}\n                        styleText={\"text__content__white__16\"}\n                    />\n                </div>\n            </div>\n            <div className=\"column__fs desktop__super__big__check__availability__block\"\n                 style={{\n                     background: GREY_BANNER,\n                     borderRadius: \"20px\",\n                     padding: \"20px\",\n                     height: \"100%\",\n                     marginBottom: \"40px\",\n                 }}\n            >\n                <div className=\"row__sb__c\">\n                    <div className=\"row__sb__c inputCheckAvailability\">\n                        <div className=\"row__sb__c checkAvailability__block\">\n                            <div className=\"checkAvailability__block\">\n                                <div\n                                    className=\"row__sb__c checkAvailability__block\"\n                                    onClick={() => handlerDate()}\n                                    style={{cursor: \"pointer\"}}>\n                                    <div className=\"row__c__fs\">\n                                        <Icon24CalendarOutline color={BLACK}/>\n                                        <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                        {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                                            <span className=\"text__content__grey__14\" style={{marginLeft: \"5px\"}}>\n                                            {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                                        </span>\n                                </span>\n                                    </div>\n                                    <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                                    <Icon24ChevronDown color={GREY}/>\n                                </span>\n                                </div>\n                                {\n                                    openDataRang && (\n                                        <div\n                                            className=\"click-outside-modal-handler\"\n                                            onClick={handleClickOutsideDataRange}\n                                            style={{\n                                                position: 'fixed',\n                                                top: 0,\n                                                left: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                zIndex: 1,\n                                            }}\n                                        ></div>\n                                    )\n                                }\n                                <DataRange\n                                    style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                                    handle={(type, value) => dataSearchHandler(type, value)}\n                                    page={\"search\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"null\">____</div>\n                    <div className=\"row__sb__c inputCheckAvailability\">\n                        <div className=\"checkAvailability__block\">\n                            <div className=\"row__sb__c checkAvailability__block\"\n                                 onClick={() => handlerOpenGuest()}\n                                 style={{cursor: \"pointer\"}}>\n                                <div className=\"row__c__fs\">\n                                    <Icon24CalendarOutline color={BLACK}/>\n                                    <span className=\" text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                    {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                                </span>\n                                </div>\n                                <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                                <Icon24ChevronDown color={GREY}/>\n                            </span>\n                            </div>\n                            {\n                                openGuest && (\n                                    <div\n                                        className=\"click-outside-modal-handler\"\n                                        onClick={handleClickOutsideGuestHotel}\n                                        style={{\n                                            position: 'fixed',\n                                            top: 0,\n                                            left: 0,\n                                            right: 0,\n                                            bottom: 0,\n                                            zIndex: 1,\n                                        }}\n                                    ></div>\n                                )\n                            }\n                            <GuestHotelNumber\n                                style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                                guest={requestParameters.guest.adult}\n                                child={requestParameters.guest.child}\n                                handler={() => checkingHandler()}\n                                checkOld={checkOld}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <ButtonIcon\n                    handler={() => handlerCheckedPlace()}\n                    icon={<Icon28SyncOutline width={24} height={24} color={WHITE}/>}\n                    style={\"checkAvailabilityBtn check__availability\"}\n                    name={\"Проверить наличие мест\"}\n                    styleText={\"text__content__white__16\"}\n                />\n\n            </div>\n            <div className=\"column__fs desktop__big__check__availability__block\"\n                 style={{\n                     background: GREY_BANNER,\n                     borderRadius: \"20px\",\n                     padding: \"20px\",\n                     height: \"100%\",\n                     marginBottom: \"40px\",\n                 }}\n            >\n                <div className=\"row__sb__c\">\n                    <div className=\"row__sb__c inputCheckAvailability\">\n                        <div className=\"row__sb__c checkAvailability__block\">\n                            <div className=\"checkAvailability__block\">\n                                <div\n                                    className=\"row__sb__c checkAvailability__block\"\n                                    onClick={() => handlerDate()}\n                                    style={{cursor: \"pointer\"}}>\n                                    <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                                        <Icon24CalendarOutline color={BLACK}/>\n                                        <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                        {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                                            <span className=\"text__content__grey__14\" style={{marginLeft: \"5px\"}}>\n                                            {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                                        </span>\n                                </span>\n                                    </div>\n                                    <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                                    <Icon24ChevronDown color={GREY}/>\n                                </span>\n                                </div>\n                                {\n                                    openDataRang && (\n                                        <div\n                                            className=\"click-outside-modal-handler\"\n                                            onClick={handleClickOutsideDataRange}\n                                            style={{\n                                                position: 'fixed',\n                                                top: 0,\n                                                left: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                zIndex: 1,\n                                            }}\n                                        ></div>\n                                    )\n                                }\n                                <DataRange\n                                    style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                                    handle={(type, value) => dataSearchHandler(type, value)}\n                                    page={\"search\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"null\">____</div>\n                    <div className=\"row__sb__c inputCheckAvailability\">\n                        <div className=\"checkAvailability__block\">\n                            <div className=\"row__sb__c checkAvailability__block\"\n                                 onClick={() => handlerOpenGuest()}\n                                 style={{cursor: \"pointer\"}}>\n                                <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                                    <Icon24CalendarOutline color={BLACK}/>\n                                    <span className=\" text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                    {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                                </span>\n                                </div>\n                                <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                                <Icon24ChevronDown color={GREY}/>\n                            </span>\n                            </div>\n                            {\n                                openGuest && (\n                                    <div\n                                        className=\"click-outside-modal-handler\"\n                                        onClick={handleClickOutsideGuestHotel}\n                                        style={{\n                                            position: 'fixed',\n                                            top: 0,\n                                            left: 0,\n                                            right: 0,\n                                            bottom: 0,\n                                            zIndex: 1,\n                                        }}\n                                    ></div>\n                                )\n                            }\n                            <GuestHotelNumber\n                                style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                                guest={requestParameters.guest.adult}\n                                child={requestParameters.guest.child}\n                                handler={() => checkingHandler()}\n                                checkOld={checkOld}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <ButtonIcon\n                    handler={() => handlerCheckedPlace()}\n                    icon={<Icon28SyncOutline width={24} height={24} color={WHITE}/>}\n                    style={\"checkAvailabilityBtn check__availability\"}\n                    name={\"Проверить наличие мест\"}\n                    styleText={\"text__content__white__16\"}\n                />\n\n            </div>\n            <div className=\"column__fs tablet__check__availability__block\"\n                 style={{\n                     background: GREY_BANNER,\n                     borderRadius: \"20px\",\n                     padding: \"20px\",\n                     height: \"100%\",\n                     marginBottom: \"40px\",\n                 }}\n            >\n                <div className=\"column__c\">\n                    <div className=\"row__sb__c inputCheckAvailability\">\n                        <div className=\"row__sb__c checkAvailability__block\">\n                            <div className=\"checkAvailability__block\">\n                                <div\n                                    className=\"row__sb__c checkAvailability__block\"\n                                    onClick={() => handlerDate()}\n                                    style={{cursor: \"pointer\"}}>\n                                    <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                                        <Icon24CalendarOutline color={BLACK}/>\n                                        <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                        {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                                            <span className=\"text__content__grey__14\" style={{marginLeft: \"5px\"}}>\n                                            {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                                        </span>\n                                </span>\n                                    </div>\n                                    <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                                    <Icon24ChevronDown color={GREY}/>\n                                </span>\n                                </div>\n                                {\n                                    openDataRang && (\n                                        <div\n                                            className=\"click-outside-modal-handler\"\n                                            onClick={handleClickOutsideDataRange}\n                                            style={{\n                                                position: 'fixed',\n                                                top: 0,\n                                                left: 0,\n                                                right: 0,\n                                                bottom: 0,\n                                                zIndex: 1,\n                                            }}\n                                        ></div>\n                                    )\n                                }\n                                <DataRange\n                                    style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                                    handle={() => (type, value) => dataSearchHandler(type, value)}\n                                    page={\"search\"}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"null\">____</div>\n                    <div className=\"row__sb__c inputCheckAvailability\">\n                        <div className=\"checkAvailability__block\">\n                            <div className=\"row__sb__c checkAvailability__block\"\n                                 onClick={() => handlerOpenGuest()}\n                                 style={{cursor: \"pointer\"}}>\n                                <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                                    <Icon24CalendarOutline color={BLACK}/>\n                                    <span className=\" text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                                    {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                                </span>\n                                </div>\n                                <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                                <Icon24ChevronDown color={GREY}/>\n                            </span>\n                            </div>\n                            {\n                                openGuest && (\n                                    <div\n                                        className=\"click-outside-modal-handler\"\n                                        onClick={handleClickOutsideGuestHotel}\n                                        style={{\n                                            position: 'fixed',\n                                            top: 0,\n                                            left: 0,\n                                            right: 0,\n                                            bottom: 0,\n                                            zIndex: 1,\n                                        }}\n                                    ></div>\n                                )\n                            }\n                            <GuestHotelNumber\n                                style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                                guest={requestParameters.guest.adult}\n                                child={requestParameters.guest.child}\n                                handler={() => checkingHandler()}\n                                checkOld={checkOld}\n                            />\n                        </div>\n                    </div>\n                </div>\n                <ButtonIcon\n                    handler={() => handlerCheckedPlace()}\n                    icon={<Icon28SyncOutline width={24} height={24} color={WHITE}/>}\n                    style={\"checkAvailabilityBtn check__availability\"}\n                    name={\"Проверить наличие мест\"}\n                    styleText={\"text__content__white__16\"}\n                />\n\n            </div>\n            <div className=\"column__fs mobile__check__availability__block\">\n                <Drawer\n                    open={isOpen}\n                    onClose={toggleDrawer}\n                    direction='bottom'\n                    style={{height: \"80vh\", overflowY: \"scroll\"}}\n                >\n                    <div\n                        className=\"column\"\n                        style={{\n                            background: WHITE,\n                            padding: \"20px\",\n                            height: \"100%\",\n                            marginBottom: \"30px\",\n                        }}\n                    >\n                        <div className=\"row__sb__c\">\n                            <h4>Выберите дату и количество гостей</h4>\n                            <span onClick={() => toggleDrawer()}\n                                  style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                        </div>\n                        <div className=\"column__c\">\n                            <div className=\"row__sb__c inputCheckAvailability\">\n                                <div className=\"row__sb__c checkAvailability__block\">\n                                    <div className=\"checkAvailability__block\">\n                                        <div\n                                            className=\"row__sb__c checkAvailability__block\"\n                                            onClick={() => handlerDate()}\n                                            style={{cursor: \"pointer\"}}>\n                                            <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                                                <Icon24CalendarOutline color={BLACK}/>\n                                                <span className=\"text__content__black__14\"\n                                                      style={{marginLeft: \"10px\"}}>\n                                        {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                                                    <span className=\"text__content__grey__14\"\n                                                          style={{marginLeft: \"5px\"}}>\n                                            {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                                        </span>\n                                </span>\n                                            </div>\n                                            <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                                    <Icon24ChevronDown color={GREY}/>\n                                </span>\n                                        </div>\n                                        {\n                                            openDataRang && (\n                                                <div\n                                                    className=\"click-outside-modal-handler\"\n                                                    onClick={handleClickOutsideDataRange}\n                                                    style={{\n                                                        position: 'fixed',\n                                                        top: 0,\n                                                        left: 0,\n                                                        right: 0,\n                                                        bottom: 0,\n                                                        zIndex: 1,\n                                                    }}\n                                                ></div>\n                                            )\n                                        }\n                                        <DataRange\n                                            style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                                            handle={() => (type, value) => dataSearchHandler(type, value)}\n                                            page={\"search\"}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"null\">____</div>\n                            <div className=\"row__sb__c inputCheckAvailability\">\n                                <div className=\"checkAvailability__block\">\n                                    <div className=\"row__sb__c checkAvailability__block\"\n                                         onClick={() => handlerOpenGuest()}\n                                         style={{cursor: \"pointer\"}}>\n                                        <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                                            <Icon24CalendarOutline color={BLACK}/>\n                                            <span className=\" text__content__black__14\"\n                                                  style={{marginLeft: \"10px\"}}>\n                                    {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                                </span>\n                                        </div>\n                                        <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                                <Icon24ChevronDown color={GREY}/>\n                            </span>\n                                    </div>\n                                    {\n                                        openGuest && (\n                                            <div\n                                                className=\"click-outside-modal-handler\"\n                                                onClick={handleClickOutsideGuestHotel}\n                                                style={{\n                                                    position: 'fixed',\n                                                    top: 0,\n                                                    left: 0,\n                                                    right: 0,\n                                                    bottom: 0,\n                                                    zIndex: 1,\n                                                }}\n                                            ></div>\n                                        )\n                                    }\n                                    <GuestHotelNumber\n                                        style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                                        guest={requestParameters.guest.adult}\n                                        child={requestParameters.guest.child}\n                                        handler={() => checkingHandler()}\n                                        checkOld={checkOld}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </Drawer>\n                <div className=\"row__c__fs\"\n                     style={{background: WHITE, height: \"60px\", borderRadius: \"10px\", marginBottom: \"40px\"}}>\n                    <div\n                        className=\"row__c__c\"\n                        style={{\n                            padding: \"8px\",\n                            background: ORANGE,\n                            borderRadius: \"50%\",\n                            cursor: \"pointer\",\n                            marginLeft: \"10px\",\n                            marginRight: \"15px\"\n                        }}\n                        onClick={() => handlerCheckedPlace()}\n                    >\n                        <Icon24Search width={30} height={30} color={WHITE}/>\n                    </div>\n                    <div className=\"column__fs__c\" onClick={() => toggleDrawer()} style={{width: \"200px\"}}>\n                        <span className=\"text__content__black__b__16\"\n                              style={{marginBottom: \"5px\"}}>  {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}</span>\n                        <span\n                            className=\"text__content__grey__12\"> {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import {GREY, WHITE} from \"../../theme/colors\";\n\nimport {Spinner} from \"../spinner/Spinner\";\nimport React, {useEffect, useState} from \"react\";\nimport { useSelector} from \"react-redux\";\nimport {ListNumberCard} from \"../cards/ListNumberCard\";\n\n\nexport const Availability = ({dataHotelNumber}) => {\n    const dataNumbersList = useSelector(state => state.hotels_list.dataNumbersList)\n    const [width, setWidth] = useState(window.innerWidth);\n    const loadingNumberList = useSelector(state => state.hotels_list.loadingNumberList)\n\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n\n    return (\n        <div\n            className=\"column__fs\"\n            style={{\n                background: WHITE,\n                borderRadius: \"20px\",\n                padding: \"20px 0px 20px 20px \",\n                height: \"100%\",\n                marginBottom: \"40px\"\n            }}\n        >\n            <span\n                className=\"text__content__black__b__20\"\n                style={{\n                    marginBottom: \"25px\"\n                }}\n            >\n                Наличие свободных мест\n            </span>\n            <div className=\"column number__list__center__scroll\" style={{ height: \"50vh\"}}>\n                {loadingNumberList ?\n                    <Spinner/>\n                    :\n                    dataNumbersList && dataNumbersList.length !== 0 ?\n                        dataNumbersList.map(number => (\n                            <ListNumberCard\n                                key={number.id}\n                                name={number.name}\n                                id={number.id}\n                                hotelId={number.hotelId}\n                                number={number}\n                                categoryId={number.categoryId}\n                                guestCount={number.guestCount.length}\n                                area={number.area}\n                                priceBase={number.priceBase}\n                                bedroom={number.countBedrooms}\n                                hasWiFi={number.has_wifi.value}\n                                width={width}\n                                dataHotelNumber={dataHotelNumber}\n                            />\n                        ))\n                        :\n                        <>\n                            <div className=\"row__c__c\">\n                                <h3 style={{color: GREY}}>Нет свободных номеров</h3>\n                            </div>\n\n                        </>\n                }\n            </div>\n\n        </div>\n    )\n}","import {BLACK, GREY_BLACK, WHITE} from \"../../theme/colors\";\nimport {\n    Icon28CheckCircleOutline, Icon24Cancel, Icon24BuildingOutline\n} from '@vkontakte/icons';\nimport Drawer from \"react-modern-drawer\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport React, {useEffect} from \"react\";\nimport {optionCheckBoxShortFacilities} from \"../../utils/varible\";\n\n\nexport const HotelAmenities = ({dataHotelNumber}) => {\n    const [isOpenBooking, setIsOpenBooking] = React.useState(false)\n    const [filterRules, setFilterRules] = React.useState([])\n\n    const toggleDrawerBooking = () => {\n        setIsOpenBooking((prevState) => !prevState)\n    }\n\n    useEffect(() => {\n        if (dataHotelNumber !== null) {\n            const newFilterRules = dataHotelNumber.shortFacilities.map(rule => {\n                return optionCheckBoxShortFacilities.find(item => item.value === rule);\n            }).filter(Boolean); // Фильтруем, чтобы удалить пустые значения\n            console.log(newFilterRules);\n            setFilterRules(newFilterRules);\n        }\n    }, [dataHotelNumber, optionCheckBoxShortFacilities]);\n\n    return (\n        <div>\n            <div className=\"column__fs hotel__amen\">\n            <span\n                className=\"text__content__black__b__20\"\n                style={{marginBottom: \"15px\"}}\n            >\n                Удобства и услуги гостиницы\n            </span>\n                <div className=\"hotel__amenities\">\n                    {filterRules.map(option => (\n                        <div\n                            style={{\n                                display: \"flex\",\n                                alignItems: \"center\",\n                                marginTop: 5,\n                            }}\n                            key={option.id}\n                        >\n                            <Icon28CheckCircleOutline color={BLACK} width={24} height={24}/>\n                            <span\n                                className=\"text__content__black__14\"\n                                style={{marginLeft: \"5px\", wordBreak: \"break-word\"}}\n                            >\n                            {option.name}\n                        </span>\n                        </div>\n                    ))\n                    }\n                </div>\n            </div>\n\n            <div className=\"column mobile__quick__booking\" style={{marginBottom: \"30px\"}}>\n                <Drawer\n                    open={isOpenBooking}\n                    onClose={toggleDrawerBooking}\n                    direction='bottom'\n                    style={{height: \"70vh\"}}\n                >\n                    <div className=\"column\" style={{height: \"100%\", background: WHITE, padding: \"20px\",}}>\n                        <div className=\"row__sb__c\">\n                            <h4>Удобства и услуги гостиницы</h4>\n                            <span onClick={() => toggleDrawerBooking()}\n                                  style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                        </div>\n\n                        <div className=\"column__fs__c\">\n                            {filterRules.map(option => (\n                                <div\n                                    style={{\n                                        display: \"flex\",\n                                        alignItems: \"center\",\n                                        marginTop: 5,\n                                    }}\n                                    key={option.id}\n                                >\n                                    <Icon28CheckCircleOutline color={BLACK} width={24} height={24}/>\n                                    <span\n                                        className=\"text__content__black__14\"\n                                        style={{marginLeft: \"5px\", wordBreak: \"break-word\"}}\n                                    >\n                                        {option.name}\n                                    </span>\n                                </div>\n                            ))\n                            }\n                        </div>\n                    </div>\n                </Drawer>\n                <ButtonIcon\n                    handler={() => toggleDrawerBooking()}\n                    icon={<Icon24BuildingOutline color={BLACK}/>}\n                    style={\"bookRulesBtn\"}\n                    name={\"Удобства и услуги в отеле\"}\n                    styleText={\"text__content__black__16\"}\n                />\n            </div>\n        </div>\n    )\n}","import {WHITE} from \"../../theme/colors\";\nimport {Rating} from \"../cards/Rating\";\nimport {useEffect, useState} from \"react\";\nimport RatingService from \"../../services/rating.service\";\n\nexport const GuestRating = ({hotelId}) => {\n    const [rating, setRating] = useState(0)\n    const [ratingObject, setRatingObject] = useState(null);\n    const [ratingCount, setRatingCount] = useState([]);\n\n// Функция для округления числа до одной цифры после запятой или целого числа\n    const roundToOneDecimal = (num) => Math.round(num * 10) / 10;\n\n    const calculateTotalRating = (ratings) => {\n        const totalRating = Object.values(ratings).reduce((acc, curr) => acc + curr, 0);\n        const averageRating = totalRating / Object.keys(ratings).length;\n        return roundToOneDecimal(averageRating);\n    };\n\n    useEffect(() => {\n        if (!ratingObject) {\n            RatingService.getAllRatingObject(hotelId)\n                .then(data => {\n                    if(data.data.length !== 0) {\n                        setRatingCount(data.data)\n                        const ratings = data.data.reduce((acc, item, index, array) => {\n                            acc.cleanliness = (acc.cleanliness || 0) + item.cleanliness / array.length;\n                            acc.mood = (acc.mood || 0) + item.mood / array.length;\n                            acc.timelyCheckIn = (acc.timelyCheckIn || 0) + item.timelyCheckIn / array.length;\n                            acc.priceQuality = (acc.priceQuality || 0) + item.priceQuality / array.length;\n                            acc.photoMatch = (acc.photoMatch || 0) + item.photoMatch / array.length;\n                            acc.qualityService = (acc.qualityService || 0) + item.qualityService / array.length;\n                            return acc;\n                        }, {});\n\n                        Object.keys(ratings).forEach(key => {\n                            ratings[key] = roundToOneDecimal(ratings[key]);\n                        });\n\n                        // Вызов функции для расчета общего рейтинга и сохранение результата в локальную переменную rating\n                        const totalRating = calculateTotalRating(ratings);\n                        setRating(totalRating);\n                        setRatingObject(ratings);\n                    } else {\n                        const ratings = {\n                            cleanliness: 0,\n                            mood: 0,\n                            timelyCheckIn: 0,\n                            priceQuality: 0,\n                            photoMatch: 0,\n                            qualityService: 0\n                        }\n                        setRating(0);\n                        setRatingObject(ratings);\n                    }\n\n                })\n                .catch(error => console.log(error));\n        }\n    }, []);\n\n    const nameRating = [\n        {name: \"Чистота\", value: \"cleanliness\"},\n        {name: \"Расположение\", value: \"mood\"},\n        {name: \"Своевременность заселения\", value: \"timelyCheckIn\"},\n        {name: \"Цена - качество\", value: \"priceQuality\"},\n        {name: \"Соответствие фото\", value: \"photoMatch\"},\n        {name: \"Качество обслуживания\", value: \"qualityService\"},\n    ]\n\n    return (\n        <div\n            className=\"\"\n            style={{\n                background: WHITE,\n                borderRadius: \"20px\",\n                padding: \"20px\",\n                height: \"100%\",\n                marginBottom: \"40px\"\n            }}\n        >\n            <span className=\"text__content__black__b__20\" style={{marginBottom: \"15px\"}}\n            >\n                Оценка гостей\n            </span>\n            <div className=\"row__sb__c\">\n                <div style={{marginLeft: \"25px\", marginRight: \"25px\"}}>\n                    <Rating\n                        rating={rating}\n                        countReviews={ratingCount.length}\n                    />\n                </div>\n\n                <div className=\"main__block\">\n                    {ratingObject && Object.keys(ratingObject).map((key, index) => (\n                        <div key={index} className=\"ratingItem\">\n                            <div className=\"lineRating mt__mr\">\n                                <div className=\"filledLine mt__mr\" style={{width: `${(ratingObject[key] - 5) * 20}%`}}></div>\n                                <div className=\"row__sb__c mt__mr\">\n                                    <span className=\"text__content__black__14\">{nameRating.find(item => item.value === key).name}</span>\n                                    <span className=\"text__content__black__14\">{ratingObject[key]}</span>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import {$api} from \"../http\"\n\n\nconst BookingService = {\n    getAllBooking: async () => {\n        try {\n            const response = await $api.get(`/booking`);\n            console.log(\"response bookings\", response);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch bookings from booking table');\n        }\n    },\n    getAllBookingByObject: async (path,hotelId) => {\n        try {\n            const response = await $api.get(`/${path}/bookings/by_object/${hotelId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch bookings from booking table');\n        }\n    },\n    getBooking: async (id) => {\n        try {\n            const response = await $api.get(`/booking/booking/${id}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch bookings from booking table');\n        }\n    },\n    createBooking: async (path, numberId,dataBooking, dataNumber,userId, updateUser) => {\n        try {\n            const response = await $api.post(`/${path}/booking`, {numberId, dataBooking, dataNumber,userId, updateUser});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to create booking from booking table');\n        }\n    },\n    updateBooking: async (numberId,id, data, dataNumber) => {\n        try {\n            const response = await $api.put(`/booking/booking/${id}`, {numberId, data, dataNumber});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to update bookings from booking table');\n        }\n    },\n    deleteBooking: async (id, numberId, dataNumber, userId, userUpdate) => {\n        try {\n            const response = await $api.post(`/booking/booking/delete/${id}`, {numberId, dataNumber, userId,userUpdate });\n            console.log(\"response bookings\", response);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to delete booking from booking table');\n        }\n    },\n}\n\nexport default BookingService;","import {Rating} from \"../cards/Rating\";\nimport \"./Review.css\"\nimport {GREEN, RED} from \"../../theme/colors\";\nimport {Icon24AddCircleOutline, Icon28RemoveCircleOutline} from \"@vkontakte/icons\";\nimport {useEffect, useState} from \"react\";\nimport BookingService from \"../../services/booking.service\";\nimport {parseJSONProperties} from \"../../utils/json-parse-object\";\n\nexport const Review = ({\n                           bookingId,\n                           cleanliness,\n                           date,\n                           mood,\n                           flaws,\n                           dignity,\n                           priceQuality,\n                           qualityService,\n                           timelyCheckIn,\n                           photoMatch\n                       }) => {\n    const [booking, setBooking] = useState(null)\n\n\n    useEffect(() => {\n        if (!booking) {\n            BookingService.getBooking(bookingId)\n                .then(data => setBooking(parseJSONProperties(data)))\n        }\n    }, [])\n\n\n    const ratings = {\n        cleanliness: Number(cleanliness),\n        mood: Number(mood),\n        timelyCheckIn: Number(timelyCheckIn),\n        priceQuality: Number(priceQuality),\n        photoMatch: Number(photoMatch),\n        qualityService: Number(qualityService)\n    };\n\n    const calculateTotalRating = (ratings) => {\n        const totalRating = Object.values(ratings).reduce((acc, curr) => acc + curr, 0);\n        const averageRating = totalRating / Object.keys(ratings).length;\n        const roundedRating = Math.round(averageRating * 10) / 10; // Округление до одной цифры после точки\n        return roundedRating;\n    };\n\n    const rating = calculateTotalRating(ratings);\n\n    const nameRating = [\n        {name: \"Чистота\", value: \"cleanliness\"},\n        {name: \"Расположение\", value: \"mood\"},\n        {name: \"Своевременность заселения\", value: \"timelyCheckIn\"},\n        {name: \"Цена - качество\", value: \"priceQuality\"},\n        {name: \"Соответствие фото\", value: \"photoMatch\"},\n        {name: \"Качество обслуживания\", value: \"qualityService\"},\n    ]\n\n\n    return (\n        <div className=\"column\"\n             style={{\n                 height: \"100%\",\n                 marginBottom: \"40px\"\n             }}>\n            <div className=\"row__sb__c header__review\">\n                <span className=\"text__content__white__b__15 pl\">{booking?.name}</span>\n                <span className=\"text__content__orange__b__16 ml__mr_10\">\n                        {date}\n                    </span>\n            </div>\n            <div className=\"row__fs__fs review__block\">\n                <div className=\"column__sb__c block__booking__info\">\n                    <div>\n                        <Rating\n                            rating={rating}\n                            type={\"review\"}\n                            countReviews={0}\n                        />\n                        <span className=\"text__content__white__12\"\n                              style={{\n                                  textAlign: \"center\",\n                                  display: \"flex\",\n                                  justifyContent: \"center\",\n                                  wordBreak: \"break-word\"\n                              }}>\n                            {booking?.nameNumber}\n                        </span>\n                    </div>\n\n                </div>\n                <div className=\"column__fs block__review__info\">\n                    <div className=\"main__block pr_pl_5\" style={{marginTop: 15}}>\n                        {ratings && Object.keys(ratings).map((key, index) => (\n                            <div key={index} className=\"ratingItem\">\n                                <div className=\"lineRating mt__mr\">\n                                    <div className=\"filledLine mt__mr\"\n                                         style={{width: `${(ratings[key] - 5) * 20}%`}}></div>\n                                    <div className=\"row__sb__c mt__mr\">\n                                        <span\n                                            className=\"text__content__black__14\">{nameRating.find(item => item.value === key).name}</span>\n                                        <span className=\"text__content__black__14\">{ratings[key]}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                    <div className=\"row__c__fs mt__mr__20 pr_pl_5\">\n                        <Icon24AddCircleOutline color={GREEN}/>\n                        <span className=\"text__content__black__b__14 ml__mr_10 pr_pl_5\">Достоинства</span>\n                    </div>\n                    <span className=\"text__content__black__12 ml__mr_10 pr_pl_5\" style={{wordBreak: \"break-word\"}}>\n                        {dignity}\n                    </span>\n                    <div className=\"row__c__fs mt__mr__20 pr_pl_5\">\n                        <Icon28RemoveCircleOutline width={24} height={24} color={RED}/>\n                        <span className=\"text__content__black__b__14 ml__mr_10 pr_pl_5\">Недостатки</span>\n                    </div>\n                    <span className=\"text__content__black__12 ml__mr_10 pr_pl_5\" style={{wordBreak: \"break-word\"}}>\n                        {flaws}\n                    </span>\n                </div>\n            </div>\n        </div>\n    )\n}","import {Review} from \"../review/Review\";\nimport {useEffect, useState} from \"react\";\nimport RatingService from \"../../services/rating.service\";\n\n\nexport const ReviewClients = ({hotelId}) => {\n    const [ratingObject, setRatingObject] = useState(null);\n\n\n    useEffect(() => {\n        if (!ratingObject) {\n            RatingService.getAllRatingObject(hotelId)\n                .then(data => {\n                    if (data.data.length !== 0) {\n                        setRatingObject(data.data)\n                    }\n                })\n        }\n    },[])\n\n    return (\n        <div\n            className=\"column__fs\"\n            style={{\n                borderRadius: \"20px\",\n                padding: \"20px\",\n                height: \"100%\",\n                marginBottom: \"40px\"\n            }}\n        >\n            <span\n                className=\"text__content__black__b__20\"\n                style={{marginBottom: \"15px\"}}\n            >\n                Отзывы\n            </span>\n            <div className=\"row__c__c\"\n                 style={{marginTop: \"30px\", marginBottom: \"30px\"}}\n            >\n                {\n                    ratingObject && ratingObject.length !== 0 ?\n                        ratingObject.map(review => {\n                            return (\n                                <Review\n                                    bookingId={review.bookingId}\n                                    cleanliness={review.cleanliness}\n                                    mood={review.mood}\n                                    timelyCheckIn={review.timelyCheckIn}\n                                    priceQuality={review.priceQuality}\n                                    photoMatch={review.photoMatch}\n                                    qualityService={review.qualityService}\n                                    dignity={review.dignity}\n                                    flaws={review.flaws}\n                                    date={review.date}\n                                />\n                            )\n                        })\n\n                        :\n                        <h2 className=\"text__content__grey__16\">Еще нет отзывов</h2>\n                }\n\n\n            </div>\n        </div>\n    )\n}","import {WHITE} from \"../../theme/colors\";\nimport {Map, Placemark, YMaps} from \"@pbe/react-yandex-maps\";\nimport location from \"../../assets/image/location_2.png\";\nimport React from \"react\";\n\nexport const HotelAddressOnMap = ({dataHotelNumber}) => {\n    return (\n        <div\n            className=\"column__fs\"\n            style={{\n                background: WHITE,\n                borderRadius: \"20px\",\n                padding: \"20px\",\n                height: \"100%\",\n                marginBottom: \"40px\"\n            }}\n        >\n            <span className=\"text__content__black__b__20\" style={{marginBottom: \"15px\"}}>\n                {dataHotelNumber?.address}\n            </span>\n            <div className=\"row__c__c\" style={{marginTop: \"30px\",   marginBottom: \"30px\"}}>\n                    <YMaps query=\"ru_RU\">\n                        <Map\n                            defaultState ={{center: [dataHotelNumber?.location.lat, dataHotelNumber?.location.lon], zoom: 15}}\n                            width={\"100%\"}\n                            height={\"50vh\"}\n                        >\n                            <Placemark\n                                key={dataHotelNumber?.hotelId}\n                                geometry={[dataHotelNumber?.location.lat, dataHotelNumber?.location.lon]}\n                                properties={{\n                                        hintContent: `<span class=\"text__content__black__12\"><b>${dataHotelNumber?.name}</b></span>`,\n                                    }}\n\n                                options={{\n                                    iconLayout: \"default#image\",\n                                    iconImageSize: [40, 40],\n                                    iconImageHref: location,\n                                }}\n                            />\n                        </Map>\n                    </YMaps>\n                </div>\n        </div>\n    )\n}","import {Header} from \"../components/header/Header\";\nimport {Footer} from \"../components/footer/Footer\";\nimport {HeaderHotelNumber} from \"../components/header/HeaderHotelNumber\";\nimport {QuickBooking} from \"../components/blocks/QuickBooking\";\nimport {SliderBig} from \"../components/slider/SliderBig\";\nimport {DescriptionHotel} from \"../components/blocks/DescriptionHotel\";\nimport {HotelRules} from \"../components/blocks/HotelRules\";\nimport {CheckAvailability} from \"../components/blocks/CheckAvailability\";\nimport {Availability} from \"../components/blocks/Availability\";\nimport {HotelAmenities} from \"../components/blocks/HotelAmenities\";\nimport {GuestRating} from \"../components/blocks/GuestRating\";\nimport {ReviewClients} from \"../components/blocks/ReviewClients\";\nimport {HotelAddressOnMap} from \"../components/blocks/HotelAddressOnMap\";\nimport {useDispatch} from \"react-redux\";\nimport React, {useEffect, useState} from \"react\";\nimport {initDateRangeHandler} from \"../store/HotelItem\";\nimport ObjectService from \"../services/object.service\";\nimport {parseJSONProperties} from \"../utils/json-parse-object\";\nimport PhotoObjectService from \"../services/photo-object.service\";\n\n\nexport const HotelNumber = () => {\n    const dispatch = useDispatch()\n    const hotelId = localStorage.getItem(\"hotelId\")\n    const [dataHotelNumber, setDataHotelNumber] = useState(null)\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n    const [objectPhotos, setObjectPhotos] = useState([]);\n\n    useEffect(() => {\n        if (objectPhotos.length === 0) {\n            PhotoObjectService.getAllPhotosObject(\"hotel\", hotelId)\n                .then(data => setObjectPhotos(data))\n        }\n        ObjectService.getObject(\"hotel\", hotelId)\n            .then(data => setDataHotelNumber(parseJSONProperties(data)))\n        dispatch(initDateRangeHandler())\n    }, [])\n\n\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <div className=\"hotel__number__column\">\n                    <HeaderHotelNumber\n                        dataHotelNumber={dataHotelNumber}\n                        width={width}\n                        hotelId={hotelId}\n                    />\n                    <div className=\"row__sa__fs\">\n                        <div className=\"column__fs__c laptop_768_1023__column\">\n                            {/*Быстрое бронирование*/}\n                            <QuickBooking dataHotelNumber={dataHotelNumber}/>\n                        </div>\n                        <div className=\"column__fs__c\"\n                             style={{maxWidth: \"100%\", minWidth: \"4%\",}}>\n                            <SliderBig\n                                photos={objectPhotos}\n                                height={width >= 0 && width <= 530 ? \"300px\" : \"600px\"}\n                                maxWidth={\"\"}\n                                borderRadius={\"20px\"}\n                                minWidth={\"\"}\n                                mb={\"20px\"}\n                                padding={\"20px\"}\n                            />\n                            {width >= 0 && width <= 1023 ? <QuickBooking dataHotelNumber={dataHotelNumber}/> : \"\"}\n                            <DescriptionHotel dataHotelNumber={dataHotelNumber}/>\n                            <HotelRules dataHotelNumber={dataHotelNumber}/>\n                            <CheckAvailability dataHotelNumber={dataHotelNumber}/>\n                            <Availability dataHotelNumber={dataHotelNumber}/>\n                            <HotelAmenities dataHotelNumber={dataHotelNumber}/>\n                            <GuestRating hotelId={hotelId}/>\n                            <ReviewClients hotelId={hotelId}/>\n                            <span\n                                className=\"text__content__black__b__20\"\n                                style={{marginBottom: \"30px\"}}\n                            >\n                                Местоположение\n                            </span>\n                            <HotelAddressOnMap dataHotelNumber={dataHotelNumber}/>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import * as yup from \"yup\";\n\nconst passwordRules = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{5,}$/;\n// min 5 characters, 1 upper case letter, 1 lower case letter, 1 numeric digit.\n\nexport const basicSchema = yup.object().shape({\n    email: yup.string().email(\"Введите, пожалуйста, действительный адрес электронной почты\").required(\"Обязательное поле\"),\n    password: yup\n        .string()\n        .min(5)\n        .matches(passwordRules, { message: \"Пожалуйста, создайте более надежный пароль\" })\n        .required(\"Обязательное поле\"),\n    confirmPassword: yup\n        .string()\n        .oneOf([yup.ref(\"password\"), null], \"Пароли должны совпадать\")\n        .required(\"Обязательное поле\"),\n    phone: yup\n        .string()\n        .matches(/^\\+7 \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$/, { message: \"Неверный номер телефона\" })\n        .required(\"Обязательное поле\")\n});\nexport const loginSchema = yup.object().shape({\n    email_login: yup.string().email(\"Адрес электронной почты не действителен\").required(\"Обязательное поле\"),\n    password_login: yup\n        .string()\n        .min(5)\n        .matches(passwordRules, { message: \"Неверный пароль\" })\n        .required(\"Обязательное поле\"),\n});\nexport const resetEmailSchema = yup.object().shape({\n    email_login: yup.string().email(\"Адрес электронной почты не действителен\").required(\"Обязательное поле\"),\n});\nexport const advancedSchema = yup.object().shape({\n    username: yup\n        .string()\n        .min(3, \"Username must be at least 3 characters long\")\n        .required(\"Обязательное поле\"),\n    jobType: yup\n        .string()\n        .oneOf([\"designer\", \"developer\", \"manager\", \"other\"], \"Invalid Job Type\")\n        .required(\"Обязательное поле\"),\n    acceptedTos: yup\n        .boolean()\n        .oneOf([true], \"Please accept the terms of service\"),\n});","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {finishedBookingHandler, resetPasswordHandler} from \"../../store/ClientData\";\nimport {Icon24Cancel, Icon24Refresh} from \"@vkontakte/icons\";\nimport {GREY_BLACK, ORANGE} from \"../../theme/colors\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport default function ResetPassword() {\n    const dispatch = useDispatch()\n    const resetPassword = useSelector(state => state.client__data.resetPassword)\n    const clientData = useSelector(state => state.client__data.dateClient)\n    const closeMobileCodeModal = () => {\n        dispatch(resetPasswordHandler(false))\n    }\n\n    return (\n        <div>\n            <Modal\n                open={resetPassword}\n                onClose={() => closeMobileCodeModal()}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <div className=\"column\">\n                        <div className=\"row__sb__c\">\n                            <h3>Ссылка для сброса пароля отправлена</h3>\n                            <span onClick={() => dispatch(resetPasswordHandler(false))}\n                                  style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                        </div>\n                        <div className=\"column__c\" style={{margin: \"15px\"}}>\n                            <Icon24Refresh color={ORANGE} width={50} height={50}/>\n                        </div>\n                        <div className=\"row__c__c\">\n                            <span\n                                className=\"text__content__black__14\">На Вашу почту <span className=\"text__content__orange__b__16\">{clientData.email}</span> отправлена ссылка для сброса пароля.\n                            </span>\n                        </div>\n                      <p className=\"text__content__grey__12\">После перехода по ссылке введите новый пароль и затем повторно войдите в приложение.</p>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    );\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { verifedEmailHandler} from \"../../store/ClientData\";\nimport {Icon24Cancel, Icon28CheckCircleFill} from \"@vkontakte/icons\";\nimport {GREY_BLACK} from \"../../theme/colors\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport default function VerifedEmail() {\n    const dispatch = useDispatch()\n    const verifedEmail = useSelector(state => state.client__data.verifedEmail)\n    const clientData = useSelector(state => state.client__data.dateClient)\n    const closeMobileCodeModal = () => {\n        dispatch(verifedEmailHandler(false))\n    }\n\n    return (\n        <div>\n            <Modal\n                open={verifedEmail}\n                onClose={() => closeMobileCodeModal()}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <div className=\"column\">\n                        <div className=\"row__sb__c\">\n                            <h3>Подтвердите Вашу почту</h3>\n                            <span onClick={() => dispatch(verifedEmailHandler(false))}\n                                  style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                        </div>\n                        <div className=\"column__c\" style={{margin: \"15px\"}}>\n                            <Icon28CheckCircleFill  width={50} height={50}/>\n                        </div>\n                        <div className=\"row__c__c\">\n                            <span\n                                className=\"text__content__black__14\">На Вашу почту <span className=\"text__content__orange__b__16\">{clientData.email}</span> отправлена ссылка для подтверждения email.\n                            </span>\n                        </div>\n                      <p className=\"text__content__grey__12\">После подтверждения email, войдите в прилоложение.</p>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    );\n}","import * as React from 'react';\nimport {useState} from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {resetPasswordLogInHandler} from '../../store/ClientData';\nimport {Icon24Cancel} from '@vkontakte/icons';\nimport {GREEN, GREY_BLACK} from '../../theme/colors';\nimport {useNavigate} from 'react-router-dom';\nimport * as yup from 'yup';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n};\n\nexport default function ResetPasswordLogIn() {\n    const dispatch = useDispatch();\n    const resetPasswordLogIn = useSelector((state) => state.client__data.resetPasswordLogIn);\n    const navigate = useNavigate();\n    const [errorLogIn, setErrorLogIn] = useState(null);\n    const [errorEmail, setErrorEmail] = useState(null);\n    const [sendEmail, setSendEmail] = useState(false);\n\n    const resetEmailSchema = yup.object().shape({\n        email_login: yup.string().email('Адрес электронной почты не действителен').required('Обязательное поле'),\n    });\n\n    const closeMobileCodeModal = () => {\n        dispatch(resetPasswordLogInHandler(false));\n    };\n\n    return (\n        <div>\n            <Modal\n                open={resetPasswordLogIn}\n                onClose={() => dispatch(resetPasswordLogInHandler(false))}\n                aria-labelledby='modal-modal-title'\n                aria-describedby='modal-modal-description'\n            >\n                <Box sx={style}>\n                    <Formik\n                        initialValues={{email_login: ''}}\n                        validationSchema={resetEmailSchema}\n                        onSubmit={() => console.log()}\n                    >\n                        {({isSubmitting}) => (\n                            <Form className=\"loginResetEmail\" autoComplete='off'>\n                                <div className='column'>\n                                    <div className='row__sb__c'>\n                                        <h3>Восстановить доступ</h3>\n                                        <span\n                                            onClick={() => dispatch(resetPasswordLogInHandler(false))}\n                                            style={{cursor: 'pointer'}}\n                                        >\n                                            <Icon24Cancel color={GREY_BLACK}/>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div\n                                    style={{\n                                        display: 'flex',\n                                        flexDirection: 'column',\n                                        justifyContent: 'flex-start',\n                                        alignItems: 'center',\n                                    }}\n                                >\n                                    <Field\n                                        id='email_reset_login'\n                                        type='email'\n                                        placeholder='Введите Email'\n                                        className='login__input'\n                                        name='email_login'\n                                    />\n                                    <ErrorMessage name='email_login' component='p' className='error'/>\n\n                                    <button\n                                        type='submit'\n                                        className='login__button'\n                                        disabled={isSubmitting}\n                                    >\n                                        Восстановить\n                                    </button>\n                                    {errorLogIn ? <p className='error'>Пользователь не найден!</p> : ''}\n                                    {errorEmail ? <p className='error'>Такой Email не зарегистрирован!</p> : ''}\n                                    {sendEmail ?\n                                        <p className='error' style={{color: GREEN}}>На Вашу почту отправлено\n                                            сообщение!</p> : ''}\n                                </div>\n                            </Form>\n                        )}\n                    </Formik>\n\n                </Box>\n            </Modal>\n        </div>\n    );\n}\n","import {Link, useNavigate} from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\";\nimport {resetPasswordLogInHandler} from \"../../store/ClientData\";\nimport React, {useState} from \"react\";\nimport {useFormik} from \"formik\";\nimport {loginSchema} from \"../../validation/password\";\nimport {handlerLoadingStartPage} from \"../../store/Main\";\nimport ResetPassword from \"../modals/ResetPassword\";\nimport VerifedEmail from \"../modals/VerifedEmail\";\nimport ResetPasswordLogIn from \"../modals/ResetPasswordLogIn\";\nimport {loginFailure, loginSuccess} from \"../../store/authSlice\";\nimport AuthService from \"../../services/auth.service\";\n\n\nexport const LoginForm = () => {\n    const dispatch = useDispatch()\n    const navigate = useNavigate();\n\n    const [errorLogIn, setErrorLogIn] = useState(null)\n    const [errorVetific, setErrorVetific] = useState(null)\n\n    const onSubmit = async (values, actions) => {\n        try {\n            const token = await AuthService.login(values.email_login, values.password_login);\n            dispatch(loginSuccess(token.data));\n\n            //Обновление страницы\n            dispatch(handlerLoadingStartPage(true))\n            setTimeout(() => {\n                dispatch(handlerLoadingStartPage(false))\n            }, 1500)\n            //Переход на страницу\n            navigate(\"/\")\n            setErrorLogIn(false)\n            setErrorVetific(false)\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n        } catch (error) {\n            console.log(\"user is not logged in\");\n            setErrorVetific(true)\n            setErrorLogIn(true)\n            dispatch(loginFailure(error.message));\n        }\n    };\n\n    const {\n        values,\n        errors,\n        touched,\n        isSubmitting,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n    } = useFormik({\n        initialValues: {\n            email_login: \"\",\n            password_login: \"\",\n        },\n        validationSchema: loginSchema,\n        onSubmit,\n    });\n\n    return (\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                height: \"100vh\",\n            }}>\n            <form\n                onSubmit={handleSubmit}\n                className=\"login\"\n                autoComplete=\"off\"\n            >\n                <h2 className=\"text__content__black__b__26\" style={{textAlign: \"center\"}}>Войти</h2>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                }}>\n                    <input\n                        value={values.email_login}\n                        onChange={handleChange}\n                        id=\"email_login\"\n                        type=\"email\"\n                        placeholder=\"Введите Email\"\n                        onBlur={handleBlur}\n                        className={errors.email_login && touched.email_login ? \"input-error login__input\" : \"login__input\"}\n                    />\n                    {errors.email_login && touched.email_login && <p className=\"error\">{errors.email_login}</p>}\n                    <input\n                        id=\"password_login\"\n                        type=\"password\"\n                        placeholder=\"Введите пароль\"\n                        value={values.password_login}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={errors.password_login && touched.password_login ? \"input-error login__input\" : \"login__input\"}\n                    />\n                    {errors.password_login && touched.password_login && (\n                        <p className=\"error\">{errors.password_login}</p>\n                    )}\n                    <button\n                        type=\"submit\"\n                        className=\"login__button\"\n                        disabled={isSubmitting}\n                    >\n                        Войти\n                    </button>\n                    {errorLogIn ? <p className=\"error\">Пользователь не найден!</p> : \"\"}\n                    {errorVetific ? <p className=\"error\">Ваш Email не подтвержден!</p> : \"\"}\n                </div>\n                <div\n                    className=\"row__sb__c\"\n                    style={{\n                        marginTop: \"20px\",\n                        marginBottom: \"20px\",\n                    }}\n                >\n                    <Link\n                        to={\"/api/registration\"}\n                        className=\"text__content__orange__12\"\n                        style={{\n                            cursor: \"pointer\",\n                            fontWeight: \"bold\"\n                        }}\n                    >\n                        Регистрация\n                    </Link>\n                    <div\n                        onClick={() => dispatch(resetPasswordLogInHandler(true))}\n                        className=\"text__content__grey__12\"\n                        style={{\n                            cursor: \"pointer\"\n                        }}\n                    >\n                        Забыли пароль?\n                    </div>\n                </div>\n\n                {/*<div className=\"column\">*/}\n                {/*    <span*/}\n                {/*        className=\"text__content__black__b__16\"*/}\n                {/*        style={{*/}\n                {/*            marginBottom: \"5px\",*/}\n                {/*            textAlign: \"center\"*/}\n                {/*        }}*/}\n                {/*    >*/}\n                {/*        Войти с помощью*/}\n                {/*    </span>*/}\n                {/*    <div className=\"row__c__c\">*/}\n                {/*        <img src={yandex}*/}\n                {/*             style={{padding: \"5px\", cursor: \"pointer\"}}*/}\n                {/*             width={20}*/}\n                {/*             height={20}*/}\n                {/*             alt=\"yandex\"*/}\n                {/*        />*/}\n                {/*        <img src={google}*/}\n                {/*             style={{padding: \"5px\", cursor: \"pointer\"}}*/}\n                {/*             width={24}*/}\n                {/*             height={24}*/}\n                {/*             alt=\"google\"*/}\n                {/*        />*/}\n                {/*        <img src={vk}*/}\n                {/*             style={{padding: \"5px\", cursor: \"pointer\"}}*/}\n                {/*             width={24}*/}\n                {/*             height={24}*/}\n                {/*             alt=\"vk\"*/}\n                {/*        />*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n                <ResetPassword/>\n                <VerifedEmail/>\n                <ResetPasswordLogIn/>\n            </form>\n        </div>\n    )\n}","import {Header} from \"../components/header/Header\";\nimport {Footer} from \"../components/footer/Footer\";\nimport {LoginForm} from \"../components/forms/LoginForm\";\nimport React from \"react\";\n\nexport const Login = () => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <LoginForm/>\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import {Link} from \"react-router-dom\";\nimport React, {useState} from \"react\";\nimport {useFormik} from \"formik\";\nimport InputMask from \"react-input-mask\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useNavigate} from \"react-router-dom\"\nimport {RED} from \"../../theme/colors\";\nimport {basicSchema} from \"../../validation/password\";\nimport AuthService from \"../../services/auth.service\";\nimport {getCurrentDate} from \"../../utils/createDataNow\";\nimport {v4 as uuidv4} from 'uuid';\nimport {verifedEmailHandler} from \"../../store/ClientData\";\n\n\nexport const RegistrationForm = () => {\n    const phoneUser = useSelector(state => state.client__data.phoneUser)\n    const [checkedPersonData, setCheckedPersonData] = useState(false)\n    const [emailUsed, setEmailUsed] = useState(null)\n    const navigate = useNavigate();\n    const dispatch = useDispatch()\n\n\n    const onSubmit = async (values, actions) => {\n        //Добавление в базу данных нового пользователя\n        const newUser = {\n            id:uuidv4(),\n            name: \"\",\n            lastName: \"\",\n            password: values.password,\n            city: \"\",\n            phone: values.phone,\n            note: \"\",\n            type: \"Пользователь\",\n            email: values.email,\n            isActivated: false,\n            isConfirmPhone: false,\n            codeConfirmForPhone: 0,\n            twoStepVerification: false,\n            twoStepVerificationType: \"\",\n            activationLink: \"\",\n            date: getCurrentDate(),\n            bookingList: JSON.stringify([])\n        }\n        try {\n            await AuthService.registration(newUser);\n            //setEmailUsed(true)\n            dispatch(verifedEmailHandler(true))\n            navigate(\"/api/login\")\n            console.log(\"Регистрация прошла успешно!\")\n            await new Promise((resolve) => setTimeout(resolve, 1000));\n        } catch (error) {\n            console.log(\"Ошибка регистрации!\")\n        }\n    };\n\n    const {\n        values,\n        errors,\n        touched,\n        isSubmitting,\n        handleBlur,\n        handleChange,\n        handleSubmit,\n    } = useFormik({\n        initialValues: {\n            email: \"\",\n            password: \"\",\n            phone: phoneUser,\n            confirmPassword: \"\",\n        },\n        validationSchema: basicSchema,\n        onSubmit,\n    });\n\n\n    return (\n        <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100vh\"\n        }}>\n            <form\n                onSubmit={handleSubmit}\n                className=\"registration\"\n                autoComplete=\"off\"\n            >\n                <h2 className=\"text__content__black__b__26\" style={{textAlign: \"center\"}}>Регистрация</h2>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                }}>\n                    <input\n                        value={values.email}\n                        onChange={handleChange}\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"Введите Email\"\n                        onBlur={handleBlur}\n                        className={errors.email && touched.email ? \"input-error registration__input\" : \"registration__input\"}\n                    />\n                    {errors.email && touched.email && <p className=\"error\">{errors.email}</p>}\n                    <input\n                        id=\"password\"\n                        type=\"password\"\n                        placeholder=\"Введите пароль\"\n                        value={values.password}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={errors.password && touched.password ? \"input-error registration__input\" : \"registration__input\"}\n                    />\n                    {errors.password && touched.password && (\n                        <p className=\"error\">{errors.password}</p>\n                    )}\n                    <input\n                        id=\"confirmPassword\"\n                        type=\"password\"\n                        placeholder=\"Подтвердите пароль\"\n                        value={values.confirmPassword}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        className={\n                            errors.confirmPassword && touched.confirmPassword ? \"input-error registration__input\" : \"registration__input\"\n                        }\n                    />\n                    {errors.confirmPassword && touched.confirmPassword && (\n                        <p className=\"error\">{errors.confirmPassword}</p>\n                    )}\n                    <InputMask\n                        id=\"phone\"\n                        value={values.phone}\n                        onChange={(e) => handleChange(e)}\n                        onBlur={handleBlur}\n                        type=\"tel\"\n                        mask=\"+7 (999) 999-99-99\"\n                        placeholder=\"+7 (999) 999-99-99\"\n                        className={\n                            errors.phone && touched.phone ? \"input-error registration__input\" : \"registration__input\"\n                        }\n                    />\n                    {errors.phone && touched.phone && (\n                        <p className=\"error\">{errors.phone}</p>\n                    )}\n                    {emailUsed ? <p className=\"error\">Ваш Email уже зарегистрирован!</p> : \"\"}\n                </div>\n                <div\n                    className=\"row__c__fs\"\n                    style={{\n                        marginTop: \"10px\",\n                        marginBottom: \"10px\",\n                    }}\n                >\n                    <input\n                        type=\"checkbox\"\n                        name=\"acceptedTos\"\n                        checked={checkedPersonData}\n                        onChange={() => setCheckedPersonData(!checkedPersonData)}\n                        style={{\n                            cursor: \"pointer\",\n                            marginRight: \"5px\"\n                        }}\n                    />\n                    <span\n                        className=\"text__content__grey__12\"\n                        style={{\n                            marginTop: \"5px\",\n                            marginBottom: \"5px\",\n                            marginLeft: \"5px\"\n                        }}>\n                           Я согласен на обработку персональных <br/>\n                           данных и принимаю условия\n                           пользовательского <br/>соглашения\n                       </span>\n                </div>\n                {!checkedPersonData &&\n                    <div className=\"error\">\n                        <span style={{color: RED, marginRight: \"5px\"}}>*</span>\n                        <span className=\"text__content__grey__12\">\n                            {\"Подтвердите пользовательское соглашение\"}\n                        </span>\n                    </div>}\n                <div className=\"row__c__c\">\n                    {checkedPersonData ?\n                        <button\n                            type=\"submit\"\n                            className=\"login__button\"\n                            disabled={isSubmitting}\n                        >\n                            Зарегистрироваться\n                        </button> :\n                        <button\n                            className=\"login__button\"\n                            disabled={true}\n                        >\n                            Зарегистрироваться\n                        </button>\n                    }\n\n                </div>\n                <div className=\"row__sa__c\" style={{marginTop: \"10px\", marginBottom: \"10px\",}}>\n                            <span className=\"text__content__grey__12\">\n                                Есть аккаунт?\n                            </span>\n                    <Link\n                        to={\"/api/login\"}\n                        className=\"text__content__orange__12\"\n                        style={{\n                            cursor: \"pointer\",\n                            fontWeight: \"bold\"\n                        }}\n                    >\n                        Вход\n                    </Link>\n                </div>\n            </form>\n        </div>\n    )\n}","import {Header} from \"../components/header/Header\";\nimport {Footer} from \"../components/footer/Footer\";\nimport {RegistrationForm} from \"../components/forms/RegistrationForm\";\nimport React from \"react\";\n\n\nexport const Registration = () => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <RegistrationForm/>\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport \"./CustomSelect.css\"\nimport {Icon24ChevronDown} from \"@vkontakte/icons\";\nimport {GREY} from \"../../theme/colors\";\n\nconst CustomSelect = (\n    {\n        options, placeholder, selectedOption, type, setFilterObject, setOptionCity, mb, loadDataObject, setFilterData,\n        loadData, typeData, setTypeObj, setSelectedOption, width, chooseStatus, binding,\n    }) => {\n    const [isOpen, setIsOpen] = useState(false);\n\n\n    const toggling = () => setIsOpen(!isOpen);\n\n    const onOptionClicked = value => () => {\n        setSelectedOption(value.name);\n        if (type === \"typeObj\") {\n            setTypeObj(value.value)\n        }\n        if (type === \"clear\") {\n            setTypeObj(\"\")\n            setFilterData([])\n            setOptionCity([{name: \"Список пуст\"}])\n            setFilterObject(\"\")\n        }\n        if (typeData === \"data\") {\n            loadData(value.value)\n        }\n        if (typeData === \"dataObject\") {\n            loadDataObject(value.value)\n        }\n        if (typeData === \"status\") {\n            chooseStatus(value)\n        }\n\n\n        setIsOpen(false);\n    }\n    useEffect(() => {\n        if (typeData === \"binding\") {\n            binding(true)\n        }\n    }, [setIsOpen])\n    return (\n        <div className=\"custom-select-wrapper \" style={{marginBottom: mb}}>\n            <div className=\"selectCustom text__content__black__12\" style={{width: width}} onClick={toggling}>\n                {selectedOption || placeholder}\n                <span className={isOpen ? 'iconDate' : \"iconBtn\"}>\n                    <Icon24ChevronDown color={GREY}/>\n                </span>\n            </div>\n            {isOpen && (\n                <div className=\"custom-select-list text__content__black__12\">\n                    {options.map((option, index) =>\n                        <div onClick={onOptionClicked(option)} key={index} className=\"custom-select-item\">\n                            {option.name}\n                        </div>\n                    )}\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default CustomSelect;\n\n\n","import {$api} from \"../http\"\n\nconst UsersService = {\n    // Получить данные всех пользователей из таблицы user_yooking\n    getAllUsersYooking: async () => {\n        try {\n            const response = await $api.get('/management/user/yooking');\n            console.log(\"response\",response);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch users from user_yooking table');\n        }\n    },\n\n    // Получить данные одного пользователя из таблицы user_extranet\n    getUserYooking: async (path, userId) => {\n        try {\n            const response = await $api.get(`/${path}/user/get_by_id/${userId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to fetch users from user_extranet table');\n        }\n    },\n    // Обновить данные пользователя из таблицы user_yooking по ID\n    updateUserYooking: async (path, userId, dataUserYooking) => {\n        try {\n            console.log(\"SERVICE\",dataUserYooking);\n            const response = await $api.put(`/${path}/user/yooking/${userId}`, {dataUserYooking});\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to update user in user_yooking table');\n        }\n    },\n\n    // Обновить данные пользователя из таблицы user_extranet по ID\n    generateCode: async (path,userId) => {\n        try {\n            const response = await $api.put(`/${path}/user/yooking/code/${userId}`);\n            return response.data;\n        } catch (error) {\n            throw new Error('Failed to update code in user_extranet table');\n        }\n    },\n};\n\nexport default  UsersService;","export function generateNumericId() {\n    // Генерируем случайное шестизначное число\n    const numericId = Math.floor(Math.random() * 900000) + 100000;\n    return numericId.toString();\n}\n\nexport function checkDuplicateId(idList, newId) {\n    // Проверяем, есть ли уже такой ID в списке\n    if (idList.includes(newId)) {\n        return generateNumericId(); // ID уже существует\n    } else {\n        return newId; // ID уникален\n    }\n}\n\n\n\n","import * as yup from \"yup\";\n\nexport const validateName = async (name) => {\n    const schema = yup.string().required(\"Поле 'Имя' обязательно для заполнения.\");\n    return schema.validate(name);\n};\n\nexport const validateLastName = async (lastName) => {\n    const schema = yup.string().required(\"Поле 'Фамилия' обязательно для заполнения.\");\n    return schema.validate(lastName);\n};\n// Email для гостей\nexport const validateEmail = email => {\n    const schema = yup.string().required().email();\n    return schema.validate(email);\n}\n// Для номера телефона\nexport const validatePhoneNumber = (phone) => {\n    const schema = yup.string()\n        .matches(/^\\+7 \\(\\d{3}\\) \\d{3}-\\d{2}-\\d{2}$/, { message: \"Неверный номер телефона\" })\n        .required(\"Обязательное поле\")\n    return schema.validate(phone);\n};\n\nexport const validateObject = object => {\n    const schema = yup.object().shape({}).notOneOf([{}], \"Объект не должен быть пустым.\").required();\n    return schema.validate(object);\n}\n// Время отъезда и заезда\nexport const validateCheckInCheckOut = area => {\n    const schema = yup.string().required();\n    return schema.validate(area);\n}","import {GREEN, GREY, RED, WHITE} from \"../../theme/colors\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {wordDeclension, wordDeclensionNight} from \"../../utils/word-declensions\";\nimport InputMask from \"react-input-mask\";\nimport {Icon24BriefcaseOutline, Icon24ChevronDown} from \"@vkontakte/icons\";\nimport {DataRange} from \"../calendar/DataRange\";\nimport {GuestHotel} from \"../search/GuestHotel\";\nimport {handlerDataRange, showCalendarHandler, showGuestHandler} from \"../../store/Search\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport {optionPayBooking, optionPrepayment} from \"../../utils/varible\";\nimport BookingService from \"../../services/booking.service\";\nimport {getCurrentDate} from \"../../utils/createDataNow\";\nimport {formatMoney} from \"../../utils/formating-money\";\nimport CustomSelect from \"../custom-select/CustomSelect\";\nimport {ListNumberCard} from \"../cards/ListNumberCard\";\nimport UsersService from \"../../services/users.service\";\nimport {setDataBookingHandler} from \"../../store/dataBooking\";\nimport {checkDuplicateId, generateNumericId} from \"../../utils/generatorId\";\nimport {parseJSONProperties, parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\nimport {\n    validateLastName,\n    validateName,\n    validateObject\n} from \"../../validation/validation-edit-booking\";\n\nexport const ContactData = () => {\n    const dispatch = useDispatch()\n    const number = useSelector(state => state.hotels_list.dataNumberBooking)\n    const dataObjectBooking = useSelector(state => state.hotels_list.dataObjectBooking)\n    const dataCategoryBooking = useSelector(state => state.hotels_list.dataCategoryBooking)\n    const userId = useSelector((state) => state.auth.userId);\n    const [user, setUser] = useState(null)\n    const requestParameters = useSelector(state => state.search.cityOrHotel)\n    const showCalendar = useSelector(state => state.search.showCalendar)\n    const showGuest = useSelector(state => state.search.showGuest)\n    const [openDataRang, setOpenDataRang] = useState(false)\n    const [openGuest, setGuest] = useState(false)\n    const [checkOld, setCheckOld] = useState(false)\n\n    const [name, setName] = useState(\"\")\n    const [lastName, setLastName] = useState(\"\")\n    const [phone, setPhone] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [prepayment, setPrepayment] = useState(0)\n    const [typePayment, setTypePayment] = useState({name: \"Выберите\", value: \"no choose\"})\n    const [bookingAllId, setBookingAllId] = useState(null)\n    const [bookingAll, setBookingAll] = useState([])\n\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n\n    const [msg, setMsg] = useState(\"\");\n    const [isMsg, setIsMsg] = useState(false);\n    const [dateError, setDateError] = useState(false)\n    const [successData, setSuccessData] = useState(\"\")\n\n    useEffect(() => {\n        if (!user) {\n            UsersService.getUserYooking(\"person\", userId)\n                .then(user => {\n                    setUser(parseJSONProperties(user))\n                    setName(user.name)\n                    setLastName(user.lastName)\n                    setPhone(user.phone)\n                    setEmail(user.email)\n                })\n        }\n        if (bookingAllId === null && bookingAll.length === 0) {\n            BookingService.getAllBookingByObject(\"person\", number.hotelId)\n                .then(data => {\n                    const parsedData = parseJSONPropertiesInArray(data);\n                    console.log(\"parsedData\", parsedData);\n                    setBookingAll(parsedData)\n                    const newArrayId = parsedData.map(object => object.id)\n                    setBookingAllId(newArrayId)\n                })\n        }\n    }, [])\n\n\n\n    const msgSave = (msg) => {\n        setMsg(msg)\n        setIsMsg(true)\n        setTimeout(() => {\n            setMsg(\"\")\n            setIsMsg(false)\n        }, 5000)\n    }\n\n    const errorChecked = (field, hasError) => {\n        setError((errors) => ({\n            ...errors,\n            [field]: hasError\n        }));\n    }\n\n\n    const [error, setError] = useState(\n        {\n            name: false,\n            lastName: false,\n            typePayment: false\n        }\n    )\n\n    const handlerDate = () => {\n        setOpenDataRang(!openDataRang)\n        dispatch(showCalendarHandler(!showCalendar))\n    }\n\n    const handlerOpenGuest = () => {\n        setGuest(!openGuest)\n        dispatch(showGuestHandler(!showGuest))\n    }\n    const checkingHandler = () => {\n        if (requestParameters.guest.child.map(child => child.old === \"Возраст\")[0]) {\n            setCheckOld(true)\n        } else {\n            setGuest(!openGuest)\n            dispatch(showGuestHandler(!showGuest))\n            setCheckOld(false)\n        }\n    }\n\n    const dataSearchHandler = (type, value) => {\n        if (type === \"DataRange\") {\n            dispatch(handlerDataRange(value))\n            handlerDate()\n        }\n    }\n\n    function isDateAvailable(bookingAll, categoryId, dataBooking, numberId, bookingList) {\n        const filterBooking = bookingAll.filter(item => item.numberId === numberId);\n        const isDateOccupied = filterBooking.some(booking => {\n            const checkInDate = new Date(booking.checkIn);\n            const checkOutDate = new Date(booking.checkOut);\n            const currentCheckInDate = new Date(dataBooking.checkIn);\n            const currentCheckOutDate = new Date(dataBooking.checkOut);\n\n            // Проверяем, если хотя бы одна дата в диапазоне занята\n            return (\n                (currentCheckInDate >= checkInDate && currentCheckInDate <= checkOutDate) ||\n                (currentCheckOutDate >= checkInDate && currentCheckOutDate <= checkOutDate) ||\n                (currentCheckInDate <= checkInDate && currentCheckOutDate >= checkOutDate)\n            );\n        });\n\n        if (isDateOccupied) {\n            console.log(\"Дата или диапазон дат уже заняты\");\n            return false; // Дата или диапазон дат заняты\n        } else {\n            console.log(\"Дата или диапазон дат свободны\");\n            return true; // Дата или диапазон дат свободны\n        }\n    }\n\n    useEffect(() => {\n        const validateAllData = async () => {\n            await validateName(name)\n                .then(() => {\n                    errorChecked('name', false)\n                })\n                .catch(error => {\n                    errorChecked('name', true)\n                });\n            await validateLastName(lastName)\n                .then(() => {\n                    errorChecked('lastName', false)\n                })\n                .catch(error => {\n                    errorChecked('lastName', true)\n                });\n\n            await validateObject(typePayment)\n                .then(() => {\n                    errorChecked('typePayment', false)\n                })\n                .catch(error => {\n                    errorChecked('typePayment', true)\n                });\n        }\n\n\n        const isCheckedDate = isDateAvailable(bookingAll, number.categoryId, {\n            checkIn: requestParameters.checkIn,\n            checkOut: requestParameters.checkOut\n        }, number.id, number.bookingList)\n\n        if (isCheckedDate) {\n            setDateError(false)\n        } else {\n            setDateError(true)\n        }\n\n        validateAllData();\n    },[typePayment, requestParameters])\n\n\n\n\n    const bookingHandler = async () => {\n        const errorValues = Object.values(error);\n        const bookingId = checkDuplicateId(bookingAllId, generateNumericId());\n\n\n        if (!dateError) {\n            if (!errorValues.includes(true)) {\n                const data = {\n                    id: bookingId,\n                    hotelId: number.hotelId,\n                    numberId: number.id,\n                    categoryId: number.categoryId,\n                    name: name,\n                    lastName: lastName,\n                    city: number.city,\n                    phone: phone,\n                    note: \"\",\n                    status: JSON.stringify({name: \"Новое\", value: \"#01B0F1\"}),\n                    nameObject: dataObjectBooking?.name,\n                    nameNumber: number?.name,\n                    categoryName: dataCategoryBooking?.type,\n                    checkInTime: dataObjectBooking.checkIn,\n                    checkOutTime: dataObjectBooking.checkOut,\n                    checkIn: requestParameters.checkIn,\n                    checkOut: requestParameters.checkOut,\n                    dataRange: JSON.stringify(requestParameters.dataRange),\n                    guestCount: requestParameters.guest.adult + requestParameters.guest.child.length,\n                    guest: JSON.stringify(requestParameters.guest),\n                    amount: formatMoney(requestParameters.dataRange.countNight * number?.priceBase),\n                    priceNumber: number?.priceBase,\n                    typePayment: JSON.stringify(typePayment),\n                    prepayment: prepayment,\n                    email: email,\n                    date: getCurrentDate(),\n                }\n\n                const updateNumber = {\n                    ...number,\n                    roomAmenitiesOption: JSON.stringify(number.roomAmenitiesOption),\n                    has_wifi: JSON.stringify(number.has_wifi),\n                    guestCount: JSON.stringify(number.guestCount),\n                    bookingList: JSON.stringify([\n                        ...(Array.isArray(number.bookingList) ? number.bookingList : []),\n                        {\n                            id: bookingId,\n                            checkIn: requestParameters.checkIn,\n                            checkOut: requestParameters.checkOut,\n                            checkInTime: dataObjectBooking.checkIn,\n                            checkOutTime: dataObjectBooking.checkOut,\n                        }\n                    ])\n                };\n                const updateUser = {\n                    ...user,\n                    bookingList: JSON.stringify([\n                        ...(Array.isArray(user.bookingList) ? user.bookingList : []),\n                        {\n                            id: bookingId,\n                            numberId: number.id,\n                            checkIn: requestParameters.checkIn,\n                            checkOut: requestParameters.checkOut,\n                            checkInTime: dataObjectBooking.checkIn,\n                            checkOutTime: dataObjectBooking.checkOut,\n                        }\n                    ])\n                };\n                setSuccessData(\"Данные сохранены!\")\n\n                setTimeout(() => {\n                    setSuccessData(\"\")\n                }, 2000)\n\n                dispatch(setDataBookingHandler({numberId: number.id, dataBooking: data, updateNumber: updateNumber,userId: user.id, updateUser: updateUser }))\n\n            } else {\n                console.log(\"error\", error);\n                msgSave(\"Присутствуют ошибки, данные не сохранены.\")\n            }\n        } else {\n            setDateError(true)\n            setTimeout(() => {\n                setDateError(false)\n            }, 3000)\n\n        }\n\n        // //Открытие модульного окна об бронировании\n        // dispatch(finishedBookingHandler(true))\n    }\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n\n\n    return (\n        <div className=\"column__c__c\" style={{marginLeft: \"3%\", marginRight: \"3%\"}}>\n\n            <div className=\"row__sa__fs contact__block\" style={{flexWrap: \"wrap\"}}>\n                <div className=\"column__c detail__booking \" style={{marginTop: 30}}>\n                    <ListNumberCard\n                        key={number.id}\n                        name={number.name}\n                        id={number.id}\n                        hotelId={number.hotelId}\n                        number={number}\n                        categoryId={number.categoryId}\n                        guestCount={number.guestCount.length}\n                        area={number.area}\n                        priceBase={number.priceBase}\n                        bedroom={number.countBedrooms}\n                        hasWiFi={number.has_wifi.value}\n                        width={width}\n                        type={\"booking\"}\n                    />\n\n                </div>\n\n                <div className=\"column__fs\" style={{margin: \"15px\"}}>\n                    <div className=\"row__c__fs\" style={{marginLeft: \"10px\"}}>\n                        <h3>Ваши контактные данные</h3>\n                    </div>\n                    <div className=\"column\">\n                                    <span className=\"text__content__grey__12 mt__mr\">\n                                    <span style={{color: RED}}>*</span> Имя</span>\n                        <input\n                            type=\"text\"\n                            required={true}\n                            placeholder=\"Ваше имя\"\n                            className=\"inputEditUser\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                        {error.name ? <p className=\"error\">Неверно заполнено имя!</p> : \"\"}\n\n                        <span className=\"text__content__grey__12 mt__mr\"><span\n                            style={{color: RED}}>*</span> Фамилия</span>\n                        <input\n                            type=\"text\"\n                            required={true}\n                            placeholder=\"Ваша фамилия\"\n                            className=\"inputEditUser\"\n                            value={lastName}\n                            onChange={(e) => setLastName(e.target.value)}\n                        />\n                        {error.lastName ? <p className=\"error\">Неверно заполнена фамилия!</p> : \"\"}\n\n                        <span className=\"text__content__grey__12 mt__mr\"><span\n                            style={{color: RED}}>*</span> Номер телефона</span>\n                        <InputMask\n                            value={phone}\n                            onChange={(e) => setPhone(e.target.value)}\n                            type=\"tel\"\n                            mask=\"+79999999999\"\n                            placeholder=\"+79999999999\"\n                            className={\"inputEditUser\"}\n                            disabled\n                        />\n                        {error.phone ? <p className=\"error\">Неверно заполнен номер!</p> : \"\"}\n\n                        <span className=\"text__content__grey__12 mt__mr\">\n                                        <span style={{color: RED}}>*</span> Email</span>\n                        <input\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                            type=\"email\"\n                            placeholder=\"Введите Email\"\n                            className={\"inputEditUser\"}\n                            disabled\n                        />\n                        {error.email ? <p className=\"error\">Неверный email!</p> : \"\"}\n                        <span className=\"text__content__grey__12 mt__mr \">\n                                <span style={{color: RED}}>*</span>Оплата\n                                    </span>\n                        <CustomSelect\n                            options={optionPayBooking}\n                            selectedOption={typePayment.name}\n                            setSelectedOption={(value) => value}\n                            chooseStatus={(value) => setTypePayment(value)}\n                            typeData={\"status\"}\n\n                        />\n                        {dataObjectBooking.political_cancel.some(item => item === 'withoutPrepayment') ?\n                            \"\"\n                            :\n                            <>\n                            <span\n                                className=\"text__content__grey__12 mt__mb__5\"\n                                style={{marginBottom: 10, marginTop: 10}}>\n                                    <span style={{color: RED}}>*</span>\n                                        Предоплата\n                                    </span>\n                                <CustomSelect\n                                    options={optionPrepayment}\n                                    selectedOption={prepayment.name}\n                                    setSelectedOption={(value) => value}\n                                    chooseStatus={(value) => setPrepayment(value)}\n                                    typeData={\"status\"}\n                                />\n                            </>\n                        }\n\n                    </div>\n                </div>\n                <div className=\"column__fs\" style={{margin: \"15px\"}}>\n                    <div className=\"row__c__fs\">\n                        <h3>Выберите дату</h3>\n                    </div>\n                    <div className=\"row__sb__c\">\n                        <div className=\"column__fs__c\">\n                    <span className=\"text__content__grey__12 mt__mr\"\n                          style={{marginBottom: \"5px\"}}>Даты заезда и отъезда</span>\n                            <div className=\"row__sb__c inputQuickBookingPeople\">\n                                <div className=\"quick__booking__block\">\n                                    <div\n                                        className=\"row__sb__c quick__booking__block\"\n                                        onClick={() => handlerDate()}\n                                        style={{cursor: \"pointer\"}}>\n                                <span\n                                    className=\"text__content__black__14\"\n                                    style={{marginLeft: \"10px\"}}>\n                                {requestParameters.dataRange.checkIn} - {requestParameters.dataRange.checkOut} {requestParameters.dataRange.month}\n                                    <span\n                                        className=\"text__content__grey__14\"\n                                        style={{marginLeft: \"5px\"}}>\n                                {requestParameters.dataRange.countNight} {wordDeclensionNight(requestParameters.dataRange.countNight)}\n                            </span>\n                        </span>\n                                        <span className={openDataRang ? 'iconDate' : \"iconBtn\"}>\n                        <Icon24ChevronDown color={GREY}/>\n                    </span>\n                                    </div>\n                                    <DataRange\n                                        style={showCalendar ? \"modal__list__search\" : \"modal__none\"}\n                                        handle={(type, value) => dataSearchHandler(type, value)}\n                                        page={\"search\"}\n                                    />\n                                </div>\n                            </div>\n                            <span className=\"text__content__grey__12 mt__mr\"\n                                  style={{marginBottom: \"5px\"}}>Количество гостей</span>\n                            <div className=\"row__c__fs inputQuickBookingPeople\">\n                                <div className=\"quick__booking__block\">\n                                    <div\n                                        className=\"row__sb__c quick__booking__block\"\n                                        onClick={() => handlerOpenGuest()}\n                                        style={{cursor: \"pointer\"}}>\n                        <span className=\"text__content__black__14\" style={{marginLeft: \"10px\"}}>\n                            {requestParameters.guest.adult + requestParameters.guest.child.length} {wordDeclension(requestParameters.guest.adult + requestParameters.guest.child.length)}\n                        </span>\n                                        <span className={openGuest ? 'iconDate' : \"iconBtn\"}>\n                            <Icon24ChevronDown color={GREY}/>\n                        </span>\n                                    </div>\n                                    <GuestHotel\n                                        style={showGuest ? \"modal__guest\" : \"modal__none\"}\n                                        guest={requestParameters.guest.adult}\n                                        child={requestParameters.guest.child}\n                                        handler={() => checkingHandler()}\n                                        checkOld={checkOld}\n                                    />\n                                </div>\n                            </div>\n                            <span className=\"text__content__grey__12 mt__mb__5\"\n                                  style={{marginBottom: 10, marginTop: 10}}><span style={{color: RED}}>\n                                            *</span> Время заезда и отъезда</span>\n                            <div className=\"row__sb__c mb\">\n                                <span className=\"text__content__black__b__16 CheckInCheckOut\">\n                                    {dataObjectBooking.checkIn}\n                                </span>\n                                <span className=\"text__content__black__b__16 CheckInCheckOut\">\n                                    {dataObjectBooking.checkOut}\n                                </span>\n                            </div>\n\n\n                            <div className=\"row__sb__c\" style={{marginBottom: \"5px\", marginTop: \"15px\"}}>\n                                 <span className=\"text__content__black__b__16\">\n                                     Итого за {requestParameters.dataRange.countNight} суток\n                                 </span>\n                                <span className=\"text__content__black__b__20\">\n                                        {formatMoney(number.priceBase * requestParameters.dataRange.countNight)} ₽\n                                </span>\n                            </div>\n                            {\n                                 name === \"\" || lastName === \"\" || typePayment.value === \"no choose\" || dateError === true?\n                                    <div style={{marginBottom: \"25px\", marginTop: \"15px\"}}>\n                                        <ButtonIcon\n                                            handler={() => msgSave(\"Не все поля заполнены!\")}\n                                            icon={<Icon24BriefcaseOutline color={WHITE}/>}\n                                            style={\"doneBtnNoActive\"}\n                                            name={\"Забронировать\"}\n                                            styleText={\"text__content__white__16\"}\n                                            width={width >= 0 && width <= 530 ? \"280px\" : \"300px\"}\n                                        />\n                                    </div>\n                                    :\n                                    <div style={{marginBottom: \"25px\", marginTop: \"15px\"}}>\n                                        <ButtonIcon\n                                            handler={() => bookingHandler()}\n                                            icon={<Icon24BriefcaseOutline color={WHITE}/>}\n                                            style={\"doneBtn\"}\n                                            name={\"Забронировать\"}\n                                            styleText={\"text__content__white__16\"}\n                                            width={width >= 0 && width <= 530 ? \"280px\" : \"300px\"}\n                                            link={\"/pay\"}\n                                        />\n                                    </div>\n                            }\n\n                            <div className=\"row__c__c \">\n                                {isMsg ? <span className=\"text__content__black__12\">{msg}</span> : \"\"}\n                                {dateError === false ? \"\" :\n                                    <span className=\"text__content__white__14\"\n                                          style={{color: RED}}>Дата бронирования уже занята!</span>}\n                                {successData === \"\" ? \"\" :\n                                    <span className=\"text__content__white__14\"\n                                          style={{color: GREEN}}>{successData}</span>}\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n\n        </div>\n    )\n}","import {Header} from \"../components/header/Header\";\nimport {Footer} from \"../components/footer/Footer\";\nimport {ContactData} from \"../components/blocks/ContactData\";\n\nexport const PersonalArea = () => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <ContactData/>\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import {SliderBig} from \"../slider/SliderBig\";\nimport React, {useEffect, useState} from \"react\";\nimport {Icon24Delete, Icon24ListBulletOutline} from '@vkontakte/icons';\nimport { WHITE} from \"../../theme/colors\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport PhotoObjectService from \"../../services/photo-object.service\";\nimport FavoriteService from \"../../services/favorite.service\";\nimport NumberService from \"../../services/number.service\";\nimport {parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\n\n\nexport const Favorite = ({header, width, address,  hotelId, object, setObject}) => {\n    const [dataNumbersList, setDataNumbersList] = useState([])\n    const [objectPhotos, setObjectPhotos] = useState([]);\n    const [averagePrice, setAveragePrice] = useState(\"\");\n\n\n    useEffect(() => {\n        if (objectPhotos.length === 0) {\n            PhotoObjectService.getAllPhotosObject(\"favorites\", hotelId)\n                .then(data => setObjectPhotos(data))\n        }\n        if (dataNumbersList.length === 0) {\n            NumberService.getAllNumbers(\"favorites\", hotelId)\n                .then(data => {\n                   const resultNumb = parseJSONPropertiesInArray(data)\n                    // Фильтрация номеров по hotelId\n                    const filteredPrices = resultNumb.filter(price => price.hotelId === hotelId);\n\n                    if (filteredPrices.length > 0) {\n                        const pricesAboveZero = filteredPrices.filter(price => price.priceBase > 0);\n                        if (pricesAboveZero.length > 0) {\n                            const minPrice = Math.min(...pricesAboveZero.map(price => price.priceBase));\n                            setAveragePrice(minPrice);\n                        } else {\n                            console.log(\"Все цены меньше или равны нулю\");\n                        }\n                    } else {\n                        console.log(\"Нет данных для указанного hotelId\");\n                    }\n                })\n        }\n\n    }, [])\n\n    const removeFavorite = () => {\n        const deleteFavorite = object.filter(fav => +fav.hotelId !== hotelId)\n        setObject(deleteFavorite)\n        FavoriteService.deleteFavorite(\"hotels_map\", hotelId)\n            .then(data => console.log(\"Del favorite\", data))\n            .catch(e => console.log(e))\n    };\n\n\n\n    return (\n        <div>\n            <div className=\"row__fs__fs borderBottom desktop__booking__hotel__block\"\n                 style={{paddingBottom: \"15px\", flexWrap: \"wrap\", marginBottom: \"20px\"}}>\n                {/*SLIDER*/}\n                <SliderBig\n                    borderRadius={\"10px\"}\n                    height={\"180px\"}\n                    minWidth={\"260px\"}\n                    padding={5}\n                    maxWidth={\"250px\"}\n                    photos={objectPhotos}\n                />\n                <div className=\"column__sb\" style={{marginLeft: \"10px\"}}>\n                    <div className=\"row__c__fs \">\n                        <span className=\"text__content__black__b__16\" style={{margin: \"5px\"}}>{header}</span>\n                    </div>\n                    <div className=\"column__fs__c\">\n                        <span className=\"text__content__grey__12\" style={{margin: \"5px\"}}>\n                            ID {hotelId}\n                        </span>\n                    </div>\n                    <div className=\"row__sb__c\" style={{marginLeft: \"5px\"}}>\n                        <div className=\"column__fs__c\">\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__grey__12\">Адрес</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span\n                                    className=\"text__content__black__b__12\">{address}</span>\n                            </div>\n                            <div className=\"row__c__fs\" style={{marginTop: \"5px\"}}>\n                                <span className=\"text__content__grey__12\">Цена за сутки</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__black__b__12\">от {averagePrice} ₽</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row__sb__c\">\n                        <ButtonIcon\n                            style={\"moreBookingBtn\"}\n                            name={\"Подробнее\"}\n                            link={\"/hotel\"}\n                            icon={<Icon24ListBulletOutline color={WHITE} width={20} height={20}/>}\n                            handler={() => localStorage.setItem(\"hotelId\", hotelId)}\n                            styleText={\"text__content__white__12\"}\n                        />\n                        <ButtonIcon\n                            style={\"delBookingBtn\"}\n                            name={\"Удалить\"}\n                            icon={<Icon24Delete color={WHITE} width={20} height={20}/>}\n                            handler={() => removeFavorite()}\n                            styleText={\"text__content__white__12\"}\n                        />\n                    </div>\n                </div>\n            </div>\n            <div className=\"column__fs borderBottom mobile__booking__hotel__block\"\n                 style={{paddingBottom: \"15px\", marginBottom: \"20px\"}}>\n                {/*SLIDER*/}\n                <SliderBig\n                    borderRadius={\"10px\"}\n                    height={\"180px\"}\n                    minWidth={\"260px\"}\n                    padding={5}\n                    maxWidth={\"250px\"}\n                    photos={objectPhotos}\n                />\n                <div className=\"column__sb\" style={{marginLeft: \"10px\"}}>\n                    <div className=\"row__c__fs \">\n                        <span className=\"text__content__black__b__16\" style={{margin: \"5px\"}}>{header}</span>\n                    </div>\n                    <div className=\"column__fs__c\">\n                        <span className=\"text__content__grey__12\" style={{margin: \"5px\"}}>\n                            ID {hotelId}\n                        </span>\n                    </div>\n                    <div className=\"row__sb__c\" style={{marginLeft: \"5px\"}}>\n                        <div className=\"column__fs__c\">\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__grey__12\">Адрес</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span\n                                    className=\"text__content__black__b__12\">{address}</span>\n                            </div>\n                            <div className=\"row__c__fs\" style={{marginTop: \"5px\"}}>\n                                <span className=\"text__content__grey__12\">Цена за сутки</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__black__b__12\">от {averagePrice} ₽</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row__sb__c\">\n                        <ButtonIcon\n                            style={\"moreBookingBtn\"}\n                            name={width >= 0 && width <= 425 ? \"\" : \"Подробнее\"}\n                            link={\"/hotel\"}\n                            icon={<Icon24ListBulletOutline color={WHITE} width={20} height={20}/>}\n                            handler={() => localStorage.setItem(\"hotelId\", hotelId)}\n                            styleText={\"text__content__white__12\"}\n                        />\n                        <ButtonIcon\n                            style={\"delBookingBtn\"}\n                            name={width >= 0 && width <= 425 ? \"\" : \"Удалить\"}\n                            icon={<Icon24Delete color={WHITE} width={20} height={20}/>}\n                            handler={() => removeFavorite()}\n                            styleText={\"text__content__white__12\"}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import {useDispatch, useSelector} from \"react-redux\";\nimport {Favorite} from \"../cards/Favorite\";\nimport {useEffect, useState} from \"react\";\nimport {Spinner} from \"../spinner/Spinner\";\nimport {loaderFavoriteAndBookingHandler} from \"../../store/ClientData\";\nimport FavoriteService from \"../../services/favorite.service\";\nimport ObjectService from \"../../services/object.service\";\nimport {parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\n\nexport const ListFavoriteUser = () => {\n    const dispatch = useDispatch();\n    const loaderFavoriteAndBooking = useSelector(state => state.client__data.loaderFavoriteAndBooking);\n    const [width, setWidth] = useState(window.innerWidth);\n    const [object, setObject] = useState([])\n    const auth = useSelector(state => state.auth.isAuth);\n    const userId = useSelector((state) => state.auth.userId);\n\n\n    const searchFavoriteObject = (array) => {\n        ObjectService.getAllObject()\n            .then(data => {\n                const result = parseJSONPropertiesInArray(data)\n                console.log(\"result\",result);\n                console.log(\"array\",array);\n                const resultObject = result.filter(object => {\n                   return array.find(number => +number.hotelId === +object.hotelId);\n                })\n                console.log(\"resultObject\",resultObject);\n                setObject(resultObject)\n            })\n    }\n\n    const loadFavorite = () => {\n        FavoriteService.getAllFavorites(\"hotels_map\", userId)\n            .then(data => {\n                searchFavoriteObject(data)\n            })\n    }\n    useEffect(() => {\n        if (auth) {\n            if (object.length === 0) {\n                loadFavorite()\n            }\n        } else {\n            console.log(\"Не авторизован!\");\n        }\n    }, [])\n\n    console.log(\"favorite\", object);\n\n\n\n    useEffect(() => {\n        dispatch(loaderFavoriteAndBookingHandler(true));\n        setTimeout(() => dispatch(loaderFavoriteAndBookingHandler(false)), 2000);\n    }, []);\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, []);\n\n\n    return (\n        <div className=\"column__c__c custom__container\">\n            <div className=\"row__fs booking__user__block\">\n                <div className=\"column__fs custom__content\">\n                    <h3 className={`borderBottom custom__title ${width > 425 ? \"large\" : \"\"}`}>Избранное</h3>\n                    {\n                        loaderFavoriteAndBooking ?\n                            <div className=\"column__c__c\">\n                                <Spinner/>\n                            </div>\n                            :\n                            <div className=\"column custom__scroll\">\n                                {\n                                    object.length === 0 ? // проверка на пустую data\n                                        <div className=\"row__c__c\">\n                                            <span className=\"text__content__grey__16\">Список избранного пуст</span>\n                                        </div>\n                                        :\n                                        object.map(favorite => {\n                                            return (\n                                                <Favorite\n                                                    key={favorite.id} // Уникальный ключ для каждого элемента списка\n                                                    width={width}\n                                                    header={favorite.name}\n                                                    item={favorite}\n                                                    address={favorite.address}\n                                                    hotelId={favorite.hotelId}\n                                                    setObject={setObject}\n                                                    object={object}\n                                                />\n                                            )\n                                        })\n                                }\n                            </div>\n\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n","import {Header} from \"../../components/header/Header\";\nimport {Footer} from \"../../components/footer/Footer\";\nimport {ListFavoriteUser} from \"../../components/blocks/ListFavoriteUser\";\n\n\n\nexport const FavoriteUserHotel = () => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <ListFavoriteUser />\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import {BLACK, GREEN, GREY, GREY_BLACK, RED, WHITE} from \"../../theme/colors\";\nimport React, {useEffect, useState} from \"react\";\nimport { useSelector} from \"react-redux\";\nimport InputMask from \"react-input-mask\";\nimport { Icon24Done} from \"@vkontakte/icons\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport UsersService from \"../../services/users.service\";\nimport {Button} from \"../buttons/Button\";\n\n\nexport const EditUserContactData = () => {\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n    const [saveData, setSaveData] = useState(false);\n    const userId = useSelector((state) => state.auth.userId);\n    const [nameValue, setNameValue] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [lastNameValue, setLastNameValue] = useState(\"\")\n    const [phoneUser, setPhoneUser] = useState(\"\")\n    const [emailUser, setEmailUser] = useState(\"\")\n    const [isConfirmPhone, setIsConfirmPhone] = useState(false);\n    const [confirmPhone, setConfirmPhone] = useState(true);\n    const [codeConfirmForPhone, setCodeConfirmForPhone] = useState(\"\");\n    const [codeConfirmForPhoneInput, setCodeConfirmForPhoneInput] = useState(\"\");\n    const [userYooking, setUserYooking,] = useState({})\n    const [msg, setMsg] = useState(\"\")\n\n\n    const updateUserExtranet = () => {\n        UsersService.getUserYooking(\"edit_user\", userId)\n            .then(data => {\n                setUserYooking(data)\n                console.log(\"data\", data);\n                setNameValue(data.name)\n                setCity(data.city)\n                setLastNameValue(data.lastName)\n                setPhoneUser(data.phone)\n                setEmailUser(data.email)\n                setIsConfirmPhone(data.isConfirmPhone)\n                setCodeConfirmForPhone(data.codeConfirmForPhone)\n            })\n            .catch(error => {\n                console.log(error);\n            })\n    }\n\n    useEffect(() => {\n        if (nameValue === \"\" || lastNameValue === \"\" || phoneUser === \"\" || emailUser === \"\") {\n            updateUserExtranet()\n        }\n\n\n    }, [])\n\n    const setNameInputChange = (e) => {\n        setNameValue(e.target.value)\n    }\n    const setLastNameInputChange = (e) => {\n        setLastNameValue(e.target.value)\n    }\n    const setCityInputChange = (e) => {\n        setCity(e.target.value)\n    }\n    const setCodeConfirm = (e) => {\n        setCodeConfirmForPhoneInput(e.target.value)\n    }\n    console.log(codeConfirmForPhone);\n    console.log(\"codeConfirmForPhoneInput\",codeConfirmForPhoneInput);\n\n    const sendCodeConfirm = () => {\n        setConfirmPhone(false)\n        UsersService.generateCode(\"edit_user\",userId)\n            .then(data => console.log(data))\n            .catch(e => console.log(e))\n            .finally(() => updateUserExtranet())\n    }\n    const codeConfirm = () => {\n        const dataUserYooking = {\n            ...userYooking,\n            isConfirmPhone: true\n        }\n        console.log(\"dataUserYooking\",dataUserYooking);\n        if (codeConfirmForPhone === +codeConfirmForPhoneInput) {\n            UsersService.updateUserYooking(\"edit_user\", userId, dataUserYooking)\n                .then(data => console.log(\"DATA UPDATE CONFIRM PHONE\", data))\n                .catch(e => console.log(e))\n                .finally(() => updateUserExtranet())\n        } else {\n            console.log(\"Код не совпадает\");\n        }\n    }\n    const saveSettingProfile = () => {\n        const dataUserYooking = {\n            ...userYooking,\n            name: nameValue,\n            lastName: lastNameValue,\n            city: city,\n        }\n        UsersService.updateUserYooking(\"edit_user\", userId, dataUserYooking)\n            .then(() => setMsg(\"Данные сохранены!\"))\n            .catch(() => setMsg(\"Ошибка при сохранении!\"))\n            .finally(() => updateUserExtranet())\n    }\n\n\n    useEffect(() => {\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n    }, []);\n\n    return (\n        <div className=\"column__c__c\" style={{margin: \"2%\"}}>\n            <div className=\"center column__c__c\">\n                <div className=\"column width__center__660\">\n                    <div className=\"column\" style={{height: \"100%\", background: WHITE, padding: 10}}>\n                        <div className=\"row__c__fs mt__mr\">\n                            <span className=\"text__content__black__b__20\">Настройки</span>\n                        </div>\n                        <div className=\"row__sb__c \">\n                            <div className=\"column__fs\">\n                                    <span className=\"text__content__grey__12 mt__mb__5\"><span\n                                        style={{color: RED}}>*</span> Имя</span>\n                                <input\n                                    type=\"text\"\n                                    id=\"nameSetting\"\n                                    required={true}\n                                    placeholder=\"Ваше имя\"\n                                    className=\"inputRegObj\"\n                                    value={nameValue}\n                                    style={{color: BLACK}}\n                                    onChange={(e) => setNameInputChange(e)}\n                                />\n                            </div>\n                            <div className=\"column__fs\">\n                                    <span className=\"text__content__grey__12 mt__mb__5\"><span\n                                        style={{color: RED}}>*</span> Фамилия</span>\n                                <input\n                                    type=\"text\"\n                                    id=\"lastNameSetting\"\n                                    required={true}\n                                    placeholder=\"Ваша фамилия\"\n                                    className=\"inputRegObj\"\n                                    style={{color: BLACK}}\n                                    value={lastNameValue}\n                                    onChange={(e) => setLastNameInputChange(e)}\n                                />\n                            </div>\n\n                        </div>\n                        <div className=\"row__sb__c \">\n                            <div className=\"column__fs\">\n                                    <span className=\"text__content__grey__12 mt__mb__5\"><span\n                                        style={{color: RED}}>*</span> Фамилия</span>\n                                <input\n                                    type=\"text\"\n                                    id=\"citySetting\"\n                                    required={true}\n                                    placeholder=\"Ваш город\"\n                                    className=\"inputRegObj\"\n                                    style={{color: BLACK}}\n                                    value={city}\n                                    onChange={(e) => setCityInputChange(e)}\n                                />\n                            </div>\n                            <div className=\"column__fs\">\n                                    <span className=\"text__content__grey__12 mt__mb__5\"><span\n                                        style={{color: RED}}>*</span> Email</span>\n                                <input\n                                    value={emailUser}\n                                    // onChange={handleChange}\n                                    id=\"emailObjSetting\"\n                                    type=\"email\"\n                                    placeholder=\"Введите Email\"\n                                    style={{color: emailUser !== \"\" ? GREY : BLACK}}\n                                    disabled={emailUser !== \"\" ? true : false}\n                                    className={\"inputRegObj\"}\n                                />\n\n                            </div>\n                        </div>\n                        <div className=\"row__sb__c \">\n                            <div className=\"column__fs\">\n                                    <span className=\"text__content__grey__12 mt__mb__5\"><span\n                                        style={{color: RED}}>*</span> Номер телефона</span>\n                                <InputMask\n                                    id=\"phoneObjSetting\"\n                                    value={phoneUser}\n                                    // onChange={(e) => handleChange(e)}\n                                    type=\"tel\"\n                                    style={{color: phoneUser !== \"\" ? GREY : BLACK}}\n                                    mask=\"+79999999999\"\n                                    placeholder=\"+79999999999\"\n                                    disabled={phoneUser !== \"\" ? true : false}\n                                    className={\"inputRegObj\"}\n                                />\n                            </div>\n\n\n\n                        </div>\n                        {isConfirmPhone ?\n                            <span className=\"text__content__grey__12\" style={{color: GREEN}}>Номер телефона\n                                подтвержден</span>\n                            :\n                            confirmPhone ?\n                                <div className=\"column__fs\">\n                                    <span className=\"text__content__grey__12\" style={{color: RED}}>* Номер телефона не\n                                        подтвержден</span>\n                                    <p\n                                        onClick={() => sendCodeConfirm()}\n                                        style={{cursor: \"pointer\"}}\n                                        className=\"text__content__grey__b__12\">\n                                        Подтвердить номер?\n                                    </p>\n                                </div>\n                                :\n                                <div className=\"column\">\n                                    <div className=\"column\">\n                                        <input\n                                            value={codeConfirmForPhoneInput}\n                                            onChange={(e) => setCodeConfirm(e)}\n                                            id=\"emailObjSetting\"\n                                            type=\"number\"\n                                            placeholder=\"Введите код\"\n                                            style={{color: BLACK}}\n                                            className={\"inputRegObj\"}\n                                        />\n                                        <p className=\"text__content__grey__12\" style={{color: GREY}}>\n                                            На вашу почту <span\n                                            className=\"text__content__grey__b__12\">{emailUser}</span> отправлен код!\n                                        </p>\n                                        <div className=\"row__c__fs\" style={{marginLeft: -10}}>\n                                            <Button\n                                                name={\"Подтвердить\"}\n                                                style={\"cancelBookingBtn\"}\n                                                styleText={\"text__content__white__14\"}\n                                                handler={() => codeConfirm()}\n                                            />\n                                            <Button\n                                                name={\"Отмена\"}\n                                                style={\"cancelBookingBtn\"}\n                                                color={GREY_BLACK}\n                                                styleText={\"text__content__white__14\"}\n                                                handler={() => setConfirmPhone(true)}\n                                            />\n                                        </div>\n                                    </div>\n                                </div>\n                        }\n\n                        <Button\n                            name={\"Сменить пароль\"}\n                            style={\"changePasswordButton\"}\n                            marginTop={20}\n                            styleText={\"text__content__white__14\"}\n                            handler={() => console.log(\"Сменить пароль\")}\n                        />\n                        <div className=\"row__c__c\" style={{marginBottom: \"25px\",  marginTop: \"25px\"}}>\n                            <ButtonIcon\n                                handler={() => saveSettingProfile()}\n                                icon={<Icon24Done color={WHITE}/>}\n                                style={\"changePasswordButton\"}\n                                name={\"Сохранить\"}\n                                styleText={\"text__content__white__14\"}\n                                width={width >= 0 && width <= 530 ? \"280px\" : \"300px\"}\n                            />\n                            <div className=\"row__c__c\">\n                                {saveData ?\n                                    <span className=\"text__content__black__12\"\n                                          style={{marginTop: \"5px\", marginBottom: \"5px\", textAlign: \"center\", color: GREEN}}>Данные сохранены!</span>\n                                    :\n                                    \"\"\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import {Header} from \"../../components/header/Header\";\nimport {Footer} from \"../../components/footer/Footer\";\nimport {EditUserContactData} from \"../../components/blocks/EditUserContactData\";\n\nexport const EditUserData = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <EditUserContactData/>\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Modal from '@mui/material/Modal';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport { finishedBookingHandler} from \"../../store/ClientData\";\nimport {Icon24Cancel, Icon24CheckCircleFilledBlue} from \"@vkontakte/icons\";\nimport {GREY_BLACK, ORANGE} from \"../../theme/colors\";\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 24,\n    p: 4,\n};\n\nexport default function FinishedBooking() {\n    const dispatch = useDispatch()\n    const finishedBooking = useSelector(state => state.client__data.finishedBooking)\n\n    const closeMobileCodeModal = () => {\n        dispatch(finishedBookingHandler(!finishedBooking))\n    }\n\n    return (\n        <div>\n            <Modal\n                open={finishedBooking}\n                onClose={() => closeMobileCodeModal()}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <div className=\"column\">\n                        <div className=\"row__sb__c\">\n                            <h3>Запрос на бронь отправлен</h3>\n                            <span onClick={() => dispatch(finishedBookingHandler(!finishedBooking))}\n                                  style={{cursor: \"pointer\"}}>\n                               <Icon24Cancel color={GREY_BLACK}/>\n                            </span>\n                        </div>\n                        <div className=\"column__c\" style={{margin: \"15px\"}}>\n                            <Icon24CheckCircleFilledBlue color={ORANGE} width={50} height={50}/>\n                        </div>\n                        <div className=\"row__c__c\">\n                            <span\n                                className=\"text__content__black__14\">В ближайшее время с Вами свяжется менеджер.</span>\n                        </div>\n                        <div className=\"column__c\" style={{margin: \"15px\"}}>\n                            <span className=\"text__content__black__b__16\">Наш номер</span>\n                            <span className=\"text__content__black__b__20\" style={{marginTop: \"10px\"}}>8 800 556 69 99</span>\n                        </div>\n                    </div>\n                </Box>\n            </Modal>\n        </div>\n    );\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {SliderBig} from \"../slider/SliderBig\";\nimport React, {useEffect, useState} from \"react\";\nimport {\n    Icon20CancelCircleFillRed,\n    Icon24BuildingOutline,\n    Icon24ListBulletOutline,\n} from '@vkontakte/icons';\nimport {GREEN, ORANGE,  WHITE} from \"../../theme/colors\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport NumberService from \"../../services/number.service\";\nimport {parseJSONProperties, parseJSONPropertiesInArray} from \"../../utils/json-parse-object\";\nimport PhotoNumberService from \"../../services/photo-number.service\";\nimport BookingService from \"../../services/booking.service\";\nimport {\n    dataNumbersListHandler,\n    loadNumberListModalHandler,\n    openMoreNumberHandler,\n     setCategoryIdHandler, setNumberHandler\n} from \"../../store/HotelsList\";\nimport {loaderFavoriteAndBookingHandler} from \"../../store/ClientData\";\n\n\nexport const Booking = ({bookingId, bookingList, numberId,user, width}) => {\n    const dispatch = useDispatch()\n    const [number, setNumber] = useState(null);\n    const [booking, setBooking] = useState(null);\n    const [photosNumber, setPhotosNumber] = useState([]);\n    const requestParameters = useSelector(state => state.hotels_item.cityOrHotel)\n\n\n    useEffect(() => {\n        if (!number || !booking || !photosNumber) {\n            NumberService.getNumberById(\"booking\", numberId)\n                .then(number => setNumber(parseJSONProperties(number)))\n            BookingService.getBooking(bookingId)\n                .then(booking => setBooking(parseJSONProperties(booking)))\n            PhotoNumberService.getAllPhotosNumber(\"booking\", numberId)\n                .then(data => setPhotosNumber(data))\n        }\n    }, [])\n\n    const filterNumbers = async (array) => {\n        const checkIn = requestParameters.checkIn\n        const checkOut = requestParameters.checkOut\n        const guest = requestParameters.guest.adult + requestParameters.guest.child.length\n        const filteredNumbers = await array.filter(number => {\n            // Проверяем диапазон дат в bookingList\n            const isDateAvailable = number.bookingList.every(booking => {\n                return !(checkIn >= booking.checkIn && checkIn < booking.checkOut) &&\n                    !(checkOut > booking.checkIn && checkOut <= booking.checkOut);\n            });\n            // Проверяем количество гостей\n            const isGuestCountValid = number.guestCount.length >= guest;\n            return isDateAvailable && isGuestCountValid;\n        });\n        return filteredNumbers\n    }\n\n    const chooseHotelMore = () => {\n        localStorage.setItem(\"hotelId\", number.hotelId)\n        NumberService.getAllNumbers(\"booking\", number.hotelId)\n            .then(data => {\n                const resultNumb = parseJSONPropertiesInArray(data)\n                filterNumbers(resultNumb)\n                    .then(data => {\n                        dispatch(dataNumbersListHandler(data))\n                    })\n                    .catch(e => console.log(e))\n                    .finally(() => {\n                        dispatch(loadNumberListModalHandler(false))\n                    })\n            })\n    }\n\n    const moreNumber = () => {\n        dispatch(openMoreNumberHandler(true))\n        dispatch(setCategoryIdHandler(booking.categoryId))\n        dispatch(setNumberHandler(number))\n    }\n\n    const cancelBooking = async () => {\n        const updateUserBookingList = bookingList.filter(booking => +booking.id !== +bookingId);\n\n        const updateUser = {\n            ...user,\n            bookingList: JSON.stringify(updateUserBookingList)\n        };\n        const updatedBookingList = number.bookingList.filter(booking => +booking.id !== +bookingId);\n\n        const updateNumber = {\n            ...number,\n            bookingList: JSON.stringify(updatedBookingList)\n        };\n        console.log(\"updateUser\",updateUser);\n        console.log(\"updateNumber\",updateNumber);\n        console.log(\"updateUser\",updateUserBookingList);\n        console.log(\"updateNumber\",updatedBookingList);\n\n        BookingService.deleteBooking(bookingId, numberId, updateNumber, user.id, updateUser)\n            .then(() => {\n                dispatch(loaderFavoriteAndBookingHandler(true))\n                setTimeout(() => dispatch(loaderFavoriteAndBookingHandler(false)), 1000);\n            })\n    }\n\n    return (\n        <div>\n            <div className=\"row__fs__fs borderBottom desktop__booking__hotel__block\"\n                 style={{paddingBottom: \"15px\", marginBottom: \"20px\"}} key={bookingId}>\n                {/*SLIDER*/}\n                <SliderBig\n                    height={\"150px\"}\n                    maxWidth={\"100%\"}\n                    borderRadius={\"10px\"}\n                    minWidth={\"250px\"}\n                    mb={\"5px\"}\n                    padding={\"5px\"}\n                    photos={photosNumber}\n                />\n                <div className=\"column__sb\" style={{marginLeft: \"10px\"}}>\n                    <div className=\"row__c__fs \">\n                        <span className=\"text__content__black__b__16\" style={{margin: \"5px\"}}>{number?.name}</span>\n                    </div>\n                    <div className=\"row__sb__c \">\n                        <div className=\"column__fs__c\">\n                        <span className=\"text__content__grey__12\" style={{margin: \"5px\"}}>\n                            ID {bookingId}\n                        </span>\n                        </div>\n                        <div className=\"column__fs__c\">\n                            {booking?.status.name === \"Новое\" ?\n                                <span className=\"text__content__grey__12\" style={{margin: \"5px\"}}>\n                                        Статус:  <span className=\"text__content__grey__12\" style={{color: ORANGE}}>Ожидание</span>\n                                </span>\n                                :\n                                <span className=\"text__content__grey__12\" style={{margin: \"5px\"}}>\n                                        Статус:  <span className=\"text__content__grey__12\" style={{color: GREEN}}>Подтверждено</span>\n                                </span>\n                            }\n\n                        </div>\n                    </div>\n                    <div className=\"row__sb__c\" style={{marginLeft: \"5px\"}}>\n                        <div className=\"column__fs__c\">\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__grey__12\">Дата заезда </span>\n                                <span className=\"text__content__black__b__12 ml__mr_10\">{booking?.checkIn}</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__grey__12\">Дата отъезда</span>\n                                <span className=\"text__content__black__b__12 ml__mr_10\">{booking?.checkOut}</span>\n                            </div>\n                            <div className=\"row__c__fs\" style={{marginTop: \"5px\"}}>\n                                <span className=\"text__content__grey__12\">Цена</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__black__b__12\">{booking?.amount} ₽</span>\n                            </div>\n                        </div>\n                        <div className=\"column__fs__c\">\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__grey__12\">Время заезда и отъезда</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__black__b__12\">{booking?.checkInTime} - {booking?.checkOutTime}</span>\n                            </div>\n                            <div className=\"row__c__fs\" style={{marginTop: \"5px\"}}>\n                                <span className=\"text__content__grey__12\">Количество гостей</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__black__b__12\">{booking?.guestCount}</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row__sb__c\">\n                        <ButtonIcon\n                            style={\"moreBookingBtn\"}\n                            name={\"Отель\"}\n                            link={\"/hotel\"}\n                            icon={<Icon24BuildingOutline color={WHITE} width={20} height={20}/>}\n                            handler={() => chooseHotelMore()}\n                            styleText={\"text__content__white__12\"}\n                        />\n                        <ButtonIcon\n                            style={\"sellBookingBtn\"}\n                            name={\"Подробнее\"}\n                            icon={<Icon24ListBulletOutline color={WHITE} width={20} height={20}/>}\n                            handler={() => moreNumber()}\n                            styleText={\"text__content__white__12\"}\n                        />\n                        {booking?.status.name !== \"Новое\" ?\n                                \"\"\n                            :\n                            <ButtonIcon\n                                style={\"delBookingBtn\"}\n                                name={\"Отменить\"}\n                                icon={<Icon20CancelCircleFillRed color={WHITE} width={20} height={20}/>}\n                                handler={() => cancelBooking()}\n                                styleText={\"text__content__white__12\"}\n                            />\n                        }\n\n                    </div>\n                </div>\n            </div>\n            <div className=\"column__fs borderBottom mobile__booking__hotel__block\"\n                 style={{paddingBottom: \"15px\", marginBottom: \"20px\"}} key={bookingId}>\n                {/*SLIDER*/}\n                <SliderBig\n                    height={\"150px\"}\n                    maxWidth={\"100%\"}\n                    borderRadius={\"10px\"}\n                    minWidth={\"250px\"}\n                    mb={\"5px\"}\n                    padding={\"5px\"}\n                    photos={photosNumber}\n                />\n                <div className=\"column__sb\" style={{marginLeft: \"10px\",}}>\n                    <div className=\"row__c__fs \">\n                        <span className={\"text__content__black__b__16\"} style={{margin: \"5px\"}}>{number?.name}</span>\n                    </div>\n                    <div className=\"row__sb__c \">\n                        <div className=\"column__fs__c\">\n                        <span className=\"text__content__grey__12\" style={{margin: \"5px\"}}>\n                            ID {bookingId}\n                        </span>\n                        </div>\n                        <div className=\"column__fs__c\">\n                        <span className=\"text__content__grey__12\" style={{margin: \"5px\"}}>\n                            Статус:  <span className=\"text__content__grey__12\" style={{color: ORANGE}}>проверка</span>\n                        </span>\n                        </div>\n                    </div>\n                    <div className=\"row__sb__c\" style={{marginLeft: \"5px\"}}>\n                        <div className=\"column__fs__c\">\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__grey__12\">Дата заезда </span>\n                                <span className=\"text__content__black__b__12 ml__mr_10\">{booking?.checkIn}</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__grey__12\">Дата отъезда</span>\n                                <span className=\"text__content__black__b__12 ml__mr_10\">{booking?.checkOut}</span>\n                            </div>\n                            <div className=\"row__c__fs\" style={{marginTop: \"5px\"}}>\n                                <span className=\"text__content__grey__12\">Цена</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__black__b__12\">{booking?.amount} ₽</span>\n                            </div>\n                        </div>\n                        <div className=\"column__fs__c\">\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__grey__12\">Время заезда и отъезда</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__black__b__12\">{booking?.checkInTime} - {booking?.checkOutTime}</span>\n                            </div>\n                            <div className=\"row__c__fs\" style={{marginTop: \"5px\"}}>\n                                <span className=\"text__content__grey__12\">Количество гостей</span>\n                            </div>\n                            <div className=\"row__c__fs\">\n                                <span className=\"text__content__black__b__12\">{booking?.guestCount}</span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row__sb__c\">\n                        <ButtonIcon\n                            style={\"moreBookingBtn\"}\n                            name={width >= 0 && width <= 425 ? \"\" : \"Отель\"}\n                            link={\"/Отель\"}\n                            icon={<Icon24BuildingOutline color={WHITE} width={20} height={20}/>}\n                            handler={() =>  chooseHotelMore()}\n                            styleText={\"text__content__white__12\"}\n                        />\n                        <ButtonIcon\n                            style={\"sellBookingBtn\"}\n                            name={width >= 0 && width <= 425 ? \"\" : \"Подробнее\"}\n                            icon={<Icon24ListBulletOutline color={WHITE} width={20} height={20}/>}\n                            handler={() =>  moreNumber()}\n                            styleText={\"text__content__white__12\"}\n                        />\n                        {booking?.status.name !== \"Новое\" ?\n                            \"\"\n                            :\n                            <ButtonIcon\n                                style={\"delBookingBtn\"}\n                                name={width >= 0 && width <= 425 ? \"\" : \"Отменить\"}\n                                icon={<Icon20CancelCircleFillRed color={WHITE} width={20} height={20}/>}\n                                handler={() => cancelBooking()}\n                                styleText={\"text__content__white__12\"}\n                            />\n                        }\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {Booking} from \"../cards/Booking\";\nimport {useEffect, useState} from \"react\";\nimport {Spinner} from \"../spinner/Spinner\";\nimport {loaderFavoriteAndBookingHandler} from \"../../store/ClientData\";\nimport UsersService from \"../../services/users.service\";\nimport {parseJSONData} from \"../../utils/json-parse-object\";\n\n\nexport const ListBookingUser = () => {\n    const dispatch = useDispatch();\n    const userId = useSelector((state) => state.auth.userId);\n    const loaderFavoriteAndBooking = useSelector(state => state.client__data.loaderFavoriteAndBooking)\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n    const [user, setUser] = useState(null)\n    const [bookingList, setBookingList] = useState([])\n\n\n    useEffect(() => {\n        if (bookingList.length === 0) {\n            UsersService.getUserYooking(\"booking\", userId)\n                .then(user => {\n                    setUser(user)\n                    const bookingList = parseJSONData(user.bookingList)\n                    setBookingList(bookingList)\n                })\n        }\n        dispatch(loaderFavoriteAndBookingHandler(true));\n        setTimeout(() => dispatch(loaderFavoriteAndBookingHandler(false)), 2000);\n        const handleResize = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        }\n\n    }, []);\n\n\n    if (loaderFavoriteAndBooking) {\n        UsersService.getUserYooking(\"booking\", userId)\n            .then(user => {\n                setUser(user)\n                const bookingList = parseJSONData(user.bookingList)\n                setBookingList(bookingList)\n            })\n\n    }\n\n    return (\n        <div className=\"column__c__c custom__container\">\n            <div className=\"row__fs booking__user__block\">\n                <div className=\"column__fs custom__content\">\n                    <h3 className={`borderBottom custom__title ${width > 425 ? \"large\" : \"\"}`}>Забронированные\n                        объекты</h3>\n                    {\n                        loaderFavoriteAndBooking ?\n                            <div className=\"column__c__c\">\n                                <Spinner/>\n                            </div>\n                            :\n                            <div className=\"column custom__scroll\">\n                                {\n                                    bookingList.length === 0 ? // проверка на пустую data\n                                        <div className=\"row__c__c\">\n                                            <span className=\"text__content__grey__16\">Список бронирования пуст</span>\n                                        </div>\n                                        :\n                                        bookingList.map(booking => {\n                                            return (\n                                                <Booking\n                                                    key={booking.id}\n                                                    bookingId={booking.id}\n                                                    numberId={booking.numberId}\n                                                    booking={booking}\n                                                    width={width}\n                                                    user={user}\n                                                    bookingList={bookingList}\n                                                />\n                                            )\n                                        })\n                                }\n                            </div>\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}","import {Header} from \"../../components/header/Header\";\nimport {Footer} from \"../../components/footer/Footer\";\nimport FinishedBooking from \"../../components/modals/FinishedBooking\";\nimport {ListBookingUser} from \"../../components/blocks/ListBookingUser\";\nimport {MoreNumber} from \"../../components/modals/MoreNumber\";\nimport React from \"react\";\n\n\nexport const BookingUser = () => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <ListBookingUser/>\n                <FinishedBooking/>\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n            <MoreNumber type={\"booking\"}/>\n        </div>\n    )\n}","import \"./StartingPage.css\"\nimport map from \"../../assets/image/maps.png\";\nimport {useDispatch} from \"react-redux\";\nimport {useEffect} from \"react\";\nimport {handlerLoadingStartPage} from \"../../store/Main\";\n\n\n\nexport const StartingPage = () => {\n    const dispatch = useDispatch()\n    useEffect(() => {\n        setTimeout(() => dispatch(handlerLoadingStartPage(false)), 3000);\n    }, []);\n\n    return (\n        <div className='loaderContainer'>\n            <div className='loaderLogo'>\n                <span\n                    className='loaderText animate-charcter'\n                    style={{fontSize: \"36px\", fontWeight: \"bold\"}}>\n                    YOOKING.RU\n                </span>\n                <p className='loaderSubtext'>Сервис по бронированию</p>\n            </div>\n            <div className=\"row__c__c\">\n                <img src={map} alt=\"map\" width={300}/>\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport {ButtonIcon} from \"../buttons/ButtonIcon\";\nimport {Icon24BriefcaseOutline} from \"@vkontakte/icons\";\nimport {WHITE} from \"../../theme/colors\";\nimport BookingService from \"../../services/booking.service\";\nimport {useDispatch} from \"react-redux\";\nimport {finishedBookingHandler} from \"../../store/ClientData\";\n\n\nexport const PayForm = ({dataBooking, updateNumber, numberId,userId, updateUser}) => {\n    const dispatch = useDispatch()\n\n    const payHandler = async () => {\n        BookingService.createBooking(\"pay\", numberId, dataBooking, updateNumber,userId, updateUser)\n            .then(() => dispatch(finishedBookingHandler(true)))\n    }\n\n    return (\n        <div style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"100vh\"\n        }}>\n            <div className=\"registration\">\n                <h2 className=\"text__content__black__b__26\" style={{textAlign: \"center\"}}>Оплата</h2>\n                <div style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    justifyContent: \"flex-start\",\n                    alignItems: \"center\",\n                }}>\n                    <ButtonIcon\n                        handler={() => payHandler()}\n                        icon={<Icon24BriefcaseOutline color={WHITE}/>}\n                        style={\"doneBtn\"}\n                        name={\"Оплатить\"}\n                        styleText={\"text__content__white__16\"}\n                        width={300}\n                        link={\"/booking\"}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}","import {Header} from \"../components/header/Header\";\nimport {Footer} from \"../components/footer/Footer\";\nimport React from \"react\";\nimport {PayForm} from \"../components/forms/PayForm\";\nimport {useSelector} from \"react-redux\";\n\n\nexport const Pay = () => {\n    const dataBooking = useSelector(state => state.dataBooking.dataBooking)\n    const updateNumber = useSelector(state => state.dataBooking.updateNumber)\n    const updateUser = useSelector(state => state.dataBooking.updateUser)\n    const numberId = useSelector(state => state.dataBooking.numberId)\n    const userId = useSelector(state => state.dataBooking.userId)\n\n    return (\n        <div className=\"container\">\n            <div className=\"header\">\n                <Header/>\n            </div>\n            <div className=\"center\">\n                <PayForm\n                    dataBooking={dataBooking}\n                    numberId={numberId}\n                    updateNumber={updateNumber}\n                    updateUser={updateUser}\n                    userId={userId}\n                />\n            </div>\n            <div className=\"footer\">\n                <Footer/>\n            </div>\n        </div>\n    )\n}","import './App.css';\nimport './components/buttons/Buttons.css'\nimport \"./components/inputs/Inputs.css\"\nimport \"./components/blocks/Blocks.css\"\nimport \"./components/modals/Modals.css\"\nimport \"./components/filters/Filter.css\"\nimport \"./components/cards/Cards.css\"\nimport \"./components/slider/Slider.css\"\nimport \"./components/forms/Forms.css\"\nimport \"./components/search/SearchPanel.css\"\nimport \"./components/styles/Styles.css\"\nimport \"./components/custom-select/CustomSelect.css\"\n\nimport { Route, Routes} from \"react-router-dom\";\nimport {Main} from \"./routes/Main\";\nimport {HotelAndMap} from \"./routes/HotelAndMap\";\nimport {HotelNumber} from \"./routes/HotelNumber\";\nimport {ErrorPage} from \"./routes/ErrorPage\";\nimport {Login} from \"./routes/Login\";\nimport {Registration} from \"./routes/Registration\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {PersonalArea} from \"./routes/PersonalArea\";\nimport {FavoriteUserHotel} from \"./routes/user__data/FavoriteUserHotel\";\nimport {EditUserData} from \"./routes/user__data/EditUserData\";\nimport {BookingUser} from \"./routes/user__data/BookingUser\";\nimport {useEffect} from \"react\";\nimport AuthService from \"./services/auth.service\";\nimport {isAuth} from \"./store/authSlice\";\nimport {StartingPage} from \"./components/starting-page/StartingPage\";\nimport {Pay} from \"./routes/Pay\";\n\nfunction App() {\n    const loading = useSelector(state => state.main.loading)\n    const dispatch = useDispatch()\n\n    const authChecked = async () => {\n        try {\n            const res = await AuthService.refresh();\n            return { accessToken: res.data.accessToken, user: res.data.user }; // Убедитесь, что возвращаемый объект содержит accessToken\n        } catch (error) {\n            console.log(error);\n            return null; // Возвращайте null или другое значение по умолчанию в случае ошибки\n        }\n    };\n\n\n    useEffect(() => {\n        if (localStorage.getItem('token')) {\n            authChecked()\n                .then(data => dispatch(isAuth(data)))\n        }\n    },[]);\n\n\n\n    return (\n            <Routes>\n                <Route path=\"/\" element={loading ? <StartingPage/> : <Main/>}/>\n                <Route path=\"/hotels_map\" element={<HotelAndMap/>}/>\n                <Route path=\"/hotel\" element={<HotelNumber/>}/>\n                <Route path=\"/error\" element={<ErrorPage />}/>\n                <Route path=\"/api/login\" element={<Login />}/>\n                <Route path=\"/person\" element={<PersonalArea />}/>\n                <Route path=\"/pay\" element={<Pay/>}/>\n                <Route path=\"/api/registration\" element={<Registration />}/>\n                <Route path=\"/booking\" element={<BookingUser />}/>\n                <Route path=\"/edit_user\" element={<EditUserData />}/>\n                <Route path=\"/favorites\" element={<FavoriteUserHotel />}/>\n            </Routes>\n    );\n}\n\nexport default App;\n"],"names":["langData","id","name","img","Lang","_ref","style","handleLang","dispatch","useDispatch","_jsx","className","onClick","children","map","lang","MenuItem","value","handlerLangChoose","_jsxs","display","flexDirection","justifyContent","alignItems","src","alt","width","height","marginRight","border","borderRadius","boxShadow","Menu","handleMenu","Link","to","cursor","Icon24UserOutline","color","BLACK","marginLeft","marginTop","Icon24UserAddOutline","Icon24BuildingOutline","DrawerMenu","langChoose","useSelector","state","main","setState","useState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","_Fragment","Icon28Menu","Drawer","onClose","Box","sx","role","onKeyDown","List","link","icon","item","paddingLeft","Divider","FormControl","m","size","InputLabel","Select","labelId","label","onChange","e","console","log","target","SpinnerUserMenu","PulseLoader","ORANGE","loading","API_URL","$api","axios","create","withCredentials","baseURL","interceptors","request","use","config","headers","Authorization","concat","localStorage","getItem","response","async","error","message","originalRequest","status","_isRetry","get","data","accessToken","setItem","Error","AuthService","static","newUser","post","email","password","Header","token","auth","loadingUserMenu","modalLang","modalMenu","clientData","client__data","dateClient","isOpenSort","setIsOpenSort","toggleDrawerSort","prevState","logoutUser","logout","loginFailure","paddingRight","background","WHITE","position","logo","handleClickOutsideLang","modalLangHandler","zIndex","Icon24User","direction","Icon24NotebookCheckOutline","GREY_BLACK","Icon24Like","Icon24WriteOutline","Icon24DoorArrowRightOutline","handleClickOutsideMenu","modalMenuHandler","Footer","marginBottom","vk","padding","telegram","paddingTop","paddingBottom","textAlign","ButtonIcon","ml","mt","handler","mb","styleText","flexGrow","ListSearch","handle","city","hotelId","location","wordDeclension","wordDeclensionNight","getAccommodationCity","lastChar","length","lastTwoChars","slice","dateFormater","date","arr","toLocaleDateString","replace","push","join","dayMonth","substr","DataRange","styles","page","selectedStartDate","setSelectedStartDate","selectedEndDate","setSelectedEndDate","hoveredDate","setHoveredDate","isSelectingEndDate","setIsSelectingEndDate","setMessage","nightsCount","setNightsCount","isLeapYear","year","isToday","today","Date","getDate","getMonth","getFullYear","calculateNights","startDate","endDate","timeDifference","Math","abs","ceil","handleDateSelect","day","isGrayedOut","maxEndDate","setDate","saveDataRange","nights","end","start","dataRange","checkIn","checkOut","month","countNight","isFirstSelectedDay","getTime","isLastSelectedDay","isSelectedDay","isBeforeToday","floor","setHours","isTemporarySelectedDay","handleMouseEnter","renderMonthDays","days","firstDayOfMonth","index","i","getDay","onMouseEnter","onMouseLeave","toString","monthsList","getMonthsList","allMonths","currentYear","currentMonthIndex","daysInMonth","ButtonCounter","count","handleDel","handleAdd","GREY_WHITE","Icon24MinusOutline","Icon24Add","Button","GuestHotel","guest","child","checkOld","old","borderBottom","handlerAddGuest","handlerDelGuest","handlerAddChild","handlerDelChild","handlerChooseOld","handlerEditOldChild","idChild","RED","parseJSONProperties","obj","newObj","JSON","parse","parseJSONData","jsonData","parseJSONPropertiesInArray","newArr","getAllObject","getObject","path","getObjectByUserId","userId","searchObject","requestParameters","updateObject","dataObjectSetting","put","deleteObject","delete","SearchPanel","search","cityOrHotel","objectList","setObjectList","filterData","setFilterData","searchCity","setSearchCity","setCheckOld","openDataRang","setOpenDataRang","openGuest","setGuest","setLink","showListSearch","showCalendar","showGuest","isWriteCity","setIsWriteCity","useEffect","ObjectService","then","parsedData","catch","handleClickOutsideListSearch","showListSearchHandler","handleClickOutsideGuestHotel","showGuestHandler","handlerOpenGuest","handlerDate","showCalendarHandler","handleClickOutsideDataRange","checkingHandler","dataSearchHandler","cityOrHotelHandler","handlerDataRange","handlerText","searchText","toLocaleLowerCase","filteredCity","filter","includes","uniqueCities","Set","uniqueCitiesArray","Array","from","find","handleSearch","loadingHotelListHandler","loadingMapHandler","resultObject","adult","array","number","isDateAvailable","bookingList","every","booking","isGuestCountValid","guestCount","filterNumbers","resultNumbers","resultFilterObject","numbers","object","filterObject","objectListHandler","dataNumbersListHandler","setFilteredHotels","countOtherSortHandler","finally","updateHotelList","pageSwitchingHandler","localDataLocation","lat","lon","zoom","stringify","setTimeout","autoComplete","placeholder","required","line","Icon24ChevronDown","GREY","Icon24LocationMapOutline","React","BannerSearch","banner","header","addHeader","q","backgroundImage","backgroundSize","backgroundPosition","toLocaleUpperCase","getSettingPage","WhereToGo","setData","SettingPageService","result","minPrices","setMinPrices","prices","price","pricesHandler","fetchData","pricesAboveZero","priceBase","min","reqParams","monthText","setBannerHandler","requestParameterHandler","searchToParams","photo","BLACK_OPACITY","undefined","BenefitBlock","margin","cash","esim","MobileApp","phone","qr","imgStore","Main","startFull","endFull","initDateRangeHandler","checkInHandler","checkOutHandler","theme","createTheme","palette","secondary","RangePrice","handlerFocus","rangeValueStart","rangeValueEnd","onBlur","rangeValueStartHandler","rangeValueEndHandler","ThemeProvider","Slider","handleChange","newValue","onMouseUp","max","step","getAllNumbers","getAllHotelIdNumbers","hotelIds","getNumberById","numberId","createNumber","dataNumber","updateNumber","deleteNumberById","categoryId","deleteNumbersByLastCategory","deleteAllNumbersByCategory","deleteAllNumberByObject","Filter","updateHoleList","listFilter","bedroomCount","hotels_list","filteredHotels","initFilter","typeObject","reviewScore","distance","stars","politicalCancel","nutrition","shortFacilities","initFilterHandler","handleCategoryChange","idElement","idBlock","chooseParamHandler","newTypeObject","cat","typeObjectHandler","handleFilterChange","newStars","starsHandler","newReviewScore","reviewScoreHandler","newDistance","distanceHandler","newPoliticalCancel","politicalCancelHandler","newNutrition","nutritionHandler","newShortFacilities","shortFacilitiesHandler","filterObjectPrice","NumberService","updatedFilteredHotels","hotel","property_type","rating","political_cancel","newArray","handlerCountHotels","updateFilteredData","addDelBedrooms","action","updatedFilteredHotelsBedroom","listNumber","filterObjectBedRooms","bedroomSort","bedroom","countBedrooms","handlerAddBedroom","handlerDelBedroom","resetParamsHandler","resetParamHandler","Icon24SlidersVerticalOutline","currentTarget","options","option","checked","disabled","Rating","countReviews","textShadow","getAllFavorites","createFavorite","dataFavorite","deleteFavorite","getCurrentDate","currentDate","String","padStart","SliderMini","photoHotel","minWidth","setCount","favorite","setFavorite","arrayImage","setArrayImage","isAuth","navigate","useNavigate","loadFavorite","FavoriteService","url","maxWidth","no_photo","some","fav","removeFavorite","addFavorite","uuidv4","prevFavorite","Icon24LikeOutline","handlerBack","prevCount","Icon24BrowserBack","handlerForward","Icon24BrowserForward","Icon24RadioOn","Icon24RadioOff","formatMoney","str","dotIndex","indexOf","commaIndex","integerPart","decimalPart","getAllPhotosObject","createPhotoObject","objectPhotos","deletePhotoObject","idImg","deleteAllPhotosObject","getAllRatingObject","getAllCityRatingObject","createRatingObject","HotelCard","toggleDrawerMap","nearMetro","address","hotelCity","showMetro","metroShow","dataNumbersList","setObjectPhotos","averagePrice","setAveragePrice","setRating","ratingObject","setRatingObject","ratingCount","setRatingCount","hotels_item","roundToOneDecimal","num","round","RatingService","ratings","reduce","acc","cleanliness","mood","timelyCheckIn","priceQuality","photoMatch","qualityService","Object","keys","forEach","totalRating","averageRating","values","curr","calculateTotalRating","PhotoObjectService","filteredPrices","minPrice","showHotelOnMap","showPlaceMarkHandler","chooseHotelMore","loadNumberListModalHandler","alignContent","overflowWrap","metro","showHotelOnMapDesktop","fontWeight","ButtonPage","itemPage","pageCount","pages","_","choosePage","flexShrink","BalloonYandexMap","dataHotelHandler","HotelMap","loadingMap","activePortal","setActivePortal","idHotel","setIdHotel","locationMap","locationJsonParse","mapState","center","Portal","getHTMLElementId","mount","document","getElementById","el","createElement","appendChild","removeChild","createPortal","handlePlacemarkClick","YMaps","preload","query","Spinner","Map","defaultState","modules","ZoomControl","float","FullscreenControl","Placemark","geometry","properties","hintContent","balloonContent","iconLayout","iconImageSize","iconImageHref","Sort","handleSort","dataHotel","setDataHotel","active","setActive","dataHotelsList","showHotelMapHandler","sortPage","res","countPage","stepStart","stepEnd","hotels","countPageHandler","dataHotelsListHandler","baseData","activeButtonSort","sortedOnPrice","sorted","sort","a","b","last_price_info","sortedOnReviews","sortedOnReviewsAndPrice","reviews","HotelAndMap","startIndex","endIndex","currentData","loadingHotelList","dataBanner","cityId","text","piter","setWidth","window","innerWidth","setHeight","innerHeight","isOpen","setIsOpen","isOpenMap","setIsOpenMap","handleResize","addEventListener","removeEventListener","useLocation","handleBackButton","unlisten","Icon24DismissSubstract","widtth","Icon24Filter","Icon24ArticleBoxOutline","overflowY","overflowX","HeaderHotelNumber","dataHotelNumber","Icon24ShareExternalOutline","SliderBig","_arrayImage$count","photos","imageArray","idx","useCallback","currentImage","getAllCategoryNumber","getOneCategoryNumber","createCategoryNumber","categoryData","updateCategory","updateCategoryNumber","condition","updateCategoryNumberLimit","categoryLimitId","deleteCategoryNumber","deleteAllCategoryNumber","getAllPhotosCategoryNumber","getAllPhotosNumber","createNumberPhotos","numberPhotos","deleteNumberPhoto","deleteAllNumberPhotos","deleteAllCategoryNumberPhotos","deleteAllObjectNumberPhotos","optionCheckBoxRoomAmenities","optionCheckBoxShortFacilities","optionCheckBoxPropertyRules","optionPayBooking","optionPrepayment","MoreNumberItem","sale","setSale","filterFacilities","setFilterFacilities","openMoreNumber","newFilterRules","roomAmenitiesOption","rule","Boolean","PhotoNumberService","CategoryService","listCategory","checkDateRangeForSale","checkInDate","checkOutDate","saleValue","openMoreNumberHandler","dataHotelUserHandler","Icon24BriefcaseOutline","Icon20Users3Outline","Icon20MoneyCircleOutline","textDecorationLine","GREEN","Icon20HomeOutline","area","Icon24ArmchairOutline","Icon28RssFeedOutline","wifth","has_wifi","Icon28CheckCircleOutline","wordBreak","transform","bgcolor","p","MoreNumber","loadMoreNumberModalHandler","closeMobileCodeModal","Modal","Icon24Cancel","ListNumberCard","hasWiFi","category","setCategory","openNumberListHandler","setCategoryIdHandler","setNumberHandler","bookingNumber","setCategoryHandler","setDataObjectBooking","setNumberBookingHandler","flexWrap","Icon24MoneyTransfer","GREY_BANNER","Icon20More","NumberList","openNumberList","loadNumberListModal","QuickBooking","setPhone","checkPhone","setCheckPhone","dataClient","isOpenBooking","setIsOpenBooking","toggleDrawerBooking","openListNumber","regex","bookingHandler","test","phoneUserHandler","linkUserHandler","InputMask","mask","Icon24FlashOutline","DescriptionHotel","description","HotelRules","filterRules","setFilterRules","propertyRules","minimumNightStay","Icon24ErrorCircleOutline","GuestHotelNumber","styles_content","CheckAvailability","dataNumbers","resultNumb","handlerCheckedPlace","loadingNumberListHandler","Icon24CalendarOutline","Icon28SyncOutline","Icon24Search","Availability","loadingNumberList","HotelAmenities","GuestRating","nameRating","BookingService","getAllBooking","getAllBookingByObject","getBooking","createBooking","dataBooking","updateUser","updateBooking","deleteBooking","userUpdate","Review","bookingId","flaws","dignity","setBooking","Number","nameNumber","Icon24AddCircleOutline","Icon28RemoveCircleOutline","ReviewClients","review","HotelAddressOnMap","HotelNumber","setDataHotelNumber","passwordRules","basicSchema","yup","shape","matches","confirmPassword","oneOf","loginSchema","email_login","password_login","username","jobType","acceptedTos","ResetPassword","resetPassword","resetPasswordHandler","Icon24Refresh","VerifedEmail","verifedEmail","verifedEmailHandler","Icon28CheckCircleFill","ResetPasswordLogIn","resetPasswordLogIn","errorLogIn","setErrorLogIn","errorEmail","setErrorEmail","sendEmail","setSendEmail","resetEmailSchema","resetPasswordLogInHandler","Formik","initialValues","validationSchema","onSubmit","isSubmitting","Form","Field","ErrorMessage","component","LoginForm","errorVetific","setErrorVetific","errors","touched","handleBlur","handleSubmit","useFormik","actions","login","loginSuccess","handlerLoadingStartPage","Promise","resolve","Login","RegistrationForm","phoneUser","checkedPersonData","setCheckedPersonData","emailUsed","setEmailUsed","lastName","note","isActivated","isConfirmPhone","codeConfirmForPhone","twoStepVerification","twoStepVerificationType","activationLink","registration","Registration","selectedOption","setFilterObject","setOptionCity","loadDataObject","loadData","typeData","setTypeObj","setSelectedOption","chooseStatus","binding","toggling","getAllUsersYooking","getUserYooking","updateUserYooking","dataUserYooking","generateCode","generateNumericId","random","ContactData","dataNumberBooking","dataObjectBooking","dataCategoryBooking","user","setUser","setName","setLastName","setEmail","prepayment","setPrepayment","typePayment","setTypePayment","bookingAllId","setBookingAllId","bookingAll","setBookingAll","msg","setMsg","isMsg","setIsMsg","dateError","setDateError","successData","setSuccessData","UsersService","newArrayId","msgSave","errorChecked","field","hasError","setError","isCheckedDate","currentCheckInDate","currentCheckOutDate","validate","validateName","validateLastName","notOneOf","validateAllData","errorValues","idList","newId","nameObject","categoryName","checkInTime","checkOutTime","amount","priceNumber","isArray","setDataBookingHandler","CustomSelect","PersonalArea","Favorite","setObject","setDataNumbersList","Icon24ListBulletOutline","Icon24Delete","ListFavoriteUser","loaderFavoriteAndBooking","loaderFavoriteAndBookingHandler","FavoriteUserHotel","EditUserContactData","saveData","setSaveData","nameValue","setNameValue","setCity","lastNameValue","setLastNameValue","setPhoneUser","emailUser","setEmailUser","setIsConfirmPhone","confirmPhone","setConfirmPhone","setCodeConfirmForPhone","codeConfirmForPhoneInput","setCodeConfirmForPhoneInput","userYooking","setUserYooking","updateUserExtranet","setNameInputChange","setLastNameInputChange","setCityInputChange","setCodeConfirm","codeConfirm","saveSettingProfile","Icon24Done","EditUserData","FinishedBooking","finishedBooking","finishedBookingHandler","Icon24CheckCircleFilledBlue","Booking","setNumber","photosNumber","setPhotosNumber","filteredNumbers","moreNumber","cancelBooking","updateUserBookingList","updatedBookingList","Icon20CancelCircleFillRed","ListBookingUser","setBookingList","BookingUser","StartingPage","fontSize","PayForm","payHandler","Pay","refresh","authChecked","Routes","Route","element","ErrorPage"],"sourceRoot":""}